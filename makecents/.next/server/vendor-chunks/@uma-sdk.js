"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@uma-sdk";
exports.ids = ["vendor-chunks/@uma-sdk"];
exports.modules = {

/***/ "(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/link-DaH_InAP.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@uma-sdk/uma-auth-client/dist/link-DaH_InAP.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   l: () => (/* binding */ Nr)\n/* harmony export */ });\n/* harmony import */ var _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main-BAWg-Pqh.js */ \"(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/main-BAWg-Pqh.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction Bt(a, e) {\n    for(var n = 0; n < e.length; n++){\n        const s = e[n];\n        if (typeof s != \"string\" && !Array.isArray(s)) {\n            for(const t in s)if (t !== \"default\" && !(t in a)) {\n                const o = Object.getOwnPropertyDescriptor(s, t);\n                o && Object.defineProperty(a, t, o.get ? o : {\n                    enumerable: !0,\n                    get: ()=>s[t]\n                });\n            }\n        }\n    }\n    return Object.freeze(Object.defineProperty(a, Symbol.toStringTag, {\n        value: \"Module\"\n    }));\n}\nvar ze = {\n    exports: {}\n}, G = {};\nG._ = G._interop_require_default = Vt;\nfunction Vt(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n}\nvar Y = {\n    exports: {}\n}, _e = {}, Qe;\nfunction Mt() {\n    return Qe || (Qe = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        });\n        function e(i, r) {\n            for(var u in r)Object.defineProperty(i, u, {\n                enumerable: !0,\n                get: r[u]\n            });\n        }\n        e(a, {\n            searchParamsToUrlQuery: function() {\n                return n;\n            },\n            urlQueryToSearchParams: function() {\n                return t;\n            },\n            assign: function() {\n                return o;\n            }\n        });\n        function n(i) {\n            const r = {};\n            return i.forEach((u, c)=>{\n                typeof r[c] > \"u\" ? r[c] = u : Array.isArray(r[c]) ? r[c].push(u) : r[c] = [\n                    r[c],\n                    u\n                ];\n            }), r;\n        }\n        function s(i) {\n            return typeof i == \"string\" || typeof i == \"number\" && !isNaN(i) || typeof i == \"boolean\" ? String(i) : \"\";\n        }\n        function t(i) {\n            const r = new URLSearchParams();\n            return Object.entries(i).forEach((u)=>{\n                let [c, l] = u;\n                Array.isArray(l) ? l.forEach((d)=>r.append(c, s(d))) : r.set(c, s(l));\n            }), r;\n        }\n        function o(i) {\n            for(var r = arguments.length, u = new Array(r > 1 ? r - 1 : 0), c = 1; c < r; c++)u[c - 1] = arguments[c];\n            return u.forEach((l)=>{\n                Array.from(l.keys()).forEach((d)=>i.delete(d)), l.forEach((d, p)=>i.append(p, d));\n            }), i;\n        }\n    }(_e)), _e;\n}\nvar me = {}, Z = {}, Ye;\nfunction Ft() {\n    if (Ye) return Z;\n    Ye = 1;\n    function a(n) {\n        if (typeof WeakMap != \"function\") return null;\n        var s = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();\n        return (a = function(o) {\n            return o ? t : s;\n        })(n);\n    }\n    Z._ = Z._interop_require_wildcard = e;\n    function e(n, s) {\n        if (!s && n && n.__esModule) return n;\n        if (n === null || typeof n != \"object\" && typeof n != \"function\") return {\n            default: n\n        };\n        var t = a(s);\n        if (t && t.has(n)) return t.get(n);\n        var o = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var r in n)if (r !== \"default\" && Object.prototype.hasOwnProperty.call(n, r)) {\n            var u = i ? Object.getOwnPropertyDescriptor(n, r) : null;\n            u && (u.get || u.set) ? Object.defineProperty(o, r, u) : o[r] = n[r];\n        }\n        return o.default = n, t && t.set(n, o), o;\n    }\n    return Z;\n}\nvar Ze;\nfunction Ct() {\n    return Ze || (Ze = 1, function(a) {\n        var e = {};\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        });\n        function n(c, l) {\n            for(var d in l)Object.defineProperty(c, d, {\n                enumerable: !0,\n                get: l[d]\n            });\n        }\n        n(a, {\n            formatUrl: function() {\n                return i;\n            },\n            urlObjectKeys: function() {\n                return r;\n            },\n            formatWithValidation: function() {\n                return u;\n            }\n        });\n        const t = /* @__PURE__ */ Ft()._(Mt()), o = /https?|ftp|gopher|file/;\n        function i(c) {\n            let { auth: l, hostname: d } = c, p = c.protocol || \"\", g = c.pathname || \"\", E = c.hash || \"\", f = c.query || \"\", _ = !1;\n            l = l ? encodeURIComponent(l).replace(/%3A/i, \":\") + \"@\" : \"\", c.host ? _ = l + c.host : d && (_ = l + (~d.indexOf(\":\") ? \"[\" + d + \"]\" : d), c.port && (_ += \":\" + c.port)), f && typeof f == \"object\" && (f = String(t.urlQueryToSearchParams(f)));\n            let m = c.search || f && \"?\" + f || \"\";\n            return p && !p.endsWith(\":\") && (p += \":\"), c.slashes || (!p || o.test(p)) && _ !== !1 ? (_ = \"//\" + (_ || \"\"), g && g[0] !== \"/\" && (g = \"/\" + g)) : _ || (_ = \"\"), E && E[0] !== \"#\" && (E = \"#\" + E), m && m[0] !== \"?\" && (m = \"?\" + m), g = g.replace(/[?#]/g, encodeURIComponent), m = m.replace(\"#\", \"%23\"), \"\" + p + _ + g + m + E;\n        }\n        const r = [\n            \"auth\",\n            \"hash\",\n            \"host\",\n            \"hostname\",\n            \"href\",\n            \"path\",\n            \"pathname\",\n            \"port\",\n            \"protocol\",\n            \"query\",\n            \"search\",\n            \"slashes\"\n        ];\n        function u(c) {\n            return e.NODE_ENV === \"development\" && c !== null && typeof c == \"object\" && Object.keys(c).forEach((l)=>{\n                r.includes(l) || console.warn(\"Unknown key passed via urlObject into url.format: \" + l);\n            }), i(c);\n        }\n    }(me)), me;\n}\nvar ge = {}, Je;\nfunction Kt() {\n    return Je || (Je = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"omit\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            }\n        });\n        function e(n, s) {\n            const t = {};\n            return Object.keys(n).forEach((o)=>{\n                s.includes(o) || (t[o] = n[o]);\n            }), t;\n        }\n    }(ge)), ge;\n}\nvar ye = {}, et;\nfunction le() {\n    return et || (et = 1, function(a) {\n        var e = {};\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        });\n        function n(y, v) {\n            for(var h in v)Object.defineProperty(y, h, {\n                enumerable: !0,\n                get: v[h]\n            });\n        }\n        n(a, {\n            WEB_VITALS: function() {\n                return s;\n            },\n            execOnce: function() {\n                return t;\n            },\n            isAbsoluteUrl: function() {\n                return i;\n            },\n            getLocationOrigin: function() {\n                return r;\n            },\n            getURL: function() {\n                return u;\n            },\n            getDisplayName: function() {\n                return c;\n            },\n            isResSent: function() {\n                return l;\n            },\n            normalizeRepeatedSlashes: function() {\n                return d;\n            },\n            loadGetInitialProps: function() {\n                return p;\n            },\n            SP: function() {\n                return g;\n            },\n            ST: function() {\n                return E;\n            },\n            DecodeError: function() {\n                return f;\n            },\n            NormalizeError: function() {\n                return _;\n            },\n            PageNotFoundError: function() {\n                return m;\n            },\n            MissingStaticPage: function() {\n                return T;\n            },\n            MiddlewareNotFoundError: function() {\n                return P;\n            },\n            stringifyError: function() {\n                return w;\n            }\n        });\n        const s = [\n            \"CLS\",\n            \"FCP\",\n            \"FID\",\n            \"INP\",\n            \"LCP\",\n            \"TTFB\"\n        ];\n        function t(y) {\n            let v = !1, h;\n            return function() {\n                for(var R = arguments.length, j = new Array(R), N = 0; N < R; N++)j[N] = arguments[N];\n                return v || (v = !0, h = y(...j)), h;\n            };\n        }\n        const o = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/, i = (y)=>o.test(y);\n        function r() {\n            const { protocol: y, hostname: v, port: h } = window.location;\n            return y + \"//\" + v + (h ? \":\" + h : \"\");\n        }\n        function u() {\n            const { href: y } = window.location, v = r();\n            return y.substring(v.length);\n        }\n        function c(y) {\n            return typeof y == \"string\" ? y : y.displayName || y.name || \"Unknown\";\n        }\n        function l(y) {\n            return y.finished || y.headersSent;\n        }\n        function d(y) {\n            const v = y.split(\"?\");\n            return v[0].replace(/\\\\/g, \"/\").replace(/\\/\\/+/g, \"/\") + (v[1] ? \"?\" + v.slice(1).join(\"?\") : \"\");\n        }\n        async function p(y, v) {\n            if (e.NODE_ENV !== \"production\") {\n                var h;\n                if ((h = y.prototype) != null && h.getInitialProps) {\n                    const N = '\"' + c(y) + '.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';\n                    throw new Error(N);\n                }\n            }\n            const R = v.res || v.ctx && v.ctx.res;\n            if (!y.getInitialProps) return v.ctx && v.Component ? {\n                pageProps: await p(v.Component, v.ctx)\n            } : {};\n            const j = await y.getInitialProps(v);\n            if (R && l(R)) return j;\n            if (!j) {\n                const N = '\"' + c(y) + '.getInitialProps()\" should resolve to an object. But found \"' + j + '\" instead.';\n                throw new Error(N);\n            }\n            return e.NODE_ENV !== \"production\" && Object.keys(j).length === 0 && !v.ctx && console.warn(\"\" + c(y) + \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\"), j;\n        }\n        const g = typeof performance < \"u\", E = g && [\n            \"mark\",\n            \"measure\",\n            \"getEntriesByName\"\n        ].every((y)=>typeof performance[y] == \"function\");\n        class f extends Error {\n        }\n        class _ extends Error {\n        }\n        class m extends Error {\n            constructor(v){\n                super(), this.code = \"ENOENT\", this.name = \"PageNotFoundError\", this.message = \"Cannot find module for page: \" + v;\n            }\n        }\n        class T extends Error {\n            constructor(v, h){\n                super(), this.message = \"Failed to load static file for page: \" + v + \" \" + h;\n            }\n        }\n        class P extends Error {\n            constructor(){\n                super(), this.code = \"ENOENT\", this.message = \"Cannot find the middleware module\";\n            }\n        }\n        function w(y) {\n            return JSON.stringify({\n                message: y.message,\n                stack: y.stack\n            });\n        }\n    }(ye)), ye;\n}\nvar J = {\n    exports: {}\n}, ve = {}, tt;\nfunction At() {\n    return tt || (tt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"removeTrailingSlash\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            }\n        });\n        function e(n) {\n            return n.replace(/\\/$/, \"\") || \"/\";\n        }\n    }(ve)), ve;\n}\nvar Pe = {}, rt;\nfunction He() {\n    return rt || (rt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"parsePath\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            }\n        });\n        function e(n) {\n            const s = n.indexOf(\"#\"), t = n.indexOf(\"?\"), o = t > -1 && (s < 0 || t < s);\n            return o || s > -1 ? {\n                pathname: n.substring(0, o ? t : s),\n                query: o ? n.substring(t, s > -1 ? s : void 0) : \"\",\n                hash: s > -1 ? n.slice(s) : \"\"\n            } : {\n                pathname: n,\n                query: \"\",\n                hash: \"\"\n            };\n        }\n    }(Pe)), Pe;\n}\nvar nt;\nfunction fe() {\n    return nt || (nt = 1, function(a, e) {\n        var n = {};\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"normalizePathTrailingSlash\", {\n            enumerable: !0,\n            get: function() {\n                return o;\n            }\n        });\n        const s = At(), t = He(), o = (i)=>{\n            if (!i.startsWith(\"/\") || n.__NEXT_MANUAL_TRAILING_SLASH) return i;\n            const { pathname: r, query: u, hash: c } = (0, t.parsePath)(i);\n            return n.__NEXT_TRAILING_SLASH ? /\\.[^/]+\\/?$/.test(r) ? \"\" + (0, s.removeTrailingSlash)(r) + u + c : r.endsWith(\"/\") ? \"\" + r + u + c : r + \"/\" + u + c : \"\" + (0, s.removeTrailingSlash)(r) + u + c;\n        };\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(J, J.exports)), J.exports;\n}\nvar Re = {}, ee = {\n    exports: {}\n}, be = {}, ot;\nfunction Dt() {\n    return ot || (ot = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"pathHasPrefix\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            }\n        });\n        const e = He();\n        function n(s, t) {\n            if (typeof s != \"string\") return !1;\n            const { pathname: o } = (0, e.parsePath)(s);\n            return o === t || o.startsWith(t + \"/\");\n        }\n    }(be)), be;\n}\nvar it;\nfunction Gt() {\n    return it || (it = 1, function(a, e) {\n        var n = {};\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"hasBasePath\", {\n            enumerable: !0,\n            get: function() {\n                return o;\n            }\n        });\n        const s = Dt(), t = n.__NEXT_ROUTER_BASEPATH || \"\";\n        function o(i) {\n            return (0, s.pathHasPrefix)(i, t);\n        }\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(ee, ee.exports)), ee.exports;\n}\nvar at;\nfunction Ut() {\n    return at || (at = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"isLocalURL\", {\n            enumerable: !0,\n            get: function() {\n                return s;\n            }\n        });\n        const e = le(), n = Gt();\n        function s(t) {\n            if (!(0, e.isAbsoluteUrl)(t)) return !0;\n            try {\n                const o = (0, e.getLocationOrigin)(), i = new URL(t, o);\n                return i.origin === o && (0, n.hasBasePath)(i.pathname);\n            } catch  {\n                return !1;\n            }\n        }\n    }(Re)), Re;\n}\nvar Ee = {}, Oe = {}, ut;\nfunction Xt() {\n    return ut || (ut = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"getSortedRoutes\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            }\n        });\n        class e {\n            insert(t) {\n                this._insert(t.split(\"/\").filter(Boolean), [], !1);\n            }\n            smoosh() {\n                return this._smoosh();\n            }\n            _smoosh(t) {\n                t === void 0 && (t = \"/\");\n                const o = [\n                    ...this.children.keys()\n                ].sort();\n                this.slugName !== null && o.splice(o.indexOf(\"[]\"), 1), this.restSlugName !== null && o.splice(o.indexOf(\"[...]\"), 1), this.optionalRestSlugName !== null && o.splice(o.indexOf(\"[[...]]\"), 1);\n                const i = o.map((r)=>this.children.get(r)._smoosh(\"\" + t + r + \"/\")).reduce((r, u)=>[\n                        ...r,\n                        ...u\n                    ], []);\n                if (this.slugName !== null && i.push(...this.children.get(\"[]\")._smoosh(t + \"[\" + this.slugName + \"]/\")), !this.placeholder) {\n                    const r = t === \"/\" ? \"/\" : t.slice(0, -1);\n                    if (this.optionalRestSlugName != null) throw new Error('You cannot define a route with the same specificity as a optional catch-all route (\"' + r + '\" and \"' + r + \"[[...\" + this.optionalRestSlugName + ']]\").');\n                    i.unshift(r);\n                }\n                return this.restSlugName !== null && i.push(...this.children.get(\"[...]\")._smoosh(t + \"[...\" + this.restSlugName + \"]/\")), this.optionalRestSlugName !== null && i.push(...this.children.get(\"[[...]]\")._smoosh(t + \"[[...\" + this.optionalRestSlugName + \"]]/\")), i;\n            }\n            _insert(t, o, i) {\n                if (t.length === 0) {\n                    this.placeholder = !1;\n                    return;\n                }\n                if (i) throw new Error(\"Catch-all must be the last part of the URL.\");\n                let r = t[0];\n                if (r.startsWith(\"[\") && r.endsWith(\"]\")) {\n                    let l = function(d, p) {\n                        if (d !== null && d !== p) throw new Error(\"You cannot use different slug names for the same dynamic path ('\" + d + \"' !== '\" + p + \"').\");\n                        o.forEach((g)=>{\n                            if (g === p) throw new Error('You cannot have the same slug name \"' + p + '\" repeat within a single dynamic path');\n                            if (g.replace(/\\W/g, \"\") === r.replace(/\\W/g, \"\")) throw new Error('You cannot have the slug names \"' + g + '\" and \"' + p + '\" differ only by non-word symbols within a single dynamic path');\n                        }), o.push(p);\n                    }, u = r.slice(1, -1), c = !1;\n                    if (u.startsWith(\"[\") && u.endsWith(\"]\") && (u = u.slice(1, -1), c = !0), u.startsWith(\"...\") && (u = u.substring(3), i = !0), u.startsWith(\"[\") || u.endsWith(\"]\")) throw new Error(\"Segment names may not start or end with extra brackets ('\" + u + \"').\");\n                    if (u.startsWith(\".\")) throw new Error(\"Segment names may not start with erroneous periods ('\" + u + \"').\");\n                    if (i) if (c) {\n                        if (this.restSlugName != null) throw new Error('You cannot use both an required and optional catch-all route at the same level (\"[...' + this.restSlugName + ']\" and \"' + t[0] + '\" ).');\n                        l(this.optionalRestSlugName, u), this.optionalRestSlugName = u, r = \"[[...]]\";\n                    } else {\n                        if (this.optionalRestSlugName != null) throw new Error('You cannot use both an optional and required catch-all route at the same level (\"[[...' + this.optionalRestSlugName + ']]\" and \"' + t[0] + '\").');\n                        l(this.restSlugName, u), this.restSlugName = u, r = \"[...]\";\n                    }\n                    else {\n                        if (c) throw new Error('Optional route parameters are not yet supported (\"' + t[0] + '\").');\n                        l(this.slugName, u), this.slugName = u, r = \"[]\";\n                    }\n                }\n                this.children.has(r) || this.children.set(r, new e()), this.children.get(r)._insert(t.slice(1), o, i);\n            }\n            constructor(){\n                this.placeholder = !0, this.children = /* @__PURE__ */ new Map(), this.slugName = null, this.restSlugName = null, this.optionalRestSlugName = null;\n            }\n        }\n        function n(s) {\n            const t = new e();\n            return s.forEach((o)=>t.insert(o)), t.smoosh();\n        }\n    }(Oe)), Oe;\n}\nvar we = {}, st;\nfunction Qt() {\n    return st || (st = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"isDynamicRoute\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            }\n        });\n        const e = /\\/\\[[^/]+?\\](?=\\/|$)/;\n        function n(s) {\n            return e.test(s);\n        }\n    }(we)), we;\n}\nvar ct;\nfunction Yt() {\n    return ct || (ct = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        });\n        function e(t, o) {\n            for(var i in o)Object.defineProperty(t, i, {\n                enumerable: !0,\n                get: o[i]\n            });\n        }\n        e(a, {\n            getSortedRoutes: function() {\n                return n.getSortedRoutes;\n            },\n            isDynamicRoute: function() {\n                return s.isDynamicRoute;\n            }\n        });\n        const n = Xt(), s = Qt();\n    }(Ee)), Ee;\n}\nvar Ne = {}, Te = {}, lt;\nfunction Zt() {\n    return lt || (lt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"getRouteMatcher\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            }\n        });\n        const e = le();\n        function n(s) {\n            let { re: t, groups: o } = s;\n            return (i)=>{\n                const r = t.exec(i);\n                if (!r) return !1;\n                const u = (l)=>{\n                    try {\n                        return decodeURIComponent(l);\n                    } catch  {\n                        throw new e.DecodeError(\"failed to decode param\");\n                    }\n                }, c = {};\n                return Object.keys(o).forEach((l)=>{\n                    const d = o[l], p = r[d.pos];\n                    p !== void 0 && (c[l] = ~p.indexOf(\"/\") ? p.split(\"/\").map((g)=>u(g)) : d.repeat ? [\n                        u(p)\n                    ] : u(p));\n                }), c;\n            };\n        }\n    }(Te)), Te;\n}\nvar je = {}, Se = {}, Le = {}, qe = {}, ft;\nfunction Jt() {\n    return ft || (ft = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"ensureLeadingSlash\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            }\n        });\n        function e(n) {\n            return n.startsWith(\"/\") ? n : \"/\" + n;\n        }\n    }(qe)), qe;\n}\nvar Ie = {}, dt;\nfunction er() {\n    return dt || (dt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"isGroupSegment\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            }\n        });\n        function e(n) {\n            return n[0] === \"(\" && n.endsWith(\")\");\n        }\n    }(Ie)), Ie;\n}\nvar ht;\nfunction tr() {\n    return ht || (ht = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        });\n        function e(i, r) {\n            for(var u in r)Object.defineProperty(i, u, {\n                enumerable: !0,\n                get: r[u]\n            });\n        }\n        e(a, {\n            normalizeAppPath: function() {\n                return t;\n            },\n            normalizeRscPath: function() {\n                return o;\n            }\n        });\n        const n = Jt(), s = er();\n        function t(i) {\n            return (0, n.ensureLeadingSlash)(i.split(\"/\").reduce((r, u, c, l)=>!u || (0, s.isGroupSegment)(u) || u[0] === \"@\" || (u === \"page\" || u === \"route\") && c === l.length - 1 ? r : r + \"/\" + u, \"\"));\n        }\n        function o(i, r) {\n            return r ? i.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n            \"$1\") : i;\n        }\n    }(Le)), Le;\n}\nvar pt;\nfunction rr() {\n    return pt || (pt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        });\n        function e(i, r) {\n            for(var u in r)Object.defineProperty(i, u, {\n                enumerable: !0,\n                get: r[u]\n            });\n        }\n        e(a, {\n            INTERCEPTION_ROUTE_MARKERS: function() {\n                return s;\n            },\n            isInterceptionRouteAppPath: function() {\n                return t;\n            },\n            extractInterceptionRouteInformation: function() {\n                return o;\n            }\n        });\n        const n = tr(), s = [\n            \"(..)(..)\",\n            \"(.)\",\n            \"(..)\",\n            \"(...)\"\n        ];\n        function t(i) {\n            return i.split(\"/\").find((r)=>s.find((u)=>r.startsWith(u))) !== void 0;\n        }\n        function o(i) {\n            let r, u, c;\n            for (const l of i.split(\"/\"))if (u = s.find((d)=>l.startsWith(d)), u) {\n                [r, c] = i.split(u, 2);\n                break;\n            }\n            if (!r || !u || !c) throw new Error(`Invalid interception route: ${i}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`);\n            switch(r = (0, n.normalizeAppPath)(r), u){\n                case \"(.)\":\n                    r === \"/\" ? c = `/${c}` : c = r + \"/\" + c;\n                    break;\n                case \"(..)\":\n                    if (r === \"/\") throw new Error(`Invalid interception route: ${i}. Cannot use (..) marker at the root level, use (.) instead.`);\n                    c = r.split(\"/\").slice(0, -1).concat(c).join(\"/\");\n                    break;\n                case \"(...)\":\n                    c = \"/\" + c;\n                    break;\n                case \"(..)(..)\":\n                    const l = r.split(\"/\");\n                    if (l.length <= 2) throw new Error(`Invalid interception route: ${i}. Cannot use (..)(..) marker at the root level or one level up.`);\n                    c = l.slice(0, -2).concat(c).join(\"/\");\n                    break;\n                default:\n                    throw new Error(\"Invariant: unexpected marker\");\n            }\n            return {\n                interceptingRoute: r,\n                interceptedRoute: c\n            };\n        }\n    }(Se)), Se;\n}\nvar Me = {}, _t;\nfunction nr() {\n    return _t || (_t = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"escapeStringRegexp\", {\n            enumerable: !0,\n            get: function() {\n                return s;\n            }\n        });\n        const e = /[|\\\\{}()[\\]^$+*?.-]/, n = /[|\\\\{}()[\\]^$+*?.-]/g;\n        function s(t) {\n            return e.test(t) ? t.replace(n, \"\\\\$&\") : t;\n        }\n    }(Me)), Me;\n}\nvar mt;\nfunction or() {\n    return mt || (mt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        });\n        function e(f, _) {\n            for(var m in _)Object.defineProperty(f, m, {\n                enumerable: !0,\n                get: _[m]\n            });\n        }\n        e(a, {\n            getRouteRegex: function() {\n                return c;\n            },\n            getNamedRouteRegex: function() {\n                return g;\n            },\n            getNamedMiddlewareRegex: function() {\n                return E;\n            }\n        });\n        const n = rr(), s = nr(), t = At(), o = \"nxtP\", i = \"nxtI\";\n        function r(f) {\n            const _ = f.startsWith(\"[\") && f.endsWith(\"]\");\n            _ && (f = f.slice(1, -1));\n            const m = f.startsWith(\"...\");\n            return m && (f = f.slice(3)), {\n                key: f,\n                repeat: m,\n                optional: _\n            };\n        }\n        function u(f) {\n            const _ = (0, t.removeTrailingSlash)(f).slice(1).split(\"/\"), m = {};\n            let T = 1;\n            return {\n                parameterizedRoute: _.map((P)=>{\n                    const w = n.INTERCEPTION_ROUTE_MARKERS.find((v)=>P.startsWith(v)), y = P.match(/\\[((?:\\[.*\\])|.+)\\]/);\n                    if (w && y) {\n                        const { key: v, optional: h, repeat: R } = r(y[1]);\n                        return m[v] = {\n                            pos: T++,\n                            repeat: R,\n                            optional: h\n                        }, \"/\" + (0, s.escapeStringRegexp)(w) + \"([^/]+?)\";\n                    } else if (y) {\n                        const { key: v, repeat: h, optional: R } = r(y[1]);\n                        return m[v] = {\n                            pos: T++,\n                            repeat: h,\n                            optional: R\n                        }, h ? R ? \"(?:/(.+?))?\" : \"/(.+?)\" : \"/([^/]+?)\";\n                    } else return \"/\" + (0, s.escapeStringRegexp)(P);\n                }).join(\"\"),\n                groups: m\n            };\n        }\n        function c(f) {\n            const { parameterizedRoute: _, groups: m } = u(f);\n            return {\n                re: new RegExp(\"^\" + _ + \"(?:/)?$\"),\n                groups: m\n            };\n        }\n        function l() {\n            let f = 0;\n            return ()=>{\n                let _ = \"\", m = ++f;\n                for(; m > 0;)_ += String.fromCharCode(97 + (m - 1) % 26), m = Math.floor((m - 1) / 26);\n                return _;\n            };\n        }\n        function d(f) {\n            let { getSafeRouteKey: _, segment: m, routeKeys: T, keyPrefix: P } = f;\n            const { key: w, optional: y, repeat: v } = r(m);\n            let h = w.replace(/\\W/g, \"\");\n            P && (h = \"\" + P + h);\n            let R = !1;\n            return (h.length === 0 || h.length > 30) && (R = !0), isNaN(parseInt(h.slice(0, 1))) || (R = !0), R && (h = _()), P ? T[h] = \"\" + P + w : T[h] = \"\" + w, v ? y ? \"(?:/(?<\" + h + \">.+?))?\" : \"/(?<\" + h + \">.+?)\" : \"/(?<\" + h + \">[^/]+?)\";\n        }\n        function p(f, _) {\n            const m = (0, t.removeTrailingSlash)(f).slice(1).split(\"/\"), T = l(), P = {};\n            return {\n                namedParameterizedRoute: m.map((w)=>{\n                    const y = n.INTERCEPTION_ROUTE_MARKERS.some((h)=>w.startsWith(h)), v = w.match(/\\[((?:\\[.*\\])|.+)\\]/);\n                    return y && v ? d({\n                        getSafeRouteKey: T,\n                        segment: v[1],\n                        routeKeys: P,\n                        keyPrefix: _ ? i : void 0\n                    }) : v ? d({\n                        getSafeRouteKey: T,\n                        segment: v[1],\n                        routeKeys: P,\n                        keyPrefix: _ ? o : void 0\n                    }) : \"/\" + (0, s.escapeStringRegexp)(w);\n                }).join(\"\"),\n                routeKeys: P\n            };\n        }\n        function g(f, _) {\n            const m = p(f, _);\n            return {\n                ...c(f),\n                namedRegex: \"^\" + m.namedParameterizedRoute + \"(?:/)?$\",\n                routeKeys: m.routeKeys\n            };\n        }\n        function E(f, _) {\n            const { parameterizedRoute: m } = u(f), { catchAll: T = !0 } = _;\n            if (m === \"/\") return {\n                namedRegex: \"^/\" + (T ? \".*\" : \"\") + \"$\"\n            };\n            const { namedParameterizedRoute: P } = p(f, !1);\n            let w = T ? \"(?:(/.*)?)\" : \"\";\n            return {\n                namedRegex: \"^\" + P + w + \"$\"\n            };\n        }\n    }(je)), je;\n}\nvar gt;\nfunction ir() {\n    return gt || (gt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"interpolateAs\", {\n            enumerable: !0,\n            get: function() {\n                return s;\n            }\n        });\n        const e = Zt(), n = or();\n        function s(t, o, i) {\n            let r = \"\";\n            const u = (0, n.getRouteRegex)(t), c = u.groups, l = // Try to match the dynamic route against the asPath\n            (o !== t ? (0, e.getRouteMatcher)(u)(o) : \"\") || // Fall back to reading the values from the href\n            // TODO: should this take priority; also need to change in the router.\n            i;\n            r = t;\n            const d = Object.keys(c);\n            return d.every((p)=>{\n                let g = l[p] || \"\";\n                const { repeat: E, optional: f } = c[p];\n                let _ = \"[\" + (E ? \"...\" : \"\") + p + \"]\";\n                return f && (_ = (g ? \"\" : \"/\") + \"[\" + _ + \"]\"), E && !Array.isArray(g) && (g = [\n                    g\n                ]), (f || p in l) && // Interpolate group into data URL if present\n                (r = r.replace(_, E ? g.map(// these values should be fully encoded instead of just\n                // path delimiter escaped since they are being inserted\n                // into the URL and we expect URL encoded segments\n                // when parsing dynamic route params\n                (m)=>encodeURIComponent(m)).join(\"/\") : encodeURIComponent(g)) || \"/\");\n            }) || (r = \"\"), {\n                params: d,\n                result: r\n            };\n        }\n    }(Ne)), Ne;\n}\nvar yt;\nfunction ar() {\n    return yt || (yt = 1, function(a, e) {\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"resolveHref\", {\n            enumerable: !0,\n            get: function() {\n                return l;\n            }\n        });\n        const n = Mt(), s = Ct(), t = Kt(), o = le(), i = fe(), r = Ut(), u = Yt(), c = ir();\n        function l(d, p, g) {\n            let E, f = typeof p == \"string\" ? p : (0, s.formatWithValidation)(p);\n            const _ = f.match(/^[a-zA-Z]{1,}:\\/\\//), m = _ ? f.slice(_[0].length) : f;\n            if ((m.split(\"?\")[0] || \"\").match(/(\\/\\/|\\\\)/)) {\n                console.error(\"Invalid href '\" + f + \"' passed to next/router in page: '\" + d.pathname + \"'. Repeated forward-slashes (//) or backslashes \\\\ are not valid in the href.\");\n                const P = (0, o.normalizeRepeatedSlashes)(m);\n                f = (_ ? _[0] : \"\") + P;\n            }\n            if (!(0, r.isLocalURL)(f)) return g ? [\n                f\n            ] : f;\n            try {\n                E = new URL(f.startsWith(\"#\") ? d.asPath : d.pathname, \"http://n\");\n            } catch  {\n                E = new URL(\"/\", \"http://n\");\n            }\n            try {\n                const P = new URL(f, E);\n                P.pathname = (0, i.normalizePathTrailingSlash)(P.pathname);\n                let w = \"\";\n                if ((0, u.isDynamicRoute)(P.pathname) && P.searchParams && g) {\n                    const v = (0, n.searchParamsToUrlQuery)(P.searchParams), { result: h, params: R } = (0, c.interpolateAs)(P.pathname, P.pathname, v);\n                    h && (w = (0, s.formatWithValidation)({\n                        pathname: h,\n                        hash: P.hash,\n                        query: (0, t.omit)(v, R)\n                    }));\n                }\n                const y = P.origin === E.origin ? P.href.slice(P.origin.length) : P.href;\n                return g ? [\n                    y,\n                    w || y\n                ] : y;\n            } catch  {\n                return g ? [\n                    f\n                ] : f;\n            }\n        }\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(Y, Y.exports)), Y.exports;\n}\nvar te = {\n    exports: {}\n}, Ce = {}, Ae = {}, vt;\nfunction xt() {\n    return vt || (vt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"addPathPrefix\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            }\n        });\n        const e = He();\n        function n(s, t) {\n            if (!s.startsWith(\"/\") || !t) return s;\n            const { pathname: o, query: i, hash: r } = (0, e.parsePath)(s);\n            return \"\" + t + o + i + r;\n        }\n    }(Ae)), Ae;\n}\nvar Pt;\nfunction ur() {\n    return Pt || (Pt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"addLocale\", {\n            enumerable: !0,\n            get: function() {\n                return s;\n            }\n        });\n        const e = xt(), n = Dt();\n        function s(t, o, i, r) {\n            if (!o || o === i) return t;\n            const u = t.toLowerCase();\n            return !r && ((0, n.pathHasPrefix)(u, \"/api\") || (0, n.pathHasPrefix)(u, \"/\" + o.toLowerCase())) ? t : (0, e.addPathPrefix)(t, \"/\" + o);\n        }\n    }(Ce)), Ce;\n}\nvar Rt;\nfunction sr() {\n    return Rt || (Rt = 1, function(a, e) {\n        var n = {};\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"addLocale\", {\n            enumerable: !0,\n            get: function() {\n                return t;\n            }\n        });\n        const s = fe(), t = function(o) {\n            for(var i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), u = 1; u < i; u++)r[u - 1] = arguments[u];\n            return n.__NEXT_I18N_SUPPORT ? (0, s.normalizePathTrailingSlash)(ur().addLocale(o, ...r)) : o;\n        };\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(te, te.exports)), te.exports;\n}\nvar De = {}, bt;\nfunction cr() {\n    return bt || (bt = 1, function(a) {\n        var e = {};\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"RouterContext\", {\n            enumerable: !0,\n            get: function() {\n                return t;\n            }\n        });\n        const t = /* @__PURE__ */ G._(react__WEBPACK_IMPORTED_MODULE_1__).default.createContext(null);\n        e.NODE_ENV !== \"production\" && (t.displayName = \"RouterContext\");\n    }(De)), De;\n}\nvar Ue = {}, Et;\nfunction lr() {\n    return Et || (Et = 1, function(a) {\n        \"use client\";\n        var e = {};\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        });\n        function n(l, d) {\n            for(var p in d)Object.defineProperty(l, p, {\n                enumerable: !0,\n                get: d[p]\n            });\n        }\n        n(a, {\n            CacheStates: function() {\n                return o;\n            },\n            AppRouterContext: function() {\n                return i;\n            },\n            LayoutRouterContext: function() {\n                return r;\n            },\n            GlobalLayoutRouterContext: function() {\n                return u;\n            },\n            TemplateContext: function() {\n                return c;\n            }\n        });\n        const t = /* @__PURE__ */ G._(react__WEBPACK_IMPORTED_MODULE_1__);\n        var o;\n        (function(l) {\n            l.LAZY_INITIALIZED = \"LAZYINITIALIZED\", l.DATA_FETCH = \"DATAFETCH\", l.READY = \"READY\";\n        })(o || (o = {}));\n        const i = t.default.createContext(null), r = t.default.createContext(null), u = t.default.createContext(null), c = t.default.createContext(null);\n        e.NODE_ENV !== \"production\" && (i.displayName = \"AppRouterContext\", r.displayName = \"LayoutRouterContext\", u.displayName = \"GlobalLayoutRouterContext\", c.displayName = \"TemplateContext\");\n    }(Ue)), Ue;\n}\nvar re = {\n    exports: {}\n}, ne = {\n    exports: {}\n}, Ot;\nfunction fr() {\n    return Ot || (Ot = 1, function(a, e) {\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        });\n        function n(o, i) {\n            for(var r in i)Object.defineProperty(o, r, {\n                enumerable: !0,\n                get: i[r]\n            });\n        }\n        n(e, {\n            requestIdleCallback: function() {\n                return s;\n            },\n            cancelIdleCallback: function() {\n                return t;\n            }\n        });\n        const s = typeof self < \"u\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(o) {\n            let i = Date.now();\n            return self.setTimeout(function() {\n                o({\n                    didTimeout: !1,\n                    timeRemaining: function() {\n                        return Math.max(0, 50 - (Date.now() - i));\n                    }\n                });\n            }, 1);\n        }, t = typeof self < \"u\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(o) {\n            return clearTimeout(o);\n        };\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(ne, ne.exports)), ne.exports;\n}\nvar wt;\nfunction dr() {\n    return wt || (wt = 1, function(a, e) {\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"useIntersection\", {\n            enumerable: !0,\n            get: function() {\n                return c;\n            }\n        });\n        const n = react__WEBPACK_IMPORTED_MODULE_1__, s = fr(), t = typeof IntersectionObserver == \"function\", o = /* @__PURE__ */ new Map(), i = [];\n        function r(l) {\n            const d = {\n                root: l.root || null,\n                margin: l.rootMargin || \"\"\n            }, p = i.find((_)=>_.root === d.root && _.margin === d.margin);\n            let g;\n            if (p && (g = o.get(p), g)) return g;\n            const E = /* @__PURE__ */ new Map(), f = new IntersectionObserver((_)=>{\n                _.forEach((m)=>{\n                    const T = E.get(m.target), P = m.isIntersecting || m.intersectionRatio > 0;\n                    T && P && T(P);\n                });\n            }, l);\n            return g = {\n                id: d,\n                observer: f,\n                elements: E\n            }, i.push(d), o.set(d, g), g;\n        }\n        function u(l, d, p) {\n            const { id: g, observer: E, elements: f } = r(p);\n            return f.set(l, d), E.observe(l), function() {\n                if (f.delete(l), E.unobserve(l), f.size === 0) {\n                    E.disconnect(), o.delete(g);\n                    const m = i.findIndex((T)=>T.root === g.root && T.margin === g.margin);\n                    m > -1 && i.splice(m, 1);\n                }\n            };\n        }\n        function c(l) {\n            let { rootRef: d, rootMargin: p, disabled: g } = l;\n            const E = g || !t, [f, _] = (0, n.useState)(!1), m = (0, n.useRef)(null), T = (0, n.useCallback)((w)=>{\n                m.current = w;\n            }, []);\n            (0, n.useEffect)(()=>{\n                if (t) {\n                    if (E || f) return;\n                    const w = m.current;\n                    if (w && w.tagName) return u(w, (v)=>v && _(v), {\n                        root: d == null ? void 0 : d.current,\n                        rootMargin: p\n                    });\n                } else if (!f) {\n                    const w = (0, s.requestIdleCallback)(()=>_(!0));\n                    return ()=>(0, s.cancelIdleCallback)(w);\n                }\n            }, [\n                E,\n                p,\n                d,\n                f,\n                m.current\n            ]);\n            const P = (0, n.useCallback)(()=>{\n                _(!1);\n            }, []);\n            return [\n                T,\n                f,\n                P\n            ];\n        }\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(re, re.exports)), re.exports;\n}\nvar oe = {\n    exports: {}\n}, ie = {\n    exports: {}\n}, xe = {}, Nt;\nfunction hr() {\n    return Nt || (Nt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"normalizeLocalePath\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            }\n        });\n        function e(n, s) {\n            let t;\n            const o = n.split(\"/\");\n            return (s || []).some((i)=>o[1] && o[1].toLowerCase() === i.toLowerCase() ? (t = i, o.splice(1, 1), n = o.join(\"/\") || \"/\", !0) : !1), {\n                pathname: n,\n                detectedLocale: t\n            };\n        }\n    }(xe)), xe;\n}\nvar Tt;\nfunction pr() {\n    return Tt || (Tt = 1, function(a, e) {\n        var n = {};\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"normalizeLocalePath\", {\n            enumerable: !0,\n            get: function() {\n                return s;\n            }\n        });\n        const s = (t, o)=>n.__NEXT_I18N_SUPPORT ? hr().normalizeLocalePath(t, o) : {\n                pathname: t,\n                detectedLocale: void 0\n            };\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(ie, ie.exports)), ie.exports;\n}\nvar ae = {\n    exports: {}\n}, ke = {}, jt;\nfunction _r() {\n    return jt || (jt = 1, function(a) {\n        Object.defineProperty(a, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(a, \"detectDomainLocale\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            }\n        });\n        function e(n, s, t) {\n            if (n) {\n                t && (t = t.toLowerCase());\n                for (const r of n){\n                    var o, i;\n                    const u = (o = r.domain) == null ? void 0 : o.split(\":\")[0].toLowerCase();\n                    if (s === u || t === r.defaultLocale.toLowerCase() || (i = r.locales) != null && i.some((c)=>c.toLowerCase() === t)) return r;\n                }\n            }\n        }\n    }(ke)), ke;\n}\nvar St;\nfunction mr() {\n    return St || (St = 1, function(a, e) {\n        var n = {};\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"detectDomainLocale\", {\n            enumerable: !0,\n            get: function() {\n                return s;\n            }\n        });\n        const s = function() {\n            for(var t = arguments.length, o = new Array(t), i = 0; i < t; i++)o[i] = arguments[i];\n            if (n.__NEXT_I18N_SUPPORT) return _r().detectDomainLocale(...o);\n        };\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(ae, ae.exports)), ae.exports;\n}\nvar Lt;\nfunction gr() {\n    return Lt || (Lt = 1, function(a, e) {\n        var n = {};\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"getDomainLocale\", {\n            enumerable: !0,\n            get: function() {\n                return o;\n            }\n        });\n        const s = fe(), t = n.__NEXT_ROUTER_BASEPATH || \"\";\n        function o(i, r, u, c) {\n            if (n.__NEXT_I18N_SUPPORT) {\n                const l = pr().normalizeLocalePath, d = mr().detectDomainLocale, p = r || l(i, u).detectedLocale, g = d(c, void 0, p);\n                if (g) {\n                    const E = \"http\" + (g.http ? \"\" : \"s\") + \"://\", f = p === g.defaultLocale ? \"\" : \"/\" + p;\n                    return \"\" + E + g.domain + (0, s.normalizePathTrailingSlash)(\"\" + t + f + i);\n                }\n                return !1;\n            } else return !1;\n        }\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(oe, oe.exports)), oe.exports;\n}\nvar ue = {\n    exports: {}\n}, qt;\nfunction yr() {\n    return qt || (qt = 1, function(a, e) {\n        var n = {};\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        }), Object.defineProperty(e, \"addBasePath\", {\n            enumerable: !0,\n            get: function() {\n                return i;\n            }\n        });\n        const s = xt(), t = fe(), o = n.__NEXT_ROUTER_BASEPATH || \"\";\n        function i(r, u) {\n            return (0, t.normalizePathTrailingSlash)(n.__NEXT_MANUAL_CLIENT_BASE_PATH && !u ? r : (0, s.addPathPrefix)(r, o));\n        }\n        (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(ue, ue.exports)), ue.exports;\n}\nvar se = {\n    exports: {}\n}, It;\nfunction vr() {\n    return It || (It = 1, function(a, e) {\n        Object.defineProperty(e, \"__esModule\", {\n            value: !0\n        });\n        function n(d, p) {\n            for(var g in p)Object.defineProperty(d, g, {\n                enumerable: !0,\n                get: p[g]\n            });\n        }\n        n(e, {\n            PrefetchKind: function() {\n                return l;\n            },\n            ACTION_REFRESH: function() {\n                return s;\n            },\n            ACTION_NAVIGATE: function() {\n                return t;\n            },\n            ACTION_RESTORE: function() {\n                return o;\n            },\n            ACTION_SERVER_PATCH: function() {\n                return i;\n            },\n            ACTION_PREFETCH: function() {\n                return r;\n            },\n            ACTION_FAST_REFRESH: function() {\n                return u;\n            },\n            ACTION_SERVER_ACTION: function() {\n                return c;\n            }\n        });\n        const s = \"refresh\", t = \"navigate\", o = \"restore\", i = \"server-patch\", r = \"prefetch\", u = \"fast-refresh\", c = \"server-action\";\n        var l;\n        (function(d) {\n            d.AUTO = \"auto\", d.FULL = \"full\", d.TEMPORARY = \"temporary\";\n        })(l || (l = {})), (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n            value: !0\n        }), Object.assign(e.default, e), a.exports = e.default);\n    }(se, se.exports)), se.exports;\n}\n(function(a, e) {\n    \"use client\";\n    var n = {};\n    Object.defineProperty(e, \"__esModule\", {\n        value: !0\n    }), Object.defineProperty(e, \"default\", {\n        enumerable: !0,\n        get: function() {\n            return v;\n        }\n    });\n    const t = /* @__PURE__ */ G._(react__WEBPACK_IMPORTED_MODULE_1__), o = ar(), i = Ut(), r = Ct(), u = le(), c = sr(), l = cr(), d = lr(), p = dr(), g = gr(), E = yr(), f = vr(), _ = /* @__PURE__ */ new Set();\n    function m(h, R, j, N, L, M) {\n        if (true) return;\n        if (!N.bypassPrefetchedCheck) {\n            const z = // Let the link's locale prop override the default router locale.\n            typeof N.locale < \"u\" ? N.locale : \"locale\" in h ? h.locale : void 0, H = R + \"%\" + j + \"%\" + z;\n            if (_.has(H)) return;\n            _.add(H);\n        }\n        const W = M ? h.prefetch(R, L) : h.prefetch(R, j, N);\n        Promise.resolve(W).catch((z)=>{\n            if (n.NODE_ENV !== \"production\") throw z;\n        });\n    }\n    function T(h) {\n        const j = h.currentTarget.getAttribute(\"target\");\n        return j && j !== \"_self\" || h.metaKey || h.ctrlKey || h.shiftKey || h.altKey || // triggers resource download\n        h.nativeEvent && h.nativeEvent.which === 2;\n    }\n    function P(h, R, j, N, L, M, W, z, H, de) {\n        const { nodeName: he } = h.currentTarget;\n        if (he.toUpperCase() === \"A\" && (T(h) || // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n        !H && !(0, i.isLocalURL)(j))) return;\n        h.preventDefault();\n        const A = ()=>{\n            const $ = W ?? !0;\n            \"beforePopState\" in R ? R[L ? \"replace\" : \"push\"](j, N, {\n                shallow: M,\n                locale: z,\n                scroll: $\n            }) : R[L ? \"replace\" : \"push\"](N || j, {\n                forceOptimisticNavigation: !de,\n                scroll: $\n            });\n        };\n        H ? t.default.startTransition(A) : A();\n    }\n    function w(h) {\n        return typeof h == \"string\" ? h : (0, r.formatUrl)(h);\n    }\n    const v = /* @__PURE__ */ t.default.forwardRef(function(R, j) {\n        let N;\n        const { href: L, as: M, children: W, prefetch: z = null, passHref: H, replace: de, shallow: he, scroll: We, locale: A, onClick: $, onMouseEnter: pe, onTouchStart: $e, legacyBehavior: C = !1, ...zt } = R;\n        N = W, C && (typeof N == \"string\" || typeof N == \"number\") && (N = /* @__PURE__ */ t.default.createElement(\"a\", null, N));\n        const S = t.default.useContext(l.RouterContext), Ht = t.default.useContext(d.AppRouterContext), D = S ?? Ht, U = !S, F = z !== !1, X = z === null ? f.PrefetchKind.AUTO : f.PrefetchKind.FULL;\n        if (n.NODE_ENV !== \"production\") {\n            let b = function(O) {\n                return new Error(\"Failed prop type: The prop `\" + O.key + \"` expects a \" + O.expected + \" in `<Link>`, but got `\" + O.actual + \"` instead.\" + ( false ? 0 : \"\"));\n            };\n            Object.keys({\n                href: !0\n            }).forEach((O)=>{\n                if (O === \"href\" && (R[O] == null || typeof R[O] != \"string\" && typeof R[O] != \"object\")) throw b({\n                    key: O,\n                    expected: \"`string` or `object`\",\n                    actual: R[O] === null ? \"null\" : typeof R[O]\n                });\n            }), Object.keys({\n                as: !0,\n                replace: !0,\n                scroll: !0,\n                shallow: !0,\n                passHref: !0,\n                prefetch: !0,\n                locale: !0,\n                onClick: !0,\n                onMouseEnter: !0,\n                onTouchStart: !0,\n                legacyBehavior: !0\n            }).forEach((O)=>{\n                const k = typeof R[O];\n                if (O === \"as\") {\n                    if (R[O] && k !== \"string\" && k !== \"object\") throw b({\n                        key: O,\n                        expected: \"`string` or `object`\",\n                        actual: k\n                    });\n                } else if (O === \"locale\") {\n                    if (R[O] && k !== \"string\") throw b({\n                        key: O,\n                        expected: \"`string`\",\n                        actual: k\n                    });\n                } else if (O === \"onClick\" || O === \"onMouseEnter\" || O === \"onTouchStart\") {\n                    if (R[O] && k !== \"function\") throw b({\n                        key: O,\n                        expected: \"`function`\",\n                        actual: k\n                    });\n                } else if ((O === \"replace\" || O === \"scroll\" || O === \"shallow\" || O === \"passHref\" || O === \"prefetch\" || O === \"legacyBehavior\") && R[O] != null && k !== \"boolean\") throw b({\n                    key: O,\n                    expected: \"`boolean`\",\n                    actual: k\n                });\n            });\n            const Xe = t.default.useRef(!1);\n            R.prefetch && !Xe.current && !U && (Xe.current = !0, console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\"));\n        }\n        if (n.NODE_ENV !== \"production\" && U && !M) {\n            let b;\n            if (typeof L == \"string\" ? b = L : typeof L == \"object\" && typeof L.pathname == \"string\" && (b = L.pathname), b && b.split(\"/\").some((V)=>V.startsWith(\"[\") && V.endsWith(\"]\"))) throw new Error(\"Dynamic href `\" + b + \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\");\n        }\n        const { href: x, as: I } = t.default.useMemo(()=>{\n            if (!S) {\n                const V = w(L);\n                return {\n                    href: V,\n                    as: M ? w(M) : V\n                };\n            }\n            const [b, K] = (0, o.resolveHref)(S, L, !0);\n            return {\n                href: b,\n                as: M ? (0, o.resolveHref)(S, M) : K || b\n            };\n        }, [\n            S,\n            L,\n            M\n        ]), Be = t.default.useRef(x), Ve = t.default.useRef(I);\n        let q;\n        if (C) if (n.NODE_ENV === \"development\") {\n            $ && console.warn('\"onClick\" was passed to <Link> with `href` of `' + L + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link'), pe && console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + L + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n            try {\n                q = t.default.Children.only(N);\n            } catch  {\n                throw N ? new Error(\"Multiple children were passed to <Link> with `href` of `\" + L + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + ( false ? 0 : \"\")) : new Error(\"No children were passed to <Link> with `href` of `\" + L + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\");\n            }\n        } else q = t.default.Children.only(N);\n        else if (n.NODE_ENV === \"development\" && (N == null ? void 0 : N.type) === \"a\") throw new Error(`Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor`);\n        const B = C ? q && typeof q == \"object\" && q.ref : j, [Fe, Ke, Ge] = (0, p.useIntersection)({\n            rootMargin: \"200px\"\n        }), Wt = t.default.useCallback((b)=>{\n            (Ve.current !== I || Be.current !== x) && (Ge(), Ve.current = I, Be.current = x), Fe(b), B && (typeof B == \"function\" ? B(b) : typeof B == \"object\" && (B.current = b));\n        }, [\n            I,\n            B,\n            x,\n            Ge,\n            Fe\n        ]);\n        t.default.useEffect(()=>{\n            n.NODE_ENV === \"production\" && D && (!Ke || !F || m(D, x, I, {\n                locale: A\n            }, {\n                kind: X\n            }, U));\n        }, [\n            I,\n            x,\n            Ke,\n            A,\n            F,\n            S == null ? void 0 : S.locale,\n            D,\n            U,\n            X\n        ]);\n        const Q = {\n            ref: Wt,\n            onClick (b) {\n                if (n.NODE_ENV !== \"production\" && !b) throw new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.');\n                !C && typeof $ == \"function\" && $(b), C && q.props && typeof q.props.onClick == \"function\" && q.props.onClick(b), D && (b.defaultPrevented || P(b, D, x, I, de, he, We, A, U, F));\n            },\n            onMouseEnter (b) {\n                !C && typeof pe == \"function\" && pe(b), C && q.props && typeof q.props.onMouseEnter == \"function\" && q.props.onMouseEnter(b), D && ((!F || n.NODE_ENV === \"development\") && U || m(D, x, I, {\n                    locale: A,\n                    priority: !0,\n                    // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                    bypassPrefetchedCheck: !0\n                }, {\n                    kind: X\n                }, U));\n            },\n            onTouchStart (b) {\n                !C && typeof $e == \"function\" && $e(b), C && q.props && typeof q.props.onTouchStart == \"function\" && q.props.onTouchStart(b), D && (!F && U || m(D, x, I, {\n                    locale: A,\n                    priority: !0,\n                    // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                    bypassPrefetchedCheck: !0\n                }, {\n                    kind: X\n                }, U));\n            }\n        };\n        if ((0, u.isAbsoluteUrl)(I)) Q.href = I;\n        else if (!C || H || q.type === \"a\" && !(\"href\" in q.props)) {\n            const b = typeof A < \"u\" ? A : S == null ? void 0 : S.locale, K = (S == null ? void 0 : S.isLocaleDomain) && (0, g.getDomainLocale)(I, b, S == null ? void 0 : S.locales, S == null ? void 0 : S.domainLocales);\n            Q.href = K || (0, E.addBasePath)((0, c.addLocale)(I, b, S == null ? void 0 : S.defaultLocale));\n        }\n        return C ? /* @__PURE__ */ t.default.cloneElement(q, Q) : /* @__PURE__ */ t.default.createElement(\"a\", {\n            ...zt,\n            ...Q\n        }, N);\n    });\n    (typeof e.default == \"function\" || typeof e.default == \"object\" && e.default !== null) && typeof e.default.__esModule > \"u\" && (Object.defineProperty(e.default, \"__esModule\", {\n        value: !0\n    }), Object.assign(e.default, e), a.exports = e.default);\n})(ze, ze.exports);\nvar Pr = ze.exports, kt = Pr;\nconst Rr = /* @__PURE__ */ (0,_main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.g)(kt), Nr = /* @__PURE__ */ Bt({\n    __proto__: null,\n    default: Rr\n}, [\n    kt\n]);\n //# sourceMappingURL=link-DaH_InAP.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/link-DaH_InAP.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/main-BAWg-Pqh.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@uma-sdk/uma-auth-client/dist/main-BAWg-Pqh.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   N: () => (/* binding */ tc),\n/* harmony export */   U: () => (/* binding */ wN),\n/* harmony export */   a: () => (/* binding */ vn),\n/* harmony export */   b: () => (/* binding */ Ko),\n/* harmony export */   c: () => (/* binding */ cD),\n/* harmony export */   d: () => (/* binding */ _5),\n/* harmony export */   e: () => (/* binding */ lD),\n/* harmony export */   f: () => (/* binding */ dD),\n/* harmony export */   g: () => (/* binding */ Va),\n/* harmony export */   h: () => (/* binding */ fD),\n/* harmony export */   i: () => (/* binding */ uD),\n/* harmony export */   j: () => (/* binding */ hD),\n/* harmony export */   k: () => (/* binding */ yN),\n/* harmony export */   u: () => (/* binding */ Jc)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\nvar a9 = Object.defineProperty;\nvar s9 = (e, t, n) => t in e ? a9(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;\nvar we = (e, t, n) => s9(e, typeof t != \"symbol\" ? t + \"\" : t, n);\n\n\n\nvar xd = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction Va(e) {\n  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nfunction u9(e) {\n  if (e.__esModule) return e;\n  var t = e.default;\n  if (typeof t == \"function\") {\n    var n = function r() {\n      return this instanceof r ? Reflect.construct(t, arguments, this.constructor) : t.apply(this, arguments);\n    };\n    n.prototype = t.prototype;\n  } else n = {};\n  return Object.defineProperty(n, \"__esModule\", { value: !0 }), Object.keys(e).forEach(function(r) {\n    var i = Object.getOwnPropertyDescriptor(e, r);\n    Object.defineProperty(n, r, i.get ? i : {\n      enumerable: !0,\n      get: function() {\n        return e[r];\n      }\n    });\n  }), n;\n}\nvar d1 = { exports: {} }, ea = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar su;\nfunction h9() {\n  if (su) return ea;\n  su = 1;\n  var e = react__WEBPACK_IMPORTED_MODULE_0__, t = Symbol.for(\"react.element\"), n = Symbol.for(\"react.fragment\"), r = Object.prototype.hasOwnProperty, i = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, o = { key: !0, ref: !0, __self: !0, __source: !0 };\n  function a(s, c, l) {\n    var d, f = {}, g = null, b = null;\n    l !== void 0 && (g = \"\" + l), c.key !== void 0 && (g = \"\" + c.key), c.ref !== void 0 && (b = c.ref);\n    for (d in c) r.call(c, d) && !o.hasOwnProperty(d) && (f[d] = c[d]);\n    if (s && s.defaultProps) for (d in c = s.defaultProps, c) f[d] === void 0 && (f[d] = c[d]);\n    return { $$typeof: t, type: s, key: g, ref: b, props: f, _owner: i.current };\n  }\n  return ea.Fragment = n, ea.jsx = a, ea.jsxs = a, ea;\n}\nvar ta = {}, cu;\nfunction p9() {\n  if (cu) return ta;\n  cu = 1;\n  var e = {};\n  /**\n   * @license React\n   * react-jsx-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  return e.NODE_ENV !== \"production\" && function() {\n    var t = react__WEBPACK_IMPORTED_MODULE_0__, n = Symbol.for(\"react.element\"), r = Symbol.for(\"react.portal\"), i = Symbol.for(\"react.fragment\"), o = Symbol.for(\"react.strict_mode\"), a = Symbol.for(\"react.profiler\"), s = Symbol.for(\"react.provider\"), c = Symbol.for(\"react.context\"), l = Symbol.for(\"react.forward_ref\"), d = Symbol.for(\"react.suspense\"), f = Symbol.for(\"react.suspense_list\"), g = Symbol.for(\"react.memo\"), b = Symbol.for(\"react.lazy\"), x = Symbol.for(\"react.offscreen\"), m = Symbol.iterator, C = \"@@iterator\";\n    function S(V) {\n      if (V === null || typeof V != \"object\")\n        return null;\n      var Q = m && V[m] || V[C];\n      return typeof Q == \"function\" ? Q : null;\n    }\n    var T = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function N(V) {\n      {\n        for (var Q = arguments.length, oe = new Array(Q > 1 ? Q - 1 : 0), xe = 1; xe < Q; xe++)\n          oe[xe - 1] = arguments[xe];\n        W(\"error\", V, oe);\n      }\n    }\n    function W(V, Q, oe) {\n      {\n        var xe = T.ReactDebugCurrentFrame, Oe = xe.getStackAddendum();\n        Oe !== \"\" && (Q += \"%s\", oe = oe.concat([Oe]));\n        var je = oe.map(function(Ee) {\n          return String(Ee);\n        });\n        je.unshift(\"Warning: \" + Q), Function.prototype.apply.call(console[V], console, je);\n      }\n    }\n    var U = !1, F = !1, j = !1, K = !1, J = !1, X;\n    X = Symbol.for(\"react.module.reference\");\n    function _(V) {\n      return !!(typeof V == \"string\" || typeof V == \"function\" || V === i || V === a || J || V === o || V === d || V === f || K || V === x || U || F || j || typeof V == \"object\" && V !== null && (V.$$typeof === b || V.$$typeof === g || V.$$typeof === s || V.$$typeof === c || V.$$typeof === l || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      V.$$typeof === X || V.getModuleId !== void 0));\n    }\n    function u(V, Q, oe) {\n      var xe = V.displayName;\n      if (xe)\n        return xe;\n      var Oe = Q.displayName || Q.name || \"\";\n      return Oe !== \"\" ? oe + \"(\" + Oe + \")\" : oe;\n    }\n    function v(V) {\n      return V.displayName || \"Context\";\n    }\n    function w(V) {\n      if (V == null)\n        return null;\n      if (typeof V.tag == \"number\" && N(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), typeof V == \"function\")\n        return V.displayName || V.name || null;\n      if (typeof V == \"string\")\n        return V;\n      switch (V) {\n        case i:\n          return \"Fragment\";\n        case r:\n          return \"Portal\";\n        case a:\n          return \"Profiler\";\n        case o:\n          return \"StrictMode\";\n        case d:\n          return \"Suspense\";\n        case f:\n          return \"SuspenseList\";\n      }\n      if (typeof V == \"object\")\n        switch (V.$$typeof) {\n          case c:\n            var Q = V;\n            return v(Q) + \".Consumer\";\n          case s:\n            var oe = V;\n            return v(oe._context) + \".Provider\";\n          case l:\n            return u(V, V.render, \"ForwardRef\");\n          case g:\n            var xe = V.displayName || null;\n            return xe !== null ? xe : w(V.type) || \"Memo\";\n          case b: {\n            var Oe = V, je = Oe._payload, Ee = Oe._init;\n            try {\n              return w(Ee(je));\n            } catch {\n              return null;\n            }\n          }\n        }\n      return null;\n    }\n    var y = Object.assign, $ = 0, A, H, M, h, L, Y, ne;\n    function ie() {\n    }\n    ie.__reactDisabledLog = !0;\n    function se() {\n      {\n        if ($ === 0) {\n          A = console.log, H = console.info, M = console.warn, h = console.error, L = console.group, Y = console.groupCollapsed, ne = console.groupEnd;\n          var V = {\n            configurable: !0,\n            enumerable: !0,\n            value: ie,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            info: V,\n            log: V,\n            warn: V,\n            error: V,\n            group: V,\n            groupCollapsed: V,\n            groupEnd: V\n          });\n        }\n        $++;\n      }\n    }\n    function ye() {\n      {\n        if ($--, $ === 0) {\n          var V = {\n            configurable: !0,\n            enumerable: !0,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            log: y({}, V, {\n              value: A\n            }),\n            info: y({}, V, {\n              value: H\n            }),\n            warn: y({}, V, {\n              value: M\n            }),\n            error: y({}, V, {\n              value: h\n            }),\n            group: y({}, V, {\n              value: L\n            }),\n            groupCollapsed: y({}, V, {\n              value: Y\n            }),\n            groupEnd: y({}, V, {\n              value: ne\n            })\n          });\n        }\n        $ < 0 && N(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n      }\n    }\n    var ge = T.ReactCurrentDispatcher, _e;\n    function me(V, Q, oe) {\n      {\n        if (_e === void 0)\n          try {\n            throw Error();\n          } catch (Oe) {\n            var xe = Oe.stack.trim().match(/\\n( *(at )?)/);\n            _e = xe && xe[1] || \"\";\n          }\n        return `\n` + _e + V;\n      }\n    }\n    var de = !1, Ge;\n    {\n      var Me = typeof WeakMap == \"function\" ? WeakMap : Map;\n      Ge = new Me();\n    }\n    function te(V, Q) {\n      if (!V || de)\n        return \"\";\n      {\n        var oe = Ge.get(V);\n        if (oe !== void 0)\n          return oe;\n      }\n      var xe;\n      de = !0;\n      var Oe = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var je;\n      je = ge.current, ge.current = null, se();\n      try {\n        if (Q) {\n          var Ee = function() {\n            throw Error();\n          };\n          if (Object.defineProperty(Ee.prototype, \"props\", {\n            set: function() {\n              throw Error();\n            }\n          }), typeof Reflect == \"object\" && Reflect.construct) {\n            try {\n              Reflect.construct(Ee, []);\n            } catch (Nt) {\n              xe = Nt;\n            }\n            Reflect.construct(V, [], Ee);\n          } else {\n            try {\n              Ee.call();\n            } catch (Nt) {\n              xe = Nt;\n            }\n            V.call(Ee.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (Nt) {\n            xe = Nt;\n          }\n          V();\n        }\n      } catch (Nt) {\n        if (Nt && xe && typeof Nt.stack == \"string\") {\n          for (var fe = Nt.stack.split(`\n`), ut = xe.stack.split(`\n`), ht = fe.length - 1, nt = ut.length - 1; ht >= 1 && nt >= 0 && fe[ht] !== ut[nt]; )\n            nt--;\n          for (; ht >= 1 && nt >= 0; ht--, nt--)\n            if (fe[ht] !== ut[nt]) {\n              if (ht !== 1 || nt !== 1)\n                do\n                  if (ht--, nt--, nt < 0 || fe[ht] !== ut[nt]) {\n                    var Ut = `\n` + fe[ht].replace(\" at new \", \" at \");\n                    return V.displayName && Ut.includes(\"<anonymous>\") && (Ut = Ut.replace(\"<anonymous>\", V.displayName)), typeof V == \"function\" && Ge.set(V, Ut), Ut;\n                  }\n                while (ht >= 1 && nt >= 0);\n              break;\n            }\n        }\n      } finally {\n        de = !1, ge.current = je, ye(), Error.prepareStackTrace = Oe;\n      }\n      var ln = V ? V.displayName || V.name : \"\", Hn = ln ? me(ln) : \"\";\n      return typeof V == \"function\" && Ge.set(V, Hn), Hn;\n    }\n    function Lt(V, Q, oe) {\n      return te(V, !1);\n    }\n    function Se(V) {\n      var Q = V.prototype;\n      return !!(Q && Q.isReactComponent);\n    }\n    function De(V, Q, oe) {\n      if (V == null)\n        return \"\";\n      if (typeof V == \"function\")\n        return te(V, Se(V));\n      if (typeof V == \"string\")\n        return me(V);\n      switch (V) {\n        case d:\n          return me(\"Suspense\");\n        case f:\n          return me(\"SuspenseList\");\n      }\n      if (typeof V == \"object\")\n        switch (V.$$typeof) {\n          case l:\n            return Lt(V.render);\n          case g:\n            return De(V.type, Q, oe);\n          case b: {\n            var xe = V, Oe = xe._payload, je = xe._init;\n            try {\n              return De(je(Oe), Q, oe);\n            } catch {\n            }\n          }\n        }\n      return \"\";\n    }\n    var Et = Object.prototype.hasOwnProperty, be = {}, pe = T.ReactDebugCurrentFrame;\n    function At(V) {\n      if (V) {\n        var Q = V._owner, oe = De(V.type, V._source, Q ? Q.type : null);\n        pe.setExtraStackFrame(oe);\n      } else\n        pe.setExtraStackFrame(null);\n    }\n    function qe(V, Q, oe, xe, Oe) {\n      {\n        var je = Function.call.bind(Et);\n        for (var Ee in V)\n          if (je(V, Ee)) {\n            var fe = void 0;\n            try {\n              if (typeof V[Ee] != \"function\") {\n                var ut = Error((xe || \"React class\") + \": \" + oe + \" type `\" + Ee + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof V[Ee] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                throw ut.name = \"Invariant Violation\", ut;\n              }\n              fe = V[Ee](Q, Ee, xe, oe, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (ht) {\n              fe = ht;\n            }\n            fe && !(fe instanceof Error) && (At(Oe), N(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", xe || \"React class\", oe, Ee, typeof fe), At(null)), fe instanceof Error && !(fe.message in be) && (be[fe.message] = !0, At(Oe), N(\"Failed %s type: %s\", oe, fe.message), At(null));\n          }\n      }\n    }\n    var Re = Array.isArray;\n    function Qt(V) {\n      return Re(V);\n    }\n    function yt(V) {\n      {\n        var Q = typeof Symbol == \"function\" && Symbol.toStringTag, oe = Q && V[Symbol.toStringTag] || V.constructor.name || \"Object\";\n        return oe;\n      }\n    }\n    function at(V) {\n      try {\n        return cn(V), !1;\n      } catch {\n        return !0;\n      }\n    }\n    function cn(V) {\n      return \"\" + V;\n    }\n    function st(V) {\n      if (at(V))\n        return N(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", yt(V)), cn(V);\n    }\n    var We = T.ReactCurrentOwner, On = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    }, ct, tt, Mn;\n    Mn = {};\n    function Fe(V) {\n      if (Et.call(V, \"ref\")) {\n        var Q = Object.getOwnPropertyDescriptor(V, \"ref\").get;\n        if (Q && Q.isReactWarning)\n          return !1;\n      }\n      return V.ref !== void 0;\n    }\n    function ke(V) {\n      if (Et.call(V, \"key\")) {\n        var Q = Object.getOwnPropertyDescriptor(V, \"key\").get;\n        if (Q && Q.isReactWarning)\n          return !1;\n      }\n      return V.key !== void 0;\n    }\n    function $r(V, Q) {\n      if (typeof V.ref == \"string\" && We.current && Q && We.current.stateNode !== Q) {\n        var oe = w(We.current.type);\n        Mn[oe] || (N('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', w(We.current.type), V.ref), Mn[oe] = !0);\n      }\n    }\n    function mt(V, Q) {\n      {\n        var oe = function() {\n          ct || (ct = !0, N(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", Q));\n        };\n        oe.isReactWarning = !0, Object.defineProperty(V, \"key\", {\n          get: oe,\n          configurable: !0\n        });\n      }\n    }\n    function lt(V, Q) {\n      {\n        var oe = function() {\n          tt || (tt = !0, N(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", Q));\n        };\n        oe.isReactWarning = !0, Object.defineProperty(V, \"ref\", {\n          get: oe,\n          configurable: !0\n        });\n      }\n    }\n    var Gn = function(V, Q, oe, xe, Oe, je, Ee) {\n      var fe = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: n,\n        // Built-in properties that belong on the element\n        type: V,\n        key: Q,\n        ref: oe,\n        props: Ee,\n        // Record the component responsible for creating this element.\n        _owner: je\n      };\n      return fe._store = {}, Object.defineProperty(fe._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: !1\n      }), Object.defineProperty(fe, \"_self\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: xe\n      }), Object.defineProperty(fe, \"_source\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: Oe\n      }), Object.freeze && (Object.freeze(fe.props), Object.freeze(fe)), fe;\n    };\n    function dt(V, Q, oe, xe, Oe) {\n      {\n        var je, Ee = {}, fe = null, ut = null;\n        oe !== void 0 && (st(oe), fe = \"\" + oe), ke(Q) && (st(Q.key), fe = \"\" + Q.key), Fe(Q) && (ut = Q.ref, $r(Q, Oe));\n        for (je in Q)\n          Et.call(Q, je) && !On.hasOwnProperty(je) && (Ee[je] = Q[je]);\n        if (V && V.defaultProps) {\n          var ht = V.defaultProps;\n          for (je in ht)\n            Ee[je] === void 0 && (Ee[je] = ht[je]);\n        }\n        if (fe || ut) {\n          var nt = typeof V == \"function\" ? V.displayName || V.name || \"Unknown\" : V;\n          fe && mt(Ee, nt), ut && lt(Ee, nt);\n        }\n        return Gn(V, fe, ut, Oe, xe, We.current, Ee);\n      }\n    }\n    var Xe = T.ReactCurrentOwner, Ln = T.ReactDebugCurrentFrame;\n    function Ze(V) {\n      if (V) {\n        var Q = V._owner, oe = De(V.type, V._source, Q ? Q.type : null);\n        Ln.setExtraStackFrame(oe);\n      } else\n        Ln.setExtraStackFrame(null);\n    }\n    var ft;\n    ft = !1;\n    function $t(V) {\n      return typeof V == \"object\" && V !== null && V.$$typeof === n;\n    }\n    function He() {\n      {\n        if (Xe.current) {\n          var V = w(Xe.current.type);\n          if (V)\n            return `\n\nCheck the render method of \\`` + V + \"`.\";\n        }\n        return \"\";\n      }\n    }\n    function ce(V) {\n      return \"\";\n    }\n    var Te = {};\n    function Ue(V) {\n      {\n        var Q = He();\n        if (!Q) {\n          var oe = typeof V == \"string\" ? V : V.displayName || V.name;\n          oe && (Q = `\n\nCheck the top-level render call using <` + oe + \">.\");\n        }\n        return Q;\n      }\n    }\n    function Je(V, Q) {\n      {\n        if (!V._store || V._store.validated || V.key != null)\n          return;\n        V._store.validated = !0;\n        var oe = Ue(Q);\n        if (Te[oe])\n          return;\n        Te[oe] = !0;\n        var xe = \"\";\n        V && V._owner && V._owner !== Xe.current && (xe = \" It was passed a child from \" + w(V._owner.type) + \".\"), Ze(V), N('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', oe, xe), Ze(null);\n      }\n    }\n    function ae(V, Q) {\n      {\n        if (typeof V != \"object\")\n          return;\n        if (Qt(V))\n          for (var oe = 0; oe < V.length; oe++) {\n            var xe = V[oe];\n            $t(xe) && Je(xe, Q);\n          }\n        else if ($t(V))\n          V._store && (V._store.validated = !0);\n        else if (V) {\n          var Oe = S(V);\n          if (typeof Oe == \"function\" && Oe !== V.entries)\n            for (var je = Oe.call(V), Ee; !(Ee = je.next()).done; )\n              $t(Ee.value) && Je(Ee.value, Q);\n        }\n      }\n    }\n    function le(V) {\n      {\n        var Q = V.type;\n        if (Q == null || typeof Q == \"string\")\n          return;\n        var oe;\n        if (typeof Q == \"function\")\n          oe = Q.propTypes;\n        else if (typeof Q == \"object\" && (Q.$$typeof === l || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        Q.$$typeof === g))\n          oe = Q.propTypes;\n        else\n          return;\n        if (oe) {\n          var xe = w(Q);\n          qe(oe, V.props, \"prop\", xe, V);\n        } else if (Q.PropTypes !== void 0 && !ft) {\n          ft = !0;\n          var Oe = w(Q);\n          N(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", Oe || \"Unknown\");\n        }\n        typeof Q.getDefaultProps == \"function\" && !Q.getDefaultProps.isReactClassApproved && N(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n      }\n    }\n    function ue(V) {\n      {\n        for (var Q = Object.keys(V.props), oe = 0; oe < Q.length; oe++) {\n          var xe = Q[oe];\n          if (xe !== \"children\" && xe !== \"key\") {\n            Ze(V), N(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", xe), Ze(null);\n            break;\n          }\n        }\n        V.ref !== null && (Ze(V), N(\"Invalid attribute `ref` supplied to `React.Fragment`.\"), Ze(null));\n      }\n    }\n    var Ct = {};\n    function Be(V, Q, oe, xe, Oe, je) {\n      {\n        var Ee = _(V);\n        if (!Ee) {\n          var fe = \"\";\n          (V === void 0 || typeof V == \"object\" && V !== null && Object.keys(V).length === 0) && (fe += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");\n          var ut = ce();\n          ut ? fe += ut : fe += He();\n          var ht;\n          V === null ? ht = \"null\" : Qt(V) ? ht = \"array\" : V !== void 0 && V.$$typeof === n ? (ht = \"<\" + (w(V.type) || \"Unknown\") + \" />\", fe = \" Did you accidentally export a JSX literal instead of a component?\") : ht = typeof V, N(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", ht, fe);\n        }\n        var nt = dt(V, Q, oe, Oe, je);\n        if (nt == null)\n          return nt;\n        if (Ee) {\n          var Ut = Q.children;\n          if (Ut !== void 0)\n            if (xe)\n              if (Qt(Ut)) {\n                for (var ln = 0; ln < Ut.length; ln++)\n                  ae(Ut[ln], V);\n                Object.freeze && Object.freeze(Ut);\n              } else\n                N(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n            else\n              ae(Ut, V);\n        }\n        if (Et.call(Q, \"key\")) {\n          var Hn = w(V), Nt = Object.keys(Q).filter(function(Qo) {\n            return Qo !== \"key\";\n          }), yi = Nt.length > 0 ? \"{key: someKey, \" + Nt.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n          if (!Ct[Hn + yi]) {\n            var Jo = Nt.length > 0 ? \"{\" + Nt.join(\": ..., \") + \": ...}\" : \"{}\";\n            N(`A props object containing a \"key\" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />`, yi, Hn, Jo, Hn), Ct[Hn + yi] = !0;\n          }\n        }\n        return V === i ? ue(nt) : le(nt), nt;\n      }\n    }\n    function Ke(V, Q, oe) {\n      return Be(V, Q, oe, !0);\n    }\n    function an(V, Q, oe) {\n      return Be(V, Q, oe, !1);\n    }\n    var Pe = an, ze = Ke;\n    ta.Fragment = i, ta.jsx = Pe, ta.jsxs = ze;\n  }(), ta;\n}\nvar g9 = {};\ng9.NODE_ENV === \"production\" ? d1.exports = h9() : d1.exports = p9();\nvar ni = d1.exports, m9 = !1;\nfunction v9(e) {\n  if (e.sheet)\n    return e.sheet;\n  for (var t = 0; t < document.styleSheets.length; t++)\n    if (document.styleSheets[t].ownerNode === e)\n      return document.styleSheets[t];\n}\nfunction y9(e) {\n  var t = document.createElement(\"style\");\n  return t.setAttribute(\"data-emotion\", e.key), e.nonce !== void 0 && t.setAttribute(\"nonce\", e.nonce), t.appendChild(document.createTextNode(\"\")), t.setAttribute(\"data-s\", \"\"), t;\n}\nvar b9 = /* @__PURE__ */ function() {\n  function e(n) {\n    var r = this;\n    this._insertTag = function(i) {\n      var o;\n      r.tags.length === 0 ? r.insertionPoint ? o = r.insertionPoint.nextSibling : r.prepend ? o = r.container.firstChild : o = r.before : o = r.tags[r.tags.length - 1].nextSibling, r.container.insertBefore(i, o), r.tags.push(i);\n    }, this.isSpeedy = n.speedy === void 0 ? !m9 : n.speedy, this.tags = [], this.ctr = 0, this.nonce = n.nonce, this.key = n.key, this.container = n.container, this.prepend = n.prepend, this.insertionPoint = n.insertionPoint, this.before = null;\n  }\n  var t = e.prototype;\n  return t.hydrate = function(r) {\n    r.forEach(this._insertTag);\n  }, t.insert = function(r) {\n    this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(y9(this));\n    var i = this.tags[this.tags.length - 1];\n    if (this.isSpeedy) {\n      var o = v9(i);\n      try {\n        o.insertRule(r, o.cssRules.length);\n      } catch {\n      }\n    } else\n      i.appendChild(document.createTextNode(r));\n    this.ctr++;\n  }, t.flush = function() {\n    this.tags.forEach(function(r) {\n      var i;\n      return (i = r.parentNode) == null ? void 0 : i.removeChild(r);\n    }), this.tags = [], this.ctr = 0;\n  }, e;\n}(), en = \"-ms-\", Ds = \"-moz-\", Qe = \"-webkit-\", X2 = \"comm\", wd = \"rule\", $d = \"decl\", x9 = \"@import\", J2 = \"@keyframes\", w9 = \"@layer\", $9 = Math.abs, cc = String.fromCharCode, C9 = Object.assign;\nfunction S9(e, t) {\n  return Gt(e, 0) ^ 45 ? (((t << 2 ^ Gt(e, 0)) << 2 ^ Gt(e, 1)) << 2 ^ Gt(e, 2)) << 2 ^ Gt(e, 3) : 0;\n}\nfunction Q2(e) {\n  return e.trim();\n}\nfunction M9(e, t) {\n  return (e = t.exec(e)) ? e[0] : e;\n}\nfunction et(e, t, n) {\n  return e.replace(t, n);\n}\nfunction f1(e, t) {\n  return e.indexOf(t);\n}\nfunction Gt(e, t) {\n  return e.charCodeAt(t) | 0;\n}\nfunction Sa(e, t, n) {\n  return e.slice(t, n);\n}\nfunction Qn(e) {\n  return e.length;\n}\nfunction Cd(e) {\n  return e.length;\n}\nfunction ss(e, t) {\n  return t.push(e), e;\n}\nfunction L9(e, t) {\n  return e.map(t).join(\"\");\n}\nvar lc = 1, po = 1, ep = 0, hn = 0, Ot = 0, Io = \"\";\nfunction dc(e, t, n, r, i, o, a) {\n  return { value: e, root: t, parent: n, type: r, props: i, children: o, line: lc, column: po, length: a, return: \"\" };\n}\nfunction na(e, t) {\n  return C9(dc(\"\", null, null, \"\", null, null, 0), e, { length: -e.length }, t);\n}\nfunction A9() {\n  return Ot;\n}\nfunction k9() {\n  return Ot = hn > 0 ? Gt(Io, --hn) : 0, po--, Ot === 10 && (po = 1, lc--), Ot;\n}\nfunction xn() {\n  return Ot = hn < ep ? Gt(Io, hn++) : 0, po++, Ot === 10 && (po = 1, lc++), Ot;\n}\nfunction ir() {\n  return Gt(Io, hn);\n}\nfunction xs() {\n  return hn;\n}\nfunction za(e, t) {\n  return Sa(Io, e, t);\n}\nfunction Ma(e) {\n  switch (e) {\n    case 0:\n    case 9:\n    case 10:\n    case 13:\n    case 32:\n      return 5;\n    case 33:\n    case 43:\n    case 44:\n    case 47:\n    case 62:\n    case 64:\n    case 126:\n    case 59:\n    case 123:\n    case 125:\n      return 4;\n    case 58:\n      return 3;\n    case 34:\n    case 39:\n    case 40:\n    case 91:\n      return 2;\n    case 41:\n    case 93:\n      return 1;\n  }\n  return 0;\n}\nfunction tp(e) {\n  return lc = po = 1, ep = Qn(Io = e), hn = 0, [];\n}\nfunction np(e) {\n  return Io = \"\", e;\n}\nfunction ws(e) {\n  return Q2(za(hn - 1, u1(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));\n}\nfunction _9(e) {\n  for (; (Ot = ir()) && Ot < 33; )\n    xn();\n  return Ma(e) > 2 || Ma(Ot) > 3 ? \"\" : \" \";\n}\nfunction E9(e, t) {\n  for (; --t && xn() && !(Ot < 48 || Ot > 102 || Ot > 57 && Ot < 65 || Ot > 70 && Ot < 97); )\n    ;\n  return za(e, xs() + (t < 6 && ir() == 32 && xn() == 32));\n}\nfunction u1(e) {\n  for (; xn(); )\n    switch (Ot) {\n      case e:\n        return hn;\n      case 34:\n      case 39:\n        e !== 34 && e !== 39 && u1(Ot);\n        break;\n      case 40:\n        e === 41 && u1(e);\n        break;\n      case 92:\n        xn();\n        break;\n    }\n  return hn;\n}\nfunction T9(e, t) {\n  for (; xn() && e + Ot !== 57; )\n    if (e + Ot === 84 && ir() === 47)\n      break;\n  return \"/*\" + za(t, hn - 1) + \"*\" + cc(e === 47 ? e : xn());\n}\nfunction B9(e) {\n  for (; !Ma(ir()); )\n    xn();\n  return za(e, hn);\n}\nfunction I9(e) {\n  return np($s(\"\", null, null, null, [\"\"], e = tp(e), 0, [0], e));\n}\nfunction $s(e, t, n, r, i, o, a, s, c) {\n  for (var l = 0, d = 0, f = a, g = 0, b = 0, x = 0, m = 1, C = 1, S = 1, T = 0, N = \"\", W = i, U = o, F = r, j = N; C; )\n    switch (x = T, T = xn()) {\n      case 40:\n        if (x != 108 && Gt(j, f - 1) == 58) {\n          f1(j += et(ws(T), \"&\", \"&\\f\"), \"&\\f\") != -1 && (S = -1);\n          break;\n        }\n      case 34:\n      case 39:\n      case 91:\n        j += ws(T);\n        break;\n      case 9:\n      case 10:\n      case 13:\n      case 32:\n        j += _9(x);\n        break;\n      case 92:\n        j += E9(xs() - 1, 7);\n        continue;\n      case 47:\n        switch (ir()) {\n          case 42:\n          case 47:\n            ss(D9(T9(xn(), xs()), t, n), c);\n            break;\n          default:\n            j += \"/\";\n        }\n        break;\n      case 123 * m:\n        s[l++] = Qn(j) * S;\n      case 125 * m:\n      case 59:\n      case 0:\n        switch (T) {\n          case 0:\n          case 125:\n            C = 0;\n          case 59 + d:\n            S == -1 && (j = et(j, /\\f/g, \"\")), b > 0 && Qn(j) - f && ss(b > 32 ? du(j + \";\", r, n, f - 1) : du(et(j, \" \", \"\") + \";\", r, n, f - 2), c);\n            break;\n          case 59:\n            j += \";\";\n          default:\n            if (ss(F = lu(j, t, n, l, d, i, s, N, W = [], U = [], f), o), T === 123)\n              if (d === 0)\n                $s(j, t, F, F, W, o, f, s, U);\n              else\n                switch (g === 99 && Gt(j, 3) === 110 ? 100 : g) {\n                  case 100:\n                  case 108:\n                  case 109:\n                  case 115:\n                    $s(e, F, F, r && ss(lu(e, F, F, 0, 0, i, s, N, i, W = [], f), U), i, U, f, s, r ? W : U);\n                    break;\n                  default:\n                    $s(j, F, F, F, [\"\"], U, 0, s, U);\n                }\n        }\n        l = d = b = 0, m = S = 1, N = j = \"\", f = a;\n        break;\n      case 58:\n        f = 1 + Qn(j), b = x;\n      default:\n        if (m < 1) {\n          if (T == 123)\n            --m;\n          else if (T == 125 && m++ == 0 && k9() == 125)\n            continue;\n        }\n        switch (j += cc(T), T * m) {\n          case 38:\n            S = d > 0 ? 1 : (j += \"\\f\", -1);\n            break;\n          case 44:\n            s[l++] = (Qn(j) - 1) * S, S = 1;\n            break;\n          case 64:\n            ir() === 45 && (j += ws(xn())), g = ir(), d = f = Qn(N = j += B9(xs())), T++;\n            break;\n          case 45:\n            x === 45 && Qn(j) == 2 && (m = 0);\n        }\n    }\n  return o;\n}\nfunction lu(e, t, n, r, i, o, a, s, c, l, d) {\n  for (var f = i - 1, g = i === 0 ? o : [\"\"], b = Cd(g), x = 0, m = 0, C = 0; x < r; ++x)\n    for (var S = 0, T = Sa(e, f + 1, f = $9(m = a[x])), N = e; S < b; ++S)\n      (N = Q2(m > 0 ? g[S] + \" \" + T : et(T, /&\\f/g, g[S]))) && (c[C++] = N);\n  return dc(e, t, n, i === 0 ? wd : s, c, l, d);\n}\nfunction D9(e, t, n) {\n  return dc(e, t, n, X2, cc(A9()), Sa(e, 2, -2), 0);\n}\nfunction du(e, t, n, r) {\n  return dc(e, t, n, $d, Sa(e, 0, r), Sa(e, r + 1, -1), r);\n}\nfunction lo(e, t) {\n  for (var n = \"\", r = Cd(e), i = 0; i < r; i++)\n    n += t(e[i], i, e, t) || \"\";\n  return n;\n}\nfunction R9(e, t, n, r) {\n  switch (e.type) {\n    case w9:\n      if (e.children.length) break;\n    case x9:\n    case $d:\n      return e.return = e.return || e.value;\n    case X2:\n      return \"\";\n    case J2:\n      return e.return = e.value + \"{\" + lo(e.children, r) + \"}\";\n    case wd:\n      e.value = e.props.join(\",\");\n  }\n  return Qn(n = lo(e.children, r)) ? e.return = e.value + \"{\" + n + \"}\" : \"\";\n}\nfunction P9(e) {\n  var t = Cd(e);\n  return function(n, r, i, o) {\n    for (var a = \"\", s = 0; s < t; s++)\n      a += e[s](n, r, i, o) || \"\";\n    return a;\n  };\n}\nfunction O9(e) {\n  return function(t) {\n    t.root || (t = t.return) && e(t);\n  };\n}\nvar fu = function(t) {\n  var n = /* @__PURE__ */ new WeakMap();\n  return function(r) {\n    if (n.has(r))\n      return n.get(r);\n    var i = t(r);\n    return n.set(r, i), i;\n  };\n};\nfunction rp(e) {\n  var t = /* @__PURE__ */ Object.create(null);\n  return function(n) {\n    return t[n] === void 0 && (t[n] = e(n)), t[n];\n  };\n}\nvar H9 = function(t, n, r) {\n  for (var i = 0, o = 0; i = o, o = ir(), i === 38 && o === 12 && (n[r] = 1), !Ma(o); )\n    xn();\n  return za(t, hn);\n}, U9 = function(t, n) {\n  var r = -1, i = 44;\n  do\n    switch (Ma(i)) {\n      case 0:\n        i === 38 && ir() === 12 && (n[r] = 1), t[r] += H9(hn - 1, n, r);\n        break;\n      case 2:\n        t[r] += ws(i);\n        break;\n      case 4:\n        if (i === 44) {\n          t[++r] = ir() === 58 ? \"&\\f\" : \"\", n[r] = t[r].length;\n          break;\n        }\n      default:\n        t[r] += cc(i);\n    }\n  while (i = xn());\n  return t;\n}, N9 = function(t, n) {\n  return np(U9(tp(t), n));\n}, uu = /* @__PURE__ */ new WeakMap(), V9 = function(t) {\n  if (!(t.type !== \"rule\" || !t.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  t.length < 1)) {\n    for (var n = t.value, r = t.parent, i = t.column === r.column && t.line === r.line; r.type !== \"rule\"; )\n      if (r = r.parent, !r) return;\n    if (!(t.props.length === 1 && n.charCodeAt(0) !== 58 && !uu.get(r)) && !i) {\n      uu.set(t, !0);\n      for (var o = [], a = N9(n, o), s = r.props, c = 0, l = 0; c < a.length; c++)\n        for (var d = 0; d < s.length; d++, l++)\n          t.props[l] = o[c] ? a[c].replace(/&\\f/g, s[d]) : s[d] + \" \" + a[c];\n    }\n  }\n}, z9 = function(t) {\n  if (t.type === \"decl\") {\n    var n = t.value;\n    // charcode for l\n    n.charCodeAt(0) === 108 && // charcode for b\n    n.charCodeAt(2) === 98 && (t.return = \"\", t.value = \"\");\n  }\n};\nfunction ip(e, t) {\n  switch (S9(e, t)) {\n    case 5103:\n      return Qe + \"print-\" + e + e;\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921:\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005:\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855:\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return Qe + e + e;\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return Qe + e + Ds + e + en + e + e;\n    case 6828:\n    case 4268:\n      return Qe + e + en + e + e;\n    case 6165:\n      return Qe + e + en + \"flex-\" + e + e;\n    case 5187:\n      return Qe + e + et(e, /(\\w+).+(:[^]+)/, Qe + \"box-$1$2\" + en + \"flex-$1$2\") + e;\n    case 5443:\n      return Qe + e + en + \"flex-item-\" + et(e, /flex-|-self/, \"\") + e;\n    case 4675:\n      return Qe + e + en + \"flex-line-pack\" + et(e, /align-content|flex-|-self/, \"\") + e;\n    case 5548:\n      return Qe + e + en + et(e, \"shrink\", \"negative\") + e;\n    case 5292:\n      return Qe + e + en + et(e, \"basis\", \"preferred-size\") + e;\n    case 6060:\n      return Qe + \"box-\" + et(e, \"-grow\", \"\") + Qe + e + en + et(e, \"grow\", \"positive\") + e;\n    case 4554:\n      return Qe + et(e, /([^-])(transform)/g, \"$1\" + Qe + \"$2\") + e;\n    case 6187:\n      return et(et(et(e, /(zoom-|grab)/, Qe + \"$1\"), /(image-set)/, Qe + \"$1\"), e, \"\") + e;\n    case 5495:\n    case 3959:\n      return et(e, /(image-set\\([^]*)/, Qe + \"$1$`$1\");\n    case 4968:\n      return et(et(e, /(.+:)(flex-)?(.*)/, Qe + \"box-pack:$3\" + en + \"flex-pack:$3\"), /s.+-b[^;]+/, \"justify\") + Qe + e + e;\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return et(e, /(.+)-inline(.+)/, Qe + \"$1$2\") + e;\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      if (Qn(e) - 1 - t > 6) switch (Gt(e, t + 1)) {\n        case 109:\n          if (Gt(e, t + 4) !== 45) break;\n        case 102:\n          return et(e, /(.+:)(.+)-([^]+)/, \"$1\" + Qe + \"$2-$3$1\" + Ds + (Gt(e, t + 3) == 108 ? \"$3\" : \"$2-$3\")) + e;\n        case 115:\n          return ~f1(e, \"stretch\") ? ip(et(e, \"stretch\", \"fill-available\"), t) + e : e;\n      }\n      break;\n    case 4949:\n      if (Gt(e, t + 1) !== 115) break;\n    case 6444:\n      switch (Gt(e, Qn(e) - 3 - (~f1(e, \"!important\") && 10))) {\n        case 107:\n          return et(e, \":\", \":\" + Qe) + e;\n        case 101:\n          return et(e, /(.+:)([^;!]+)(;|!.+)?/, \"$1\" + Qe + (Gt(e, 14) === 45 ? \"inline-\" : \"\") + \"box$3$1\" + Qe + \"$2$3$1\" + en + \"$2box$3\") + e;\n      }\n      break;\n    case 5936:\n      switch (Gt(e, t + 11)) {\n        case 114:\n          return Qe + e + en + et(e, /[svh]\\w+-[tblr]{2}/, \"tb\") + e;\n        case 108:\n          return Qe + e + en + et(e, /[svh]\\w+-[tblr]{2}/, \"tb-rl\") + e;\n        case 45:\n          return Qe + e + en + et(e, /[svh]\\w+-[tblr]{2}/, \"lr\") + e;\n      }\n      return Qe + e + en + e + e;\n  }\n  return e;\n}\nvar W9 = function(t, n, r, i) {\n  if (t.length > -1 && !t.return) switch (t.type) {\n    case $d:\n      t.return = ip(t.value, t.length);\n      break;\n    case J2:\n      return lo([na(t, {\n        value: et(t.value, \"@\", \"@\" + Qe)\n      })], i);\n    case wd:\n      if (t.length) return L9(t.props, function(o) {\n        switch (M9(o, /(::plac\\w+|:read-\\w+)/)) {\n          case \":read-only\":\n          case \":read-write\":\n            return lo([na(t, {\n              props: [et(o, /:(read-\\w+)/, \":\" + Ds + \"$1\")]\n            })], i);\n          case \"::placeholder\":\n            return lo([na(t, {\n              props: [et(o, /:(plac\\w+)/, \":\" + Qe + \"input-$1\")]\n            }), na(t, {\n              props: [et(o, /:(plac\\w+)/, \":\" + Ds + \"$1\")]\n            }), na(t, {\n              props: [et(o, /:(plac\\w+)/, en + \"input-$1\")]\n            })], i);\n        }\n        return \"\";\n      });\n  }\n}, F9 = [W9], Sd = function(t) {\n  var n = t.key;\n  if (n === \"css\") {\n    var r = document.querySelectorAll(\"style[data-emotion]:not([data-s])\");\n    Array.prototype.forEach.call(r, function(m) {\n      var C = m.getAttribute(\"data-emotion\");\n      C.indexOf(\" \") !== -1 && (document.head.appendChild(m), m.setAttribute(\"data-s\", \"\"));\n    });\n  }\n  var i = t.stylisPlugins || F9, o = {}, a, s = [];\n  a = t.container || document.head, Array.prototype.forEach.call(\n    // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll('style[data-emotion^=\"' + n + ' \"]'),\n    function(m) {\n      for (var C = m.getAttribute(\"data-emotion\").split(\" \"), S = 1; S < C.length; S++)\n        o[C[S]] = !0;\n      s.push(m);\n    }\n  );\n  var c, l = [V9, z9];\n  {\n    var d, f = [R9, O9(function(m) {\n      d.insert(m);\n    })], g = P9(l.concat(i, f)), b = function(C) {\n      return lo(I9(C), g);\n    };\n    c = function(C, S, T, N) {\n      d = T, b(C ? C + \"{\" + S.styles + \"}\" : S.styles), N && (x.inserted[S.name] = !0);\n    };\n  }\n  var x = {\n    key: n,\n    sheet: new b9({\n      key: n,\n      container: a,\n      nonce: t.nonce,\n      speedy: t.speedy,\n      prepend: t.prepend,\n      insertionPoint: t.insertionPoint\n    }),\n    nonce: t.nonce,\n    inserted: o,\n    registered: {},\n    insert: c\n  };\n  return x.sheet.hydrate(s), x;\n};\nfunction Rs() {\n  return Rs = Object.assign ? Object.assign.bind() : function(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, Rs.apply(null, arguments);\n}\nvar h1 = { exports: {} }, rt = {};\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar hu;\nfunction j9() {\n  if (hu) return rt;\n  hu = 1;\n  var e = typeof Symbol == \"function\" && Symbol.for, t = e ? Symbol.for(\"react.element\") : 60103, n = e ? Symbol.for(\"react.portal\") : 60106, r = e ? Symbol.for(\"react.fragment\") : 60107, i = e ? Symbol.for(\"react.strict_mode\") : 60108, o = e ? Symbol.for(\"react.profiler\") : 60114, a = e ? Symbol.for(\"react.provider\") : 60109, s = e ? Symbol.for(\"react.context\") : 60110, c = e ? Symbol.for(\"react.async_mode\") : 60111, l = e ? Symbol.for(\"react.concurrent_mode\") : 60111, d = e ? Symbol.for(\"react.forward_ref\") : 60112, f = e ? Symbol.for(\"react.suspense\") : 60113, g = e ? Symbol.for(\"react.suspense_list\") : 60120, b = e ? Symbol.for(\"react.memo\") : 60115, x = e ? Symbol.for(\"react.lazy\") : 60116, m = e ? Symbol.for(\"react.block\") : 60121, C = e ? Symbol.for(\"react.fundamental\") : 60117, S = e ? Symbol.for(\"react.responder\") : 60118, T = e ? Symbol.for(\"react.scope\") : 60119;\n  function N(U) {\n    if (typeof U == \"object\" && U !== null) {\n      var F = U.$$typeof;\n      switch (F) {\n        case t:\n          switch (U = U.type, U) {\n            case c:\n            case l:\n            case r:\n            case o:\n            case i:\n            case f:\n              return U;\n            default:\n              switch (U = U && U.$$typeof, U) {\n                case s:\n                case d:\n                case x:\n                case b:\n                case a:\n                  return U;\n                default:\n                  return F;\n              }\n          }\n        case n:\n          return F;\n      }\n    }\n  }\n  function W(U) {\n    return N(U) === l;\n  }\n  return rt.AsyncMode = c, rt.ConcurrentMode = l, rt.ContextConsumer = s, rt.ContextProvider = a, rt.Element = t, rt.ForwardRef = d, rt.Fragment = r, rt.Lazy = x, rt.Memo = b, rt.Portal = n, rt.Profiler = o, rt.StrictMode = i, rt.Suspense = f, rt.isAsyncMode = function(U) {\n    return W(U) || N(U) === c;\n  }, rt.isConcurrentMode = W, rt.isContextConsumer = function(U) {\n    return N(U) === s;\n  }, rt.isContextProvider = function(U) {\n    return N(U) === a;\n  }, rt.isElement = function(U) {\n    return typeof U == \"object\" && U !== null && U.$$typeof === t;\n  }, rt.isForwardRef = function(U) {\n    return N(U) === d;\n  }, rt.isFragment = function(U) {\n    return N(U) === r;\n  }, rt.isLazy = function(U) {\n    return N(U) === x;\n  }, rt.isMemo = function(U) {\n    return N(U) === b;\n  }, rt.isPortal = function(U) {\n    return N(U) === n;\n  }, rt.isProfiler = function(U) {\n    return N(U) === o;\n  }, rt.isStrictMode = function(U) {\n    return N(U) === i;\n  }, rt.isSuspense = function(U) {\n    return N(U) === f;\n  }, rt.isValidElementType = function(U) {\n    return typeof U == \"string\" || typeof U == \"function\" || U === r || U === l || U === o || U === i || U === f || U === g || typeof U == \"object\" && U !== null && (U.$$typeof === x || U.$$typeof === b || U.$$typeof === a || U.$$typeof === s || U.$$typeof === d || U.$$typeof === C || U.$$typeof === S || U.$$typeof === T || U.$$typeof === m);\n  }, rt.typeOf = N, rt;\n}\nvar it = {}, pu;\nfunction q9() {\n  if (pu) return it;\n  pu = 1;\n  var e = {};\n  /** @license React v16.13.1\n   * react-is.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  return e.NODE_ENV !== \"production\" && function() {\n    var t = typeof Symbol == \"function\" && Symbol.for, n = t ? Symbol.for(\"react.element\") : 60103, r = t ? Symbol.for(\"react.portal\") : 60106, i = t ? Symbol.for(\"react.fragment\") : 60107, o = t ? Symbol.for(\"react.strict_mode\") : 60108, a = t ? Symbol.for(\"react.profiler\") : 60114, s = t ? Symbol.for(\"react.provider\") : 60109, c = t ? Symbol.for(\"react.context\") : 60110, l = t ? Symbol.for(\"react.async_mode\") : 60111, d = t ? Symbol.for(\"react.concurrent_mode\") : 60111, f = t ? Symbol.for(\"react.forward_ref\") : 60112, g = t ? Symbol.for(\"react.suspense\") : 60113, b = t ? Symbol.for(\"react.suspense_list\") : 60120, x = t ? Symbol.for(\"react.memo\") : 60115, m = t ? Symbol.for(\"react.lazy\") : 60116, C = t ? Symbol.for(\"react.block\") : 60121, S = t ? Symbol.for(\"react.fundamental\") : 60117, T = t ? Symbol.for(\"react.responder\") : 60118, N = t ? Symbol.for(\"react.scope\") : 60119;\n    function W(te) {\n      return typeof te == \"string\" || typeof te == \"function\" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n      te === i || te === d || te === a || te === o || te === g || te === b || typeof te == \"object\" && te !== null && (te.$$typeof === m || te.$$typeof === x || te.$$typeof === s || te.$$typeof === c || te.$$typeof === f || te.$$typeof === S || te.$$typeof === T || te.$$typeof === N || te.$$typeof === C);\n    }\n    function U(te) {\n      if (typeof te == \"object\" && te !== null) {\n        var Lt = te.$$typeof;\n        switch (Lt) {\n          case n:\n            var Se = te.type;\n            switch (Se) {\n              case l:\n              case d:\n              case i:\n              case a:\n              case o:\n              case g:\n                return Se;\n              default:\n                var De = Se && Se.$$typeof;\n                switch (De) {\n                  case c:\n                  case f:\n                  case m:\n                  case x:\n                  case s:\n                    return De;\n                  default:\n                    return Lt;\n                }\n            }\n          case r:\n            return Lt;\n        }\n      }\n    }\n    var F = l, j = d, K = c, J = s, X = n, _ = f, u = i, v = m, w = x, y = r, $ = a, A = o, H = g, M = !1;\n    function h(te) {\n      return M || (M = !0, console.warn(\"The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.\")), L(te) || U(te) === l;\n    }\n    function L(te) {\n      return U(te) === d;\n    }\n    function Y(te) {\n      return U(te) === c;\n    }\n    function ne(te) {\n      return U(te) === s;\n    }\n    function ie(te) {\n      return typeof te == \"object\" && te !== null && te.$$typeof === n;\n    }\n    function se(te) {\n      return U(te) === f;\n    }\n    function ye(te) {\n      return U(te) === i;\n    }\n    function ge(te) {\n      return U(te) === m;\n    }\n    function _e(te) {\n      return U(te) === x;\n    }\n    function me(te) {\n      return U(te) === r;\n    }\n    function de(te) {\n      return U(te) === a;\n    }\n    function Ge(te) {\n      return U(te) === o;\n    }\n    function Me(te) {\n      return U(te) === g;\n    }\n    it.AsyncMode = F, it.ConcurrentMode = j, it.ContextConsumer = K, it.ContextProvider = J, it.Element = X, it.ForwardRef = _, it.Fragment = u, it.Lazy = v, it.Memo = w, it.Portal = y, it.Profiler = $, it.StrictMode = A, it.Suspense = H, it.isAsyncMode = h, it.isConcurrentMode = L, it.isContextConsumer = Y, it.isContextProvider = ne, it.isElement = ie, it.isForwardRef = se, it.isFragment = ye, it.isLazy = ge, it.isMemo = _e, it.isPortal = me, it.isProfiler = de, it.isStrictMode = Ge, it.isSuspense = Me, it.isValidElementType = W, it.typeOf = U;\n  }(), it;\n}\nvar Z9 = {};\nZ9.NODE_ENV === \"production\" ? h1.exports = j9() : h1.exports = q9();\nvar K9 = h1.exports, op = K9, G9 = {\n  $$typeof: !0,\n  render: !0,\n  defaultProps: !0,\n  displayName: !0,\n  propTypes: !0\n}, Y9 = {\n  $$typeof: !0,\n  compare: !0,\n  defaultProps: !0,\n  displayName: !0,\n  propTypes: !0,\n  type: !0\n}, ap = {};\nap[op.ForwardRef] = G9;\nap[op.Memo] = Y9;\nvar X9 = !0;\nfunction fc(e, t, n) {\n  var r = \"\";\n  return n.split(\" \").forEach(function(i) {\n    e[i] !== void 0 ? t.push(e[i] + \";\") : r += i + \" \";\n  }), r;\n}\nvar Md = function(t, n, r) {\n  var i = t.key + \"-\" + n.name;\n  // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (r === !1 || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  X9 === !1) && t.registered[i] === void 0 && (t.registered[i] = n.styles);\n}, uc = function(t, n, r) {\n  Md(t, n, r);\n  var i = t.key + \"-\" + n.name;\n  if (t.inserted[n.name] === void 0) {\n    var o = n;\n    do\n      t.insert(n === o ? \".\" + i : \"\", o, t.sheet, !0), o = o.next;\n    while (o !== void 0);\n  }\n};\nfunction J9(e) {\n  for (var t = 0, n, r = 0, i = e.length; i >= 4; ++r, i -= 4)\n    n = e.charCodeAt(r) & 255 | (e.charCodeAt(++r) & 255) << 8 | (e.charCodeAt(++r) & 255) << 16 | (e.charCodeAt(++r) & 255) << 24, n = /* Math.imul(k, m): */\n    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16), n ^= /* k >>> r: */\n    n >>> 24, t = /* Math.imul(k, m): */\n    (n & 65535) * 1540483477 + ((n >>> 16) * 59797 << 16) ^ /* Math.imul(h, m): */\n    (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);\n  switch (i) {\n    case 3:\n      t ^= (e.charCodeAt(r + 2) & 255) << 16;\n    case 2:\n      t ^= (e.charCodeAt(r + 1) & 255) << 8;\n    case 1:\n      t ^= e.charCodeAt(r) & 255, t = /* Math.imul(h, m): */\n      (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16);\n  }\n  return t ^= t >>> 13, t = /* Math.imul(h, m): */\n  (t & 65535) * 1540483477 + ((t >>> 16) * 59797 << 16), ((t ^ t >>> 15) >>> 0).toString(36);\n}\nvar Q9 = {\n  animationIterationCount: 1,\n  aspectRatio: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  scale: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n}, e8 = !1, t8 = /[A-Z]|^ms/g, n8 = /_EMO_([^_]+?)_([^]*?)_EMO_/g, sp = function(t) {\n  return t.charCodeAt(1) === 45;\n}, gu = function(t) {\n  return t != null && typeof t != \"boolean\";\n}, hl = /* @__PURE__ */ rp(function(e) {\n  return sp(e) ? e : e.replace(t8, \"-$&\").toLowerCase();\n}), mu = function(t, n) {\n  switch (t) {\n    case \"animation\":\n    case \"animationName\":\n      if (typeof n == \"string\")\n        return n.replace(n8, function(r, i, o) {\n          return er = {\n            name: i,\n            styles: o,\n            next: er\n          }, i;\n        });\n  }\n  return Q9[t] !== 1 && !sp(t) && typeof n == \"number\" && n !== 0 ? n + \"px\" : n;\n}, r8 = \"Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.\";\nfunction La(e, t, n) {\n  if (n == null)\n    return \"\";\n  var r = n;\n  if (r.__emotion_styles !== void 0)\n    return r;\n  switch (typeof n) {\n    case \"boolean\":\n      return \"\";\n    case \"object\": {\n      var i = n;\n      if (i.anim === 1)\n        return er = {\n          name: i.name,\n          styles: i.styles,\n          next: er\n        }, i.name;\n      var o = n;\n      if (o.styles !== void 0) {\n        var a = o.next;\n        if (a !== void 0)\n          for (; a !== void 0; )\n            er = {\n              name: a.name,\n              styles: a.styles,\n              next: er\n            }, a = a.next;\n        var s = o.styles + \";\";\n        return s;\n      }\n      return i8(e, t, n);\n    }\n    case \"function\": {\n      if (e !== void 0) {\n        var c = er, l = n(e);\n        return er = c, La(e, t, l);\n      }\n      break;\n    }\n  }\n  var d = n;\n  if (t == null)\n    return d;\n  var f = t[d];\n  return f !== void 0 ? f : d;\n}\nfunction i8(e, t, n) {\n  var r = \"\";\n  if (Array.isArray(n))\n    for (var i = 0; i < n.length; i++)\n      r += La(e, t, n[i]) + \";\";\n  else\n    for (var o in n) {\n      var a = n[o];\n      if (typeof a != \"object\") {\n        var s = a;\n        t != null && t[s] !== void 0 ? r += o + \"{\" + t[s] + \"}\" : gu(s) && (r += hl(o) + \":\" + mu(o, s) + \";\");\n      } else {\n        if (o === \"NO_COMPONENT_SELECTOR\" && e8)\n          throw new Error(r8);\n        if (Array.isArray(a) && typeof a[0] == \"string\" && (t == null || t[a[0]] === void 0))\n          for (var c = 0; c < a.length; c++)\n            gu(a[c]) && (r += hl(o) + \":\" + mu(o, a[c]) + \";\");\n        else {\n          var l = La(e, t, a);\n          switch (o) {\n            case \"animation\":\n            case \"animationName\": {\n              r += hl(o) + \":\" + l + \";\";\n              break;\n            }\n            default:\n              r += o + \"{\" + l + \"}\";\n          }\n        }\n      }\n    }\n  return r;\n}\nvar vu = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g, er;\nfunction Li(e, t, n) {\n  if (e.length === 1 && typeof e[0] == \"object\" && e[0] !== null && e[0].styles !== void 0)\n    return e[0];\n  var r = !0, i = \"\";\n  er = void 0;\n  var o = e[0];\n  if (o == null || o.raw === void 0)\n    r = !1, i += La(n, t, o);\n  else {\n    var a = o;\n    i += a[0];\n  }\n  for (var s = 1; s < e.length; s++)\n    if (i += La(n, t, e[s]), r) {\n      var c = o;\n      i += c[s];\n    }\n  vu.lastIndex = 0;\n  for (var l = \"\", d; (d = vu.exec(i)) !== null; )\n    l += \"-\" + d[1];\n  var f = J9(i) + l;\n  return {\n    name: f,\n    styles: i,\n    next: er\n  };\n}\nvar o8 = function(t) {\n  return t();\n}, cp = react__WEBPACK_IMPORTED_MODULE_0__.useInsertionEffect ? react__WEBPACK_IMPORTED_MODULE_0__.useInsertionEffect : !1, lp = cp || o8, yu = cp || react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect, a8 = !1, dp = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(\n  // we're doing this to avoid preconstruct's dead code elimination in this one case\n  // because this module is primarily intended for the browser and node\n  // but it's also required in react native and similar environments sometimes\n  // and we could have a special build just for that\n  // but this is much easier and the native packages\n  // might use a different theme context in the future anyway\n  typeof HTMLElement < \"u\" ? /* @__PURE__ */ Sd({\n    key: \"css\"\n  }) : null\n), s8 = dp.Provider, Ld = function(t) {\n  return /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(n, r) {\n    var i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(dp);\n    return t(n, i, r);\n  });\n}, go = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext({}), Cn = function() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(go);\n}, c8 = function(t, n) {\n  if (typeof n == \"function\") {\n    var r = n(t);\n    return r;\n  }\n  return Rs({}, t, n);\n}, l8 = /* @__PURE__ */ fu(function(e) {\n  return fu(function(t) {\n    return c8(e, t);\n  });\n}), d8 = function(t) {\n  var n = react__WEBPACK_IMPORTED_MODULE_0__.useContext(go);\n  return t.theme !== n && (n = l8(n)(t.theme)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(go.Provider, {\n    value: n\n  }, t.children);\n}, hc = {}.hasOwnProperty, p1 = \"__EMOTION_TYPE_PLEASE_DO_NOT_USE__\", fp = function(t, n) {\n  var r = {};\n  for (var i in n)\n    hc.call(n, i) && (r[i] = n[i]);\n  return r[p1] = t, r;\n}, f8 = function(t) {\n  var n = t.cache, r = t.serialized, i = t.isStringTag;\n  return Md(n, r, i), lp(function() {\n    return uc(n, r, i);\n  }), null;\n}, u8 = /* @__PURE__ */ Ld(\n  /* <any, any> */\n  function(e, t, n) {\n    var r = e.css;\n    typeof r == \"string\" && t.registered[r] !== void 0 && (r = t.registered[r]);\n    var i = e[p1], o = [r], a = \"\";\n    typeof e.className == \"string\" ? a = fc(t.registered, o, e.className) : e.className != null && (a = e.className + \" \");\n    var s = Li(o, void 0, react__WEBPACK_IMPORTED_MODULE_0__.useContext(go));\n    a += t.key + \"-\" + s.name;\n    var c = {};\n    for (var l in e)\n      hc.call(e, l) && l !== \"css\" && l !== p1 && !a8 && (c[l] = e[l]);\n    return c.className = a, n && (c.ref = n), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(f8, {\n      cache: t,\n      serialized: s,\n      isStringTag: typeof i == \"string\"\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(i, c));\n  }\n), up = u8, xt = ni.Fragment;\nfunction p(e, t, n) {\n  return hc.call(t, \"css\") ? ni.jsx(up, fp(e, t), n) : ni.jsx(e, t, n);\n}\nfunction q(e, t, n) {\n  return hc.call(t, \"css\") ? ni.jsxs(up, fp(e, t), n) : ni.jsxs(e, t, n);\n}\nvar h8 = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, p8 = /* @__PURE__ */ rp(\n  function(e) {\n    return h8.test(e) || e.charCodeAt(0) === 111 && e.charCodeAt(1) === 110 && e.charCodeAt(2) < 91;\n  }\n  /* Z+1 */\n), hp = /* @__PURE__ */ Ld(function(e, t) {\n  var n = e.styles, r = Li([n], void 0, react__WEBPACK_IMPORTED_MODULE_0__.useContext(go)), i = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  return yu(function() {\n    var o = t.key + \"-global\", a = new t.sheet.constructor({\n      key: o,\n      nonce: t.sheet.nonce,\n      container: t.sheet.container,\n      speedy: t.sheet.isSpeedy\n    }), s = !1, c = document.querySelector('style[data-emotion=\"' + o + \" \" + r.name + '\"]');\n    return t.sheet.tags.length && (a.before = t.sheet.tags[0]), c !== null && (s = !0, c.setAttribute(\"data-emotion\", o), a.hydrate([c])), i.current = [a, s], function() {\n      a.flush();\n    };\n  }, [t]), yu(function() {\n    var o = i.current, a = o[0], s = o[1];\n    if (s) {\n      o[1] = !1;\n      return;\n    }\n    if (r.next !== void 0 && uc(t, r.next, !0), a.tags.length) {\n      var c = a.tags[a.tags.length - 1].nextElementSibling;\n      a.before = c, a.flush();\n    }\n    t.insert(\"\", r, a, !1);\n  }, [t, r.name]), null;\n});\nfunction gt() {\n  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)\n    t[n] = arguments[n];\n  return Li(t);\n}\nvar g8 = p8, m8 = function(t) {\n  return t !== \"theme\";\n}, bu = function(t) {\n  return typeof t == \"string\" && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  t.charCodeAt(0) > 96 ? g8 : m8;\n}, xu = function(t, n, r) {\n  var i;\n  if (n) {\n    var o = n.shouldForwardProp;\n    i = t.__emotion_forwardProp && o ? function(a) {\n      return t.__emotion_forwardProp(a) && o(a);\n    } : o;\n  }\n  return typeof i != \"function\" && r && (i = t.__emotion_forwardProp), i;\n}, v8 = !1, y8 = function(t) {\n  var n = t.cache, r = t.serialized, i = t.isStringTag;\n  return Md(n, r, i), lp(function() {\n    return uc(n, r, i);\n  }), null;\n}, b8 = function e(t, n) {\n  var r = t.__emotion_real === t, i = r && t.__emotion_base || t, o, a;\n  n !== void 0 && (o = n.label, a = n.target);\n  var s = xu(t, n, r), c = s || bu(i), l = !c(\"as\");\n  return function() {\n    var d = arguments, f = r && t.__emotion_styles !== void 0 ? t.__emotion_styles.slice(0) : [];\n    if (o !== void 0 && f.push(\"label:\" + o + \";\"), d[0] == null || d[0].raw === void 0)\n      f.push.apply(f, d);\n    else {\n      f.push(d[0][0]);\n      for (var g = d.length, b = 1; b < g; b++)\n        f.push(d[b], d[0][b]);\n    }\n    var x = Ld(function(m, C, S) {\n      var T = l && m.as || i, N = \"\", W = [], U = m;\n      if (m.theme == null) {\n        U = {};\n        for (var F in m)\n          U[F] = m[F];\n        U.theme = react__WEBPACK_IMPORTED_MODULE_0__.useContext(go);\n      }\n      typeof m.className == \"string\" ? N = fc(C.registered, W, m.className) : m.className != null && (N = m.className + \" \");\n      var j = Li(f.concat(W), C.registered, U);\n      N += C.key + \"-\" + j.name, a !== void 0 && (N += \" \" + a);\n      var K = l && s === void 0 ? bu(T) : c, J = {};\n      for (var X in m)\n        l && X === \"as\" || K(X) && (J[X] = m[X]);\n      return J.className = N, S && (J.ref = S), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(y8, {\n        cache: C,\n        serialized: j,\n        isStringTag: typeof T == \"string\"\n      }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(T, J));\n    });\n    return x.displayName = o !== void 0 ? o : \"Styled(\" + (typeof i == \"string\" ? i : i.displayName || i.name || \"Component\") + \")\", x.defaultProps = t.defaultProps, x.__emotion_real = x, x.__emotion_base = i, x.__emotion_styles = f, x.__emotion_forwardProp = s, Object.defineProperty(x, \"toString\", {\n      value: function() {\n        return a === void 0 && v8 ? \"NO_COMPONENT_SELECTOR\" : \".\" + a;\n      }\n    }), x.withComponent = function(m, C) {\n      return e(m, Rs({}, n, C, {\n        shouldForwardProp: xu(x, C, !0)\n      })).apply(void 0, f);\n    }, x;\n  };\n}, x8 = [\n  \"a\",\n  \"abbr\",\n  \"address\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"bdi\",\n  \"bdo\",\n  \"big\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"marquee\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rp\",\n  \"rt\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"small\",\n  \"source\",\n  \"span\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\",\n  // SVG\n  \"circle\",\n  \"clipPath\",\n  \"defs\",\n  \"ellipse\",\n  \"foreignObject\",\n  \"g\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"mask\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"stop\",\n  \"svg\",\n  \"text\",\n  \"tspan\"\n], G = b8.bind();\nx8.forEach(function(e) {\n  G[e] = G(e);\n});\nvar pp = typeof global == \"object\" && global && global.Object === Object && global, w8 = typeof self == \"object\" && self && self.Object === Object && self, gr = pp || w8 || Function(\"return this\")(), dr = gr.Symbol, gp = Object.prototype, $8 = gp.hasOwnProperty, C8 = gp.toString, ra = dr ? dr.toStringTag : void 0;\nfunction S8(e) {\n  var t = $8.call(e, ra), n = e[ra];\n  try {\n    e[ra] = void 0;\n    var r = !0;\n  } catch {\n  }\n  var i = C8.call(e);\n  return r && (t ? e[ra] = n : delete e[ra]), i;\n}\nvar M8 = Object.prototype, L8 = M8.toString;\nfunction A8(e) {\n  return L8.call(e);\n}\nvar k8 = \"[object Null]\", _8 = \"[object Undefined]\", wu = dr ? dr.toStringTag : void 0;\nfunction Wi(e) {\n  return e == null ? e === void 0 ? _8 : k8 : wu && wu in Object(e) ? S8(e) : A8(e);\n}\nfunction Fi(e) {\n  return e != null && typeof e == \"object\";\n}\nvar E8 = \"[object Symbol]\";\nfunction Ad(e) {\n  return typeof e == \"symbol\" || Fi(e) && Wi(e) == E8;\n}\nfunction mp(e, t) {\n  for (var n = -1, r = e == null ? 0 : e.length, i = Array(r); ++n < r; )\n    i[n] = t(e[n], n, e);\n  return i;\n}\nvar ji = Array.isArray, T8 = 1 / 0, $u = dr ? dr.prototype : void 0, Cu = $u ? $u.toString : void 0;\nfunction vp(e) {\n  if (typeof e == \"string\")\n    return e;\n  if (ji(e))\n    return mp(e, vp) + \"\";\n  if (Ad(e))\n    return Cu ? Cu.call(e) : \"\";\n  var t = e + \"\";\n  return t == \"0\" && 1 / e == -T8 ? \"-0\" : t;\n}\nfunction Zn(e) {\n  var t = typeof e;\n  return e != null && (t == \"object\" || t == \"function\");\n}\nfunction B8(e) {\n  return e;\n}\nvar I8 = \"[object AsyncFunction]\", D8 = \"[object Function]\", R8 = \"[object GeneratorFunction]\", P8 = \"[object Proxy]\";\nfunction yp(e) {\n  if (!Zn(e))\n    return !1;\n  var t = Wi(e);\n  return t == D8 || t == R8 || t == I8 || t == P8;\n}\nvar pl = gr[\"__core-js_shared__\"], Su = function() {\n  var e = /[^.]+$/.exec(pl && pl.keys && pl.keys.IE_PROTO || \"\");\n  return e ? \"Symbol(src)_1.\" + e : \"\";\n}();\nfunction O8(e) {\n  return !!Su && Su in e;\n}\nvar H8 = Function.prototype, U8 = H8.toString;\nfunction qi(e) {\n  if (e != null) {\n    try {\n      return U8.call(e);\n    } catch {\n    }\n    try {\n      return e + \"\";\n    } catch {\n    }\n  }\n  return \"\";\n}\nvar N8 = /[\\\\^$.*+?()[\\]{}|]/g, V8 = /^\\[object .+?Constructor\\]$/, z8 = Function.prototype, W8 = Object.prototype, F8 = z8.toString, j8 = W8.hasOwnProperty, q8 = RegExp(\n  \"^\" + F8.call(j8).replace(N8, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"\n);\nfunction Z8(e) {\n  if (!Zn(e) || O8(e))\n    return !1;\n  var t = yp(e) ? q8 : V8;\n  return t.test(qi(e));\n}\nfunction K8(e, t) {\n  return e == null ? void 0 : e[t];\n}\nfunction Zi(e, t) {\n  var n = K8(e, t);\n  return Z8(n) ? n : void 0;\n}\nvar g1 = Zi(gr, \"WeakMap\"), Mu = Object.create, G8 = /* @__PURE__ */ function() {\n  function e() {\n  }\n  return function(t) {\n    if (!Zn(t))\n      return {};\n    if (Mu)\n      return Mu(t);\n    e.prototype = t;\n    var n = new e();\n    return e.prototype = void 0, n;\n  };\n}();\nfunction Y8(e, t, n) {\n  switch (n.length) {\n    case 0:\n      return e.call(t);\n    case 1:\n      return e.call(t, n[0]);\n    case 2:\n      return e.call(t, n[0], n[1]);\n    case 3:\n      return e.call(t, n[0], n[1], n[2]);\n  }\n  return e.apply(t, n);\n}\nfunction X8(e, t) {\n  var n = -1, r = e.length;\n  for (t || (t = Array(r)); ++n < r; )\n    t[n] = e[n];\n  return t;\n}\nvar J8 = 800, Q8 = 16, e7 = Date.now;\nfunction t7(e) {\n  var t = 0, n = 0;\n  return function() {\n    var r = e7(), i = Q8 - (r - n);\n    if (n = r, i > 0) {\n      if (++t >= J8)\n        return arguments[0];\n    } else\n      t = 0;\n    return e.apply(void 0, arguments);\n  };\n}\nfunction n7(e) {\n  return function() {\n    return e;\n  };\n}\nvar Ps = function() {\n  try {\n    var e = Zi(Object, \"defineProperty\");\n    return e({}, \"\", {}), e;\n  } catch {\n  }\n}(), r7 = Ps ? function(e, t) {\n  return Ps(e, \"toString\", {\n    configurable: !0,\n    enumerable: !1,\n    value: n7(t),\n    writable: !0\n  });\n} : B8, i7 = t7(r7);\nfunction o7(e, t) {\n  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )\n    ;\n  return e;\n}\nvar a7 = 9007199254740991, s7 = /^(?:0|[1-9]\\d*)$/;\nfunction c7(e, t) {\n  var n = typeof e;\n  return t = t ?? a7, !!t && (n == \"number\" || n != \"symbol\" && s7.test(e)) && e > -1 && e % 1 == 0 && e < t;\n}\nfunction bp(e, t, n) {\n  t == \"__proto__\" && Ps ? Ps(e, t, {\n    configurable: !0,\n    enumerable: !0,\n    value: n,\n    writable: !0\n  }) : e[t] = n;\n}\nfunction xp(e, t) {\n  return e === t || e !== e && t !== t;\n}\nvar l7 = Object.prototype, d7 = l7.hasOwnProperty;\nfunction wp(e, t, n) {\n  var r = e[t];\n  (!(d7.call(e, t) && xp(r, n)) || n === void 0 && !(t in e)) && bp(e, t, n);\n}\nfunction Wa(e, t, n, r) {\n  var i = !n;\n  n || (n = {});\n  for (var o = -1, a = t.length; ++o < a; ) {\n    var s = t[o], c = void 0;\n    c === void 0 && (c = e[s]), i ? bp(n, s, c) : wp(n, s, c);\n  }\n  return n;\n}\nvar Lu = Math.max;\nfunction f7(e, t, n) {\n  return t = Lu(t === void 0 ? e.length - 1 : t, 0), function() {\n    for (var r = arguments, i = -1, o = Lu(r.length - t, 0), a = Array(o); ++i < o; )\n      a[i] = r[t + i];\n    i = -1;\n    for (var s = Array(t + 1); ++i < t; )\n      s[i] = r[i];\n    return s[t] = n(a), Y8(e, this, s);\n  };\n}\nvar u7 = 9007199254740991;\nfunction $p(e) {\n  return typeof e == \"number\" && e > -1 && e % 1 == 0 && e <= u7;\n}\nfunction Cp(e) {\n  return e != null && $p(e.length) && !yp(e);\n}\nvar h7 = Object.prototype;\nfunction kd(e) {\n  var t = e && e.constructor, n = typeof t == \"function\" && t.prototype || h7;\n  return e === n;\n}\nfunction p7(e, t) {\n  for (var n = -1, r = Array(e); ++n < e; )\n    r[n] = t(n);\n  return r;\n}\nvar g7 = \"[object Arguments]\";\nfunction Au(e) {\n  return Fi(e) && Wi(e) == g7;\n}\nvar Sp = Object.prototype, m7 = Sp.hasOwnProperty, v7 = Sp.propertyIsEnumerable, Mp = Au(/* @__PURE__ */ function() {\n  return arguments;\n}()) ? Au : function(e) {\n  return Fi(e) && m7.call(e, \"callee\") && !v7.call(e, \"callee\");\n};\nfunction y7() {\n  return !1;\n}\nvar Lp = typeof exports == \"object\" && exports && !exports.nodeType && exports, ku = Lp && typeof module == \"object\" && module && !module.nodeType && module, b7 = ku && ku.exports === Lp, _u = b7 ? gr.Buffer : void 0, x7 = _u ? _u.isBuffer : void 0, Ap = x7 || y7, w7 = \"[object Arguments]\", $7 = \"[object Array]\", C7 = \"[object Boolean]\", S7 = \"[object Date]\", M7 = \"[object Error]\", L7 = \"[object Function]\", A7 = \"[object Map]\", k7 = \"[object Number]\", _7 = \"[object Object]\", E7 = \"[object RegExp]\", T7 = \"[object Set]\", B7 = \"[object String]\", I7 = \"[object WeakMap]\", D7 = \"[object ArrayBuffer]\", R7 = \"[object DataView]\", P7 = \"[object Float32Array]\", O7 = \"[object Float64Array]\", H7 = \"[object Int8Array]\", U7 = \"[object Int16Array]\", N7 = \"[object Int32Array]\", V7 = \"[object Uint8Array]\", z7 = \"[object Uint8ClampedArray]\", W7 = \"[object Uint16Array]\", F7 = \"[object Uint32Array]\", St = {};\nSt[P7] = St[O7] = St[H7] = St[U7] = St[N7] = St[V7] = St[z7] = St[W7] = St[F7] = !0;\nSt[w7] = St[$7] = St[D7] = St[C7] = St[R7] = St[S7] = St[M7] = St[L7] = St[A7] = St[k7] = St[_7] = St[E7] = St[T7] = St[B7] = St[I7] = !1;\nfunction j7(e) {\n  return Fi(e) && $p(e.length) && !!St[Wi(e)];\n}\nfunction _d(e) {\n  return function(t) {\n    return e(t);\n  };\n}\nvar kp = typeof exports == \"object\" && exports && !exports.nodeType && exports, ma = kp && typeof module == \"object\" && module && !module.nodeType && module, q7 = ma && ma.exports === kp, gl = q7 && pp.process, mo = function() {\n  try {\n    var e = ma && ma.require && ma.require(\"util\").types;\n    return e || gl && gl.binding && gl.binding(\"util\");\n  } catch {\n  }\n}(), Eu = mo && mo.isTypedArray, Z7 = Eu ? _d(Eu) : j7, K7 = Object.prototype, G7 = K7.hasOwnProperty;\nfunction _p(e, t) {\n  var n = ji(e), r = !n && Mp(e), i = !n && !r && Ap(e), o = !n && !r && !i && Z7(e), a = n || r || i || o, s = a ? p7(e.length, String) : [], c = s.length;\n  for (var l in e)\n    (t || G7.call(e, l)) && !(a && // Safari 9 has enumerable `arguments.length` in strict mode.\n    (l == \"length\" || // Node.js 0.10 has enumerable non-index properties on buffers.\n    i && (l == \"offset\" || l == \"parent\") || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    o && (l == \"buffer\" || l == \"byteLength\" || l == \"byteOffset\") || // Skip index properties.\n    c7(l, c))) && s.push(l);\n  return s;\n}\nfunction Ep(e, t) {\n  return function(n) {\n    return e(t(n));\n  };\n}\nvar Y7 = Ep(Object.keys, Object), X7 = Object.prototype, J7 = X7.hasOwnProperty;\nfunction Q7(e) {\n  if (!kd(e))\n    return Y7(e);\n  var t = [];\n  for (var n in Object(e))\n    J7.call(e, n) && n != \"constructor\" && t.push(n);\n  return t;\n}\nfunction Ed(e) {\n  return Cp(e) ? _p(e) : Q7(e);\n}\nfunction em(e) {\n  var t = [];\n  if (e != null)\n    for (var n in Object(e))\n      t.push(n);\n  return t;\n}\nvar tm = Object.prototype, nm = tm.hasOwnProperty;\nfunction rm(e) {\n  if (!Zn(e))\n    return em(e);\n  var t = kd(e), n = [];\n  for (var r in e)\n    r == \"constructor\" && (t || !nm.call(e, r)) || n.push(r);\n  return n;\n}\nfunction Td(e) {\n  return Cp(e) ? _p(e, !0) : rm(e);\n}\nvar im = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, om = /^\\w*$/;\nfunction am(e, t) {\n  if (ji(e))\n    return !1;\n  var n = typeof e;\n  return n == \"number\" || n == \"symbol\" || n == \"boolean\" || e == null || Ad(e) ? !0 : om.test(e) || !im.test(e) || t != null && e in Object(t);\n}\nvar Aa = Zi(Object, \"create\");\nfunction sm() {\n  this.__data__ = Aa ? Aa(null) : {}, this.size = 0;\n}\nfunction cm(e) {\n  var t = this.has(e) && delete this.__data__[e];\n  return this.size -= t ? 1 : 0, t;\n}\nvar lm = \"__lodash_hash_undefined__\", dm = Object.prototype, fm = dm.hasOwnProperty;\nfunction um(e) {\n  var t = this.__data__;\n  if (Aa) {\n    var n = t[e];\n    return n === lm ? void 0 : n;\n  }\n  return fm.call(t, e) ? t[e] : void 0;\n}\nvar hm = Object.prototype, pm = hm.hasOwnProperty;\nfunction gm(e) {\n  var t = this.__data__;\n  return Aa ? t[e] !== void 0 : pm.call(t, e);\n}\nvar mm = \"__lodash_hash_undefined__\";\nfunction vm(e, t) {\n  var n = this.__data__;\n  return this.size += this.has(e) ? 0 : 1, n[e] = Aa && t === void 0 ? mm : t, this;\n}\nfunction Di(e) {\n  var t = -1, n = e == null ? 0 : e.length;\n  for (this.clear(); ++t < n; ) {\n    var r = e[t];\n    this.set(r[0], r[1]);\n  }\n}\nDi.prototype.clear = sm;\nDi.prototype.delete = cm;\nDi.prototype.get = um;\nDi.prototype.has = gm;\nDi.prototype.set = vm;\nfunction ym() {\n  this.__data__ = [], this.size = 0;\n}\nfunction pc(e, t) {\n  for (var n = e.length; n--; )\n    if (xp(e[n][0], t))\n      return n;\n  return -1;\n}\nvar bm = Array.prototype, xm = bm.splice;\nfunction wm(e) {\n  var t = this.__data__, n = pc(t, e);\n  if (n < 0)\n    return !1;\n  var r = t.length - 1;\n  return n == r ? t.pop() : xm.call(t, n, 1), --this.size, !0;\n}\nfunction $m(e) {\n  var t = this.__data__, n = pc(t, e);\n  return n < 0 ? void 0 : t[n][1];\n}\nfunction Cm(e) {\n  return pc(this.__data__, e) > -1;\n}\nfunction Sm(e, t) {\n  var n = this.__data__, r = pc(n, e);\n  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;\n}\nfunction Hr(e) {\n  var t = -1, n = e == null ? 0 : e.length;\n  for (this.clear(); ++t < n; ) {\n    var r = e[t];\n    this.set(r[0], r[1]);\n  }\n}\nHr.prototype.clear = ym;\nHr.prototype.delete = wm;\nHr.prototype.get = $m;\nHr.prototype.has = Cm;\nHr.prototype.set = Sm;\nvar ka = Zi(gr, \"Map\");\nfunction Mm() {\n  this.size = 0, this.__data__ = {\n    hash: new Di(),\n    map: new (ka || Hr)(),\n    string: new Di()\n  };\n}\nfunction Lm(e) {\n  var t = typeof e;\n  return t == \"string\" || t == \"number\" || t == \"symbol\" || t == \"boolean\" ? e !== \"__proto__\" : e === null;\n}\nfunction gc(e, t) {\n  var n = e.__data__;\n  return Lm(t) ? n[typeof t == \"string\" ? \"string\" : \"hash\"] : n.map;\n}\nfunction Am(e) {\n  var t = gc(this, e).delete(e);\n  return this.size -= t ? 1 : 0, t;\n}\nfunction km(e) {\n  return gc(this, e).get(e);\n}\nfunction _m(e) {\n  return gc(this, e).has(e);\n}\nfunction Em(e, t) {\n  var n = gc(this, e), r = n.size;\n  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;\n}\nfunction fi(e) {\n  var t = -1, n = e == null ? 0 : e.length;\n  for (this.clear(); ++t < n; ) {\n    var r = e[t];\n    this.set(r[0], r[1]);\n  }\n}\nfi.prototype.clear = Mm;\nfi.prototype.delete = Am;\nfi.prototype.get = km;\nfi.prototype.has = _m;\nfi.prototype.set = Em;\nvar Tm = \"Expected a function\";\nfunction Bd(e, t) {\n  if (typeof e != \"function\" || t != null && typeof t != \"function\")\n    throw new TypeError(Tm);\n  var n = function() {\n    var r = arguments, i = t ? t.apply(this, r) : r[0], o = n.cache;\n    if (o.has(i))\n      return o.get(i);\n    var a = e.apply(this, r);\n    return n.cache = o.set(i, a) || o, a;\n  };\n  return n.cache = new (Bd.Cache || fi)(), n;\n}\nBd.Cache = fi;\nvar Bm = 500;\nfunction Im(e) {\n  var t = Bd(e, function(r) {\n    return n.size === Bm && n.clear(), r;\n  }), n = t.cache;\n  return t;\n}\nvar Dm = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, Rm = /\\\\(\\\\)?/g, Pm = Im(function(e) {\n  var t = [];\n  return e.charCodeAt(0) === 46 && t.push(\"\"), e.replace(Dm, function(n, r, i, o) {\n    t.push(i ? o.replace(Rm, \"$1\") : r || n);\n  }), t;\n});\nfunction Tp(e) {\n  return e == null ? \"\" : vp(e);\n}\nfunction Id(e, t) {\n  return ji(e) ? e : am(e, t) ? [e] : Pm(Tp(e));\n}\nvar Om = 1 / 0;\nfunction Bp(e) {\n  if (typeof e == \"string\" || Ad(e))\n    return e;\n  var t = e + \"\";\n  return t == \"0\" && 1 / e == -Om ? \"-0\" : t;\n}\nfunction Hm(e, t) {\n  t = Id(t, e);\n  for (var n = 0, r = t.length; e != null && n < r; )\n    e = e[Bp(t[n++])];\n  return n && n == r ? e : void 0;\n}\nfunction Dd(e, t) {\n  for (var n = -1, r = t.length, i = e.length; ++n < r; )\n    e[i + n] = t[n];\n  return e;\n}\nvar Tu = dr ? dr.isConcatSpreadable : void 0;\nfunction Um(e) {\n  return ji(e) || Mp(e) || !!(Tu && e && e[Tu]);\n}\nfunction Nm(e, t, n, r, i) {\n  var o = -1, a = e.length;\n  for (n || (n = Um), i || (i = []); ++o < a; ) {\n    var s = e[o];\n    n(s) ? Dd(i, s) : i[i.length] = s;\n  }\n  return i;\n}\nfunction Vm(e) {\n  var t = e == null ? 0 : e.length;\n  return t ? Nm(e) : [];\n}\nfunction zm(e) {\n  return i7(f7(e, void 0, Vm), e + \"\");\n}\nvar Rd = Ep(Object.getPrototypeOf, Object), Wm = \"[object Object]\", Fm = Function.prototype, jm = Object.prototype, Ip = Fm.toString, qm = jm.hasOwnProperty, Zm = Ip.call(Object);\nfunction Km(e) {\n  if (!Fi(e) || Wi(e) != Wm)\n    return !1;\n  var t = Rd(e);\n  if (t === null)\n    return !0;\n  var n = qm.call(t, \"constructor\") && t.constructor;\n  return typeof n == \"function\" && n instanceof n && Ip.call(n) == Zm;\n}\nfunction Gm(e, t, n) {\n  var r = -1, i = e.length;\n  t < 0 && (t = -t > i ? 0 : i + t), n = n > i ? i : n, n < 0 && (n += i), i = t > n ? 0 : n - t >>> 0, t >>>= 0;\n  for (var o = Array(i); ++r < i; )\n    o[r] = e[r + t];\n  return o;\n}\nfunction Ym() {\n  this.__data__ = new Hr(), this.size = 0;\n}\nfunction Xm(e) {\n  var t = this.__data__, n = t.delete(e);\n  return this.size = t.size, n;\n}\nfunction Jm(e) {\n  return this.__data__.get(e);\n}\nfunction Qm(e) {\n  return this.__data__.has(e);\n}\nvar ev = 200;\nfunction tv(e, t) {\n  var n = this.__data__;\n  if (n instanceof Hr) {\n    var r = n.__data__;\n    if (!ka || r.length < ev - 1)\n      return r.push([e, t]), this.size = ++n.size, this;\n    n = this.__data__ = new fi(r);\n  }\n  return n.set(e, t), this.size = n.size, this;\n}\nfunction Do(e) {\n  var t = this.__data__ = new Hr(e);\n  this.size = t.size;\n}\nDo.prototype.clear = Ym;\nDo.prototype.delete = Xm;\nDo.prototype.get = Jm;\nDo.prototype.has = Qm;\nDo.prototype.set = tv;\nfunction nv(e, t) {\n  return e && Wa(t, Ed(t), e);\n}\nfunction rv(e, t) {\n  return e && Wa(t, Td(t), e);\n}\nvar Dp = typeof exports == \"object\" && exports && !exports.nodeType && exports, Bu = Dp && typeof module == \"object\" && module && !module.nodeType && module, iv = Bu && Bu.exports === Dp, Iu = iv ? gr.Buffer : void 0, Du = Iu ? Iu.allocUnsafe : void 0;\nfunction ov(e, t) {\n  if (t)\n    return e.slice();\n  var n = e.length, r = Du ? Du(n) : new e.constructor(n);\n  return e.copy(r), r;\n}\nfunction av(e, t) {\n  for (var n = -1, r = e == null ? 0 : e.length, i = 0, o = []; ++n < r; ) {\n    var a = e[n];\n    t(a, n, e) && (o[i++] = a);\n  }\n  return o;\n}\nfunction Rp() {\n  return [];\n}\nvar sv = Object.prototype, cv = sv.propertyIsEnumerable, Ru = Object.getOwnPropertySymbols, Pd = Ru ? function(e) {\n  return e == null ? [] : (e = Object(e), av(Ru(e), function(t) {\n    return cv.call(e, t);\n  }));\n} : Rp;\nfunction lv(e, t) {\n  return Wa(e, Pd(e), t);\n}\nvar dv = Object.getOwnPropertySymbols, Pp = dv ? function(e) {\n  for (var t = []; e; )\n    Dd(t, Pd(e)), e = Rd(e);\n  return t;\n} : Rp;\nfunction fv(e, t) {\n  return Wa(e, Pp(e), t);\n}\nfunction Op(e, t, n) {\n  var r = t(e);\n  return ji(e) ? r : Dd(r, n(e));\n}\nfunction uv(e) {\n  return Op(e, Ed, Pd);\n}\nfunction Hp(e) {\n  return Op(e, Td, Pp);\n}\nvar m1 = Zi(gr, \"DataView\"), v1 = Zi(gr, \"Promise\"), y1 = Zi(gr, \"Set\"), Pu = \"[object Map]\", hv = \"[object Object]\", Ou = \"[object Promise]\", Hu = \"[object Set]\", Uu = \"[object WeakMap]\", Nu = \"[object DataView]\", pv = qi(m1), gv = qi(ka), mv = qi(v1), vv = qi(y1), yv = qi(g1), Lr = Wi;\n(m1 && Lr(new m1(new ArrayBuffer(1))) != Nu || ka && Lr(new ka()) != Pu || v1 && Lr(v1.resolve()) != Ou || y1 && Lr(new y1()) != Hu || g1 && Lr(new g1()) != Uu) && (Lr = function(e) {\n  var t = Wi(e), n = t == hv ? e.constructor : void 0, r = n ? qi(n) : \"\";\n  if (r)\n    switch (r) {\n      case pv:\n        return Nu;\n      case gv:\n        return Pu;\n      case mv:\n        return Ou;\n      case vv:\n        return Hu;\n      case yv:\n        return Uu;\n    }\n  return t;\n});\nvar bv = Object.prototype, xv = bv.hasOwnProperty;\nfunction wv(e) {\n  var t = e.length, n = new e.constructor(t);\n  return t && typeof e[0] == \"string\" && xv.call(e, \"index\") && (n.index = e.index, n.input = e.input), n;\n}\nvar Vu = gr.Uint8Array;\nfunction Od(e) {\n  var t = new e.constructor(e.byteLength);\n  return new Vu(t).set(new Vu(e)), t;\n}\nfunction $v(e, t) {\n  var n = t ? Od(e.buffer) : e.buffer;\n  return new e.constructor(n, e.byteOffset, e.byteLength);\n}\nvar Cv = /\\w*$/;\nfunction Sv(e) {\n  var t = new e.constructor(e.source, Cv.exec(e));\n  return t.lastIndex = e.lastIndex, t;\n}\nvar zu = dr ? dr.prototype : void 0, Wu = zu ? zu.valueOf : void 0;\nfunction Mv(e) {\n  return Wu ? Object(Wu.call(e)) : {};\n}\nfunction Lv(e, t) {\n  var n = t ? Od(e.buffer) : e.buffer;\n  return new e.constructor(n, e.byteOffset, e.length);\n}\nvar Av = \"[object Boolean]\", kv = \"[object Date]\", _v = \"[object Map]\", Ev = \"[object Number]\", Tv = \"[object RegExp]\", Bv = \"[object Set]\", Iv = \"[object String]\", Dv = \"[object Symbol]\", Rv = \"[object ArrayBuffer]\", Pv = \"[object DataView]\", Ov = \"[object Float32Array]\", Hv = \"[object Float64Array]\", Uv = \"[object Int8Array]\", Nv = \"[object Int16Array]\", Vv = \"[object Int32Array]\", zv = \"[object Uint8Array]\", Wv = \"[object Uint8ClampedArray]\", Fv = \"[object Uint16Array]\", jv = \"[object Uint32Array]\";\nfunction qv(e, t, n) {\n  var r = e.constructor;\n  switch (t) {\n    case Rv:\n      return Od(e);\n    case Av:\n    case kv:\n      return new r(+e);\n    case Pv:\n      return $v(e, n);\n    case Ov:\n    case Hv:\n    case Uv:\n    case Nv:\n    case Vv:\n    case zv:\n    case Wv:\n    case Fv:\n    case jv:\n      return Lv(e, n);\n    case _v:\n      return new r();\n    case Ev:\n    case Iv:\n      return new r(e);\n    case Tv:\n      return Sv(e);\n    case Bv:\n      return new r();\n    case Dv:\n      return Mv(e);\n  }\n}\nfunction Zv(e) {\n  return typeof e.constructor == \"function\" && !kd(e) ? G8(Rd(e)) : {};\n}\nvar Kv = \"[object Map]\";\nfunction Gv(e) {\n  return Fi(e) && Lr(e) == Kv;\n}\nvar Fu = mo && mo.isMap, Yv = Fu ? _d(Fu) : Gv, Xv = \"[object Set]\";\nfunction Jv(e) {\n  return Fi(e) && Lr(e) == Xv;\n}\nvar ju = mo && mo.isSet, Qv = ju ? _d(ju) : Jv, ey = 1, ty = 2, ny = 4, Up = \"[object Arguments]\", ry = \"[object Array]\", iy = \"[object Boolean]\", oy = \"[object Date]\", ay = \"[object Error]\", Np = \"[object Function]\", sy = \"[object GeneratorFunction]\", cy = \"[object Map]\", ly = \"[object Number]\", Vp = \"[object Object]\", dy = \"[object RegExp]\", fy = \"[object Set]\", uy = \"[object String]\", hy = \"[object Symbol]\", py = \"[object WeakMap]\", gy = \"[object ArrayBuffer]\", my = \"[object DataView]\", vy = \"[object Float32Array]\", yy = \"[object Float64Array]\", by = \"[object Int8Array]\", xy = \"[object Int16Array]\", wy = \"[object Int32Array]\", $y = \"[object Uint8Array]\", Cy = \"[object Uint8ClampedArray]\", Sy = \"[object Uint16Array]\", My = \"[object Uint32Array]\", bt = {};\nbt[Up] = bt[ry] = bt[gy] = bt[my] = bt[iy] = bt[oy] = bt[vy] = bt[yy] = bt[by] = bt[xy] = bt[wy] = bt[cy] = bt[ly] = bt[Vp] = bt[dy] = bt[fy] = bt[uy] = bt[hy] = bt[$y] = bt[Cy] = bt[Sy] = bt[My] = !0;\nbt[ay] = bt[Np] = bt[py] = !1;\nfunction Cs(e, t, n, r, i, o) {\n  var a, s = t & ey, c = t & ty, l = t & ny;\n  if (n && (a = i ? n(e, r, i, o) : n(e)), a !== void 0)\n    return a;\n  if (!Zn(e))\n    return e;\n  var d = ji(e);\n  if (d) {\n    if (a = wv(e), !s)\n      return X8(e, a);\n  } else {\n    var f = Lr(e), g = f == Np || f == sy;\n    if (Ap(e))\n      return ov(e, s);\n    if (f == Vp || f == Up || g && !i) {\n      if (a = c || g ? {} : Zv(e), !s)\n        return c ? fv(e, rv(a, e)) : lv(e, nv(a, e));\n    } else {\n      if (!bt[f])\n        return i ? e : {};\n      a = qv(e, f, s);\n    }\n  }\n  o || (o = new Do());\n  var b = o.get(e);\n  if (b)\n    return b;\n  o.set(e, a), Qv(e) ? e.forEach(function(C) {\n    a.add(Cs(C, t, n, C, e, o));\n  }) : Yv(e) && e.forEach(function(C, S) {\n    a.set(S, Cs(C, t, n, S, e, o));\n  });\n  var x = l ? c ? Hp : uv : c ? Td : Ed, m = d ? void 0 : x(e);\n  return o7(m || e, function(C, S) {\n    m && (S = C, C = e[S]), wp(a, S, Cs(C, t, n, S, e, o));\n  }), a;\n}\nfunction Ly(e) {\n  var t = e == null ? 0 : e.length;\n  return t ? e[t - 1] : void 0;\n}\nfunction Ay(e, t) {\n  return t.length < 2 ? e : Hm(e, Gm(t, 0, -1));\n}\nfunction ky(e, t) {\n  return t = Id(t, e), e = Ay(e, t), e == null || delete e[Bp(Ly(t))];\n}\nfunction _y(e) {\n  return Km(e) ? void 0 : e;\n}\nvar Ey = 1, Ty = 2, By = 4, Iy = zm(function(e, t) {\n  var n = {};\n  if (e == null)\n    return n;\n  var r = !1;\n  t = mp(t, function(o) {\n    return o = Id(o, e), r || (r = o.length > 1), o;\n  }), Wa(e, Hp(e), n), r && (n = Cs(n, Ey | Ty | By, _y));\n  for (var i = t.length; i--; )\n    ky(n, t[i]);\n  return n;\n}), Dy = 0;\nfunction Ry(e) {\n  var t = ++Dy;\n  return Tp(e) + t;\n}\nvar zp = /* @__PURE__ */ ((e) => (e.sm = \"sm\", e.md = \"md\", e.lg = \"lg\", e))(zp || {}), An = {\n  sm: 640,\n  md: 834,\n  lg: 1200\n}, Cr = (e) => (t) => `@media ${e} { ${t} }`, Bt = {\n  key: zp,\n  sm: Cr(`(max-width:${An.sm}px)`),\n  lg: Cr(`(min-width:${An.lg}px)`),\n  minSmMaxLg: Cr(\n    `(min-width:${An.sm + 1}px) and (max-width:${An.lg - 1}px)`\n  ),\n  minSmMaxMd: Cr(\n    `(min-width:${An.sm + 1}px) and (max-width:${An.md - 1}px)`\n  ),\n  minMdMaxLg: Cr(\n    `(min-width:${An.md}px) and (max-width:${An.lg - 1}px)`\n  ),\n  maxLg: Cr(`(max-width:${An.lg - 1}px)`),\n  maxMd: Cr(`(max-width:${An.md - 1}px)`),\n  minSm: Cr(`(min-width:${An.sm + 1}px)`),\n  minMd: Cr(`(min-width:${An.md + 1}px)`),\n  current: function(e) {\n    const t = (\n      /* window is undefined in first server side render for Next apps: */\n      typeof window > \"u\" ? \"sm\" : window.getComputedStyle(document.body, \":before\").content.replace(/\"/g, \"\")\n    );\n    return e ? Py(\n      t,\n      e\n    ) : t;\n  },\n  switch: (e, t, n, r) => {\n    const i = Bt.current();\n    return i === \"sm\" ? e : i === \"minSmMaxMd\" ? t : i === \"minMdMaxLg\" ? n : r;\n  },\n  isSm: () => Bt.current(\n    \"sm\"\n    /* sm */\n  ),\n  isMinSm: () => Bt.current(\n    \"minSm\"\n    /* minSm */\n  ),\n  isMinSmMaxMd: () => Bt.current(\n    \"minSmMaxMd\"\n    /* minSmMaxMd */\n  ),\n  isMinMdMaxLg: () => Bt.current(\n    \"minMdMaxLg\"\n    /* minMdMaxLg */\n  ),\n  isLg: () => Bt.current(\n    \"lg\"\n    /* lg */\n  )\n};\nfunction Py(e, t) {\n  const n = e === \"sm\", r = e === \"minSmMaxMd\", i = e === \"minMdMaxLg\", o = e === \"lg\";\n  if (t)\n    switch (t) {\n      case \"sm\":\n        return n;\n      case \"minSmMaxMd\":\n        return r;\n      case \"minMdMaxLg\":\n        return i;\n      case \"lg\":\n        return o;\n      case \"minSmMaxLg\":\n        return r || i;\n      case \"maxLg\":\n        return n || r || i;\n      case \"maxMd\":\n        return n || r;\n      case \"minSm\":\n        return r || i || o;\n      case \"minMd\":\n        return i || o;\n      default:\n        return !1;\n    }\n  return !1;\n}\nfunction Wp() {\n  const [e, t] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Bt.current());\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    const n = () => {\n      const r = Bt.current();\n      r !== e && t(r);\n    };\n    return n(), window.addEventListener(\"resize\", n), window.addEventListener(\"deviceorientation\", n), () => {\n      window.removeEventListener(\"resize\", n), window.removeEventListener(\"deviceorientation\", n);\n    };\n  }), Bt;\n}\nvar Fp = {\n  main: \"Montserrat\",\n  code: \"Monaco\"\n}, E = {\n  Lightspark: {\n    \"8xl\": \"72px\",\n    \"7xl\": \"72px\",\n    \"6xl\": \"60px\",\n    \"5xl\": \"44px\",\n    \"4xl\": \"40px\",\n    \"3xl\": \"36px\",\n    \"2xs\": \"14px\",\n    \"2xl\": \"32px\",\n    lg: \"24px\",\n    md: \"20px\",\n    sm: \"18px\",\n    xl: \"28px\",\n    xs: \"16px\"\n  },\n  LightsparkDocs: {\n    \"8xl\": \"72px\",\n    \"7xl\": \"72px\",\n    \"6xl\": \"60px\",\n    \"5xl\": \"44px\",\n    \"4xl\": \"40px\",\n    \"3xl\": \"36px\",\n    \"2xs\": \"14px\",\n    \"2xl\": \"32px\",\n    lg: \"24px\",\n    md: \"20px\",\n    sm: \"18px\",\n    xl: \"28px\",\n    xs: \"16px\"\n  },\n  UmaAuthSdk: {\n    \"8xl\": \"72px\",\n    \"7xl\": \"72px\",\n    \"6xl\": \"72px\",\n    \"5xl\": \"72px\",\n    \"4xl\": \"60px\",\n    \"3xl\": \"44px\",\n    \"2xs\": \"16px\",\n    \"2xl\": \"40px\",\n    lg: \"32px\",\n    md: \"28px\",\n    sm: \"24px\",\n    xl: \"36px\",\n    xs: \"20px\"\n  },\n  UmameDocs: {\n    \"8xl\": \"72px\",\n    \"7xl\": \"72px\",\n    \"6xl\": \"72px\",\n    \"5xl\": \"72px\",\n    \"4xl\": \"60px\",\n    \"3xl\": \"44px\",\n    \"2xs\": \"16px\",\n    \"2xl\": \"40px\",\n    lg: \"32px\",\n    md: \"28px\",\n    sm: \"24px\",\n    xl: \"36px\",\n    xs: \"20px\"\n  },\n  Bridge: {\n    \"8xl\": \"72px\",\n    \"7xl\": \"60px\",\n    \"6xl\": \"44px\",\n    \"5xl\": \"40px\",\n    \"4xl\": \"36px\",\n    \"3xl\": \"32px\",\n    \"2xs\": \"16px\",\n    \"2xl\": \"28px\",\n    lg: \"22px\",\n    md: \"20px\",\n    sm: \"18px\",\n    xl: \"24px\",\n    xs: \"16px\"\n  }\n};\nObject.keys(\n  E.Lightspark\n);\nvar B = {\n  main: {\n    ExtraBold: 800,\n    Bold: 700,\n    SemiBold: 600,\n    Medium: 500\n  },\n  code: {\n    Bold: 700,\n    Regular: 400\n  }\n}, I = {\n  Lightspark: {\n    \"2xs\": \"10px\",\n    xs: \"12px\",\n    sm: \"14px\",\n    md: \"16px\",\n    lg: \"20px\",\n    xl: \"24px\",\n    \"2xl\": \"28px\",\n    \"3xl\": \"32px\",\n    \"4xl\": \"36px\",\n    \"5xl\": \"48px\",\n    \"6xl\": \"64px\"\n  },\n  LightsparkDocs: {\n    \"2xs\": \"10px\",\n    xs: \"12px\",\n    sm: \"14px\",\n    md: \"16px\",\n    lg: \"20px\",\n    xl: \"24px\",\n    \"2xl\": \"28px\",\n    \"3xl\": \"32px\",\n    \"4xl\": \"36px\",\n    \"5xl\": \"48px\",\n    \"6xl\": \"64px\"\n  },\n  UmaAuthSdk: {\n    \"2xs\": \"11px\",\n    xs: \"12px\",\n    sm: \"14px\",\n    md: \"16px\",\n    lg: \"20px\",\n    xl: \"24px\",\n    \"2xl\": \"28px\",\n    \"3xl\": \"32px\",\n    \"4xl\": \"36px\",\n    \"5xl\": \"48px\",\n    \"6xl\": \"64px\"\n  },\n  UmameDocs: {\n    \"2xs\": \"11px\",\n    xs: \"12px\",\n    sm: \"14px\",\n    md: \"16px\",\n    lg: \"20px\",\n    xl: \"24px\",\n    \"2xl\": \"28px\",\n    \"3xl\": \"32px\",\n    \"4xl\": \"36px\",\n    \"5xl\": \"48px\",\n    \"6xl\": \"64px\"\n  },\n  Bridge: {\n    \"2xs\": \"11px\",\n    xs: \"12px\",\n    md: \"14px\",\n    lg: \"16px\",\n    xl: \"20px\",\n    \"2xl\": \"24px\",\n    \"3xl\": \"28px\",\n    \"4xl\": \"32px\",\n    \"5xl\": \"36px\",\n    \"6xl\": \"48px\",\n    \"7xl\": \"64px\"\n  }\n}, z = {\n  Lightspark: {\n    \"tight-max\": \"-4%\",\n    \"tight-high\": \"-3%\",\n    \"tight-medium\": \"-2%\",\n    \"tight-low\": \"-0.5%\",\n    normal: \"0\",\n    \"loose-max\": \"1.44px\"\n  },\n  LightsparkDocs: {\n    \"tight-max\": \"-4%\",\n    \"tight-high\": \"-3%\",\n    \"tight-medium\": \"-2%\",\n    \"tight-low\": \"-0.5%\",\n    normal: \"0\",\n    \"loose-max\": \"1.44px\"\n  },\n  UmaAuthSdk: {\n    tight: \"-.02em\",\n    normal: \"0\",\n    loose: \".1em\"\n  },\n  UmameDocs: {\n    tight: \"-.02em\",\n    normal: \"0\",\n    loose: \".1em\"\n  },\n  Bridge: {\n    tight: \"-2%\",\n    normal: \"0%\"\n  }\n}, D = {\n  none: \"none\",\n  uppercase: \"uppercase\"\n}, R = {\n  none: \"none\"\n}, P = {\n  0: \"0px\"\n}, O = {\n  default: \"default\",\n  0: \"0\",\n  16: \"16px\",\n  40: \"40px\"\n}, k = {\n  Large: \"Large\",\n  Mlarge: \"Mlarge\",\n  Medium: \"Medium\",\n  Schmedium: \"Schmedium\",\n  Small: \"Small\",\n  ExtraSmall: \"ExtraSmall\"\n}, re = {\n  Display: \"Display\",\n  Headline: \"Headline\",\n  Title: \"Title\",\n  Body: \"Body\",\n  BodyStrong: \"Body Strong\",\n  Label: \"Label\",\n  LabelModerate: \"Label Moderate\",\n  LabelStrong: \"Label Strong\",\n  Overline: \"Overline\",\n  Code: \"Code\",\n  CodeStrong: \"Code Strong\"\n};\nfunction Oy(e) {\n  return {\n    Lightspark: {\n      Mobile: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"7xl\"]}`,\n            fontSize: `${I.Lightspark[\"6xl\"]}`,\n            letterSpacing: \"-2.56px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"6xl\"]}`,\n            fontSize: `${I.Lightspark[\"5xl\"]}`,\n            letterSpacing: \"-1.92px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"5xl\"]}`,\n            fontSize: `${I.Lightspark[\"4xl\"]}`,\n            letterSpacing: \"-1.44px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"4xl\"]}`,\n            fontSize: `${I.Lightspark[\"3xl\"]}`,\n            letterSpacing: \"-.96px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"3xl\"]}`,\n            fontSize: `${I.Lightspark[\"2xl\"]}`,\n            letterSpacing: \"-.84px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"2xl\"]}`,\n            fontSize: `${I.Lightspark.xl}`,\n            letterSpacing: \"-.72px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.4px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.32x\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.28px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.08px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: e.main,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.sm}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark[\"tight-low\"]}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.BodyStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.08px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: e.main,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.sm}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark[\"tight-low\"]}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Overline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"1.92px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"1.68px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"1.44px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Code]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.CodeStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      },\n      Desktop: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"7xl\"]}`,\n            fontSize: `${I.Lightspark[\"6xl\"]}`,\n            letterSpacing: \"-2.56px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"6xl\"]}`,\n            fontSize: `${I.Lightspark[\"5xl\"]}`,\n            letterSpacing: \"-1.92px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"5xl\"]}`,\n            fontSize: `${I.Lightspark[\"4xl\"]}`,\n            letterSpacing: \"-1.44px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"4xl\"]}`,\n            fontSize: `${I.Lightspark[\"3xl\"]}`,\n            letterSpacing: \"-.96px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"3xl\"]}`,\n            fontSize: `${I.Lightspark[\"2xl\"]}`,\n            letterSpacing: \"-.84px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"2xl\"]}`,\n            fontSize: `${I.Lightspark.xl}`,\n            letterSpacing: \"-.72px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.4px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.32x\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.28px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.08px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: e.main,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.sm}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark[\"tight-low\"]}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.BodyStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.08px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: e.main,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.sm}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark[\"tight-low\"]}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Overline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"1.92px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"1.68px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"1.44px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Code]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.CodeStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      }\n    },\n    LightsparkDocs: {\n      Mobile: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"7xl\"]}`,\n            fontSize: `${I.Lightspark[\"6xl\"]}`,\n            letterSpacing: \"-2.56px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"6xl\"]}`,\n            fontSize: `${I.Lightspark[\"5xl\"]}`,\n            letterSpacing: \"-1.92px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"5xl\"]}`,\n            fontSize: `${I.Lightspark[\"4xl\"]}`,\n            letterSpacing: \"-1.44px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"4xl\"]}`,\n            fontSize: `${I.Lightspark[\"3xl\"]}`,\n            letterSpacing: \"-.96px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"3xl\"]}`,\n            fontSize: `${I.Lightspark[\"2xl\"]}`,\n            letterSpacing: \"-.84px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"2xl\"]}`,\n            fontSize: `${I.Lightspark.xl}`,\n            letterSpacing: \"-.72px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.60px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.4px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.32x\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.28px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.08px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: e.main,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.sm}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark[\"tight-low\"]}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.BodyStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.08px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Overline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"1.92px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"1.68px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"1.44px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Code]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.CodeStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      },\n      Desktop: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"7xl\"]}`,\n            fontSize: `${I.Lightspark[\"6xl\"]}`,\n            letterSpacing: \"-2.56px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"6xl\"]}`,\n            fontSize: `${I.Lightspark[\"5xl\"]}`,\n            letterSpacing: \"-1.92px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"5xl\"]}`,\n            fontSize: `${I.Lightspark[\"4xl\"]}`,\n            letterSpacing: \"-1.44px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"4xl\"]}`,\n            fontSize: `${I.Lightspark[\"3xl\"]}`,\n            letterSpacing: \"-.96px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"3xl\"]}`,\n            fontSize: `${I.Lightspark[\"2xl\"]}`,\n            letterSpacing: \"-.84px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"2xl\"]}`,\n            fontSize: `${I.Lightspark.xl}`,\n            letterSpacing: \"-.72px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.60px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.4px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.32x\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.28px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.08px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: e.main,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.sm}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark[\"tight-low\"]}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.BodyStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: \"-.08px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"-.07px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"-.06px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark[\"2xs\"]}`,\n            fontSize: `${I.Lightspark[\"2xs\"]}`,\n            letterSpacing: \"-.05px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Overline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: \"1.92px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: \"1.68px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: \"1.44px\",\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Code]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.xl}`,\n            fontSize: `${I.Lightspark.lg}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.CodeStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.lg}`,\n            fontSize: `${I.Lightspark.md}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.md}`,\n            fontSize: `${I.Lightspark.sm}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.Lightspark.xs}`,\n            fontSize: `${I.Lightspark.xs}`,\n            letterSpacing: `${z.Lightspark.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      }\n    },\n    UmaAuthSdk: {\n      Mobile: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"5xl\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"6xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"4xl\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"5xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"3xl\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"4xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xl\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"3xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.xl}`,\n            fontSize: `${I.UmaAuthSdk[\"2xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.lg}`,\n            fontSize: `${I.UmaAuthSdk.xl}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.md}`,\n            fontSize: `${I.UmaAuthSdk.lg}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.md}`,\n            fontSize: `${I.UmaAuthSdk.lg}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.BodyStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"2xs\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"2xs\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"2xs\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Overline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Code]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.CodeStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      },\n      Desktop: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"5xl\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"6xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"4xl\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"5xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"3xl\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"4xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xl\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"3xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.xl}`,\n            fontSize: `${I.UmaAuthSdk[\"2xl\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.lg}`,\n            fontSize: `${I.UmaAuthSdk.xl}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.md}`,\n            fontSize: `${I.UmaAuthSdk.lg}`,\n            letterSpacing: `${z.UmaAuthSdk.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.md}`,\n            fontSize: `${I.UmaAuthSdk.lg}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.BodyStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"2xs\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"2xs\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk[\"2xs\"]}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Overline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmaAuthSdk[\"2xs\"]}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Code]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmaAuthSdk.xs}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.CodeStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.md}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.sm}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmaAuthSdk.sm}`,\n            fontSize: `${I.UmaAuthSdk.xs}`,\n            letterSpacing: `${z.UmaAuthSdk.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      }\n    },\n    UmameDocs: {\n      Mobile: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"5xl\"]}`,\n            fontSize: `${I.UmameDocs[\"6xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"4xl\"]}`,\n            fontSize: `${I.UmameDocs[\"5xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"3xl\"]}`,\n            fontSize: `${I.UmameDocs[\"4xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xl\"]}`,\n            fontSize: `${I.UmameDocs[\"3xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xl}`,\n            fontSize: `${I.UmameDocs[\"2xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.lg}`,\n            fontSize: `${I.UmameDocs.xl}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.md}`,\n            fontSize: `${I.UmameDocs.lg}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.md}`,\n            fontSize: `${I.UmameDocs.lg}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.BodyStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs[\"2xs\"]}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs[\"2xs\"]}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs[\"2xs\"]}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Overline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Code]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.CodeStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      },\n      Desktop: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"5xl\"]}`,\n            fontSize: `${I.UmameDocs[\"6xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"4xl\"]}`,\n            fontSize: `${I.UmameDocs[\"5xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"3xl\"]}`,\n            fontSize: `${I.UmameDocs[\"4xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xl\"]}`,\n            fontSize: `${I.UmameDocs[\"2xl\"]}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.lg}`,\n            fontSize: `${I.UmameDocs.xl}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.lg}`,\n            fontSize: `${I.UmameDocs.lg}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.ExtraSmall]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.md}`,\n            fontSize: `${I.UmameDocs.lg}`,\n            letterSpacing: `${z.UmameDocs.tight}`,\n            paragraphSpacing: `${O[16]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.md}`,\n            fontSize: `${I.UmameDocs.lg}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.BodyStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs[\"2xs\"]}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs[\"2xs\"]}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs[\"2xs\"]}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Overline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.UmameDocs[\"2xs\"]}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.loose}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.uppercase}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Code]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Regular}`,\n            lineHeight: `${E.UmameDocs.xs}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.CodeStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.md}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.sm}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.code}`,\n            fontWeight: `${B.code.Bold}`,\n            lineHeight: `${E.UmameDocs.sm}`,\n            fontSize: `${I.UmameDocs.xs}`,\n            letterSpacing: `${z.UmameDocs.normal}`,\n            paragraphSpacing: `${O.default}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      }\n    },\n    Bridge: {\n      Mobile: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"8xl\"]}`,\n            fontSize: `${I.Bridge[\"7xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"7xl\"]}`,\n            fontSize: `${I.Bridge[\"6xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"6xl\"]}`,\n            fontSize: `${I.Bridge[\"5xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"5xl\"]}`,\n            fontSize: `${I.Bridge[\"4xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"4xl\"]}`,\n            fontSize: `${I.Bridge[\"3xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"3xl\"]}`,\n            fontSize: `${I.Bridge[\"2xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"2xl\"]}`,\n            fontSize: `${I.Bridge.xl}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.xl}`,\n            fontSize: `${I.Bridge.lg}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.md}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.xl}`,\n            fontSize: `${I.Bridge.lg}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.lg}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.sm}`,\n            fontSize: `${I.Bridge.xs}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.md}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge.xs}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge[\"2xs\"]}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Bridge.md}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge.xs}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge[\"2xs\"]}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.md}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge.xs}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge[\"2xs\"]}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      },\n      Desktop: {\n        [re.Display]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"8xl\"]}`,\n            fontSize: `${I.Bridge[\"7xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"7xl\"]}`,\n            fontSize: `${I.Bridge[\"6xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"6xl\"]}`,\n            fontSize: `${I.Bridge[\"5xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Headline]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"5xl\"]}`,\n            fontSize: `${I.Bridge[\"4xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"4xl\"]}`,\n            fontSize: `${I.Bridge[\"3xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"3xl\"]}`,\n            fontSize: `${I.Bridge[\"2xl\"]}`,\n            letterSpacing: `${z.Bridge.tight}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Title]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge[\"2xl\"]}`,\n            fontSize: `${I.Bridge.xl}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.xl}`,\n            fontSize: `${I.Bridge.lg}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.md}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Body]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.xl}`,\n            fontSize: `${I.Bridge.lg}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.lg}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.sm}`,\n            fontSize: `${I.Bridge.xs}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.Label]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.md}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge.xs}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Medium}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge[\"2xs\"]}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelModerate]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Bridge.md}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge.xs}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.SemiBold}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge[\"2xs\"]}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        },\n        [re.LabelStrong]: {\n          [k.Large]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.md}`,\n            fontSize: `${I.Bridge.md}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Medium]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge.xs}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          },\n          [k.Small]: {\n            fontFamily: `${e.main}`,\n            fontWeight: `${B.main.Bold}`,\n            lineHeight: `${E.Bridge.xs}`,\n            fontSize: `${I.Bridge[\"2xs\"]}`,\n            letterSpacing: `${z.Bridge.normal}`,\n            paragraphSpacing: `${O[0]}`,\n            paragraphIndent: `${P[0]}`,\n            textCase: `${D.none}`,\n            textDecoration: `${R.none}`\n          }\n        }\n      }\n    }\n  };\n}\nfunction Ur(e, t) {\n  const n = t ?? Fp;\n  return {\n    group: e,\n    fontFamilies: n,\n    lineHeights: E[e],\n    fontWeights: B,\n    fontSize: I[e],\n    letterSpacing: z[e],\n    textCase: D,\n    textDecoration: R,\n    paragraphIndent: P,\n    paragraphSpacing: O,\n    types: Oy(n)[e]\n  };\n}\nfunction qu(e) {\n  return Object.entries(e).map((t) => {\n    switch (t[0]) {\n      case \"fontFamily\":\n        return `font-family: ${t[1]};`;\n      case \"fontWeight\":\n        return `font-weight: ${t[1]};`;\n      case \"lineHeight\":\n        return `line-height: ${t[1]};`;\n      case \"fontSize\":\n        return `font-size: ${t[1]};`;\n      case \"letterSpacing\":\n        return `letter-spacing: ${t[1]};`;\n      case \"textDecoration\":\n        return `text-decoration: ${t[1]};`;\n      case \"paragraphSpacing\":\n        return \"\";\n      case \"paragraphIndent\":\n        return `text-indent: ${t[1]};`;\n      case \"textCase\":\n        return `text-transform: ${t[1]};`;\n      default:\n        return `${t[0]}: ${t[1]};`;\n    }\n  }).join(\"\");\n}\nvar Os = {\n  fontFamily: Fp.main,\n  fontWeight: `${B.main.Medium}`,\n  lineHeight: E.Lightspark.sm,\n  fontSize: I.Lightspark.sm,\n  letterSpacing: z.Lightspark.normal,\n  paragraphSpacing: O.default,\n  paragraphIndent: `${P[0]}`,\n  textCase: D.none,\n  textDecoration: R.none\n}, Hy = (e, t, n) => {\n  const r = e.typography.types.Mobile, i = e.typography.types.Desktop, o = r[t], a = i[t];\n  let s = o == null ? void 0 : o[n], c = a == null ? void 0 : a[n];\n  return (!s || !c) && (console.error(\n    !o || !a ? `Attempted to use a typography type \"${t}\" that does not exist in the current theme. Falling back to default tokens.` : `Attempted to use a typography size \"${n}\" that does not exist for typography type \"${t}\" in the current theme. Falling back to default tokens.`\n  ), s = Os, c = Os), `\n    ${qu(c)}\n    ${Bt.sm(qu(s))}\n  `;\n};\nfunction Uy(e, t, n) {\n  const i = n.typography.types.Desktop[e];\n  if (!i)\n    return console.error(\n      `getLineHeightForTypographyType: Attempted to use a typography type \"${e}\" that does not exist in the current theme. Falling back to default tokens.`\n    ), Os.lineHeight;\n  const o = i[t];\n  return o ? o.lineHeight : (console.error(\n    `getLineHeightForTypographyType: Attempted to use a typography size \"${t}\" that does not exist for typography type \"${e}\" in the current theme. Falling back to default tokens.`\n  ), Os.lineHeight);\n}\nfunction Ny(e, t, n) {\n  const r = Uy(e, t, n);\n  return parseFloat(r);\n}\nvar jp = Object.defineProperty, Vy = Object.defineProperties, zy = Object.getOwnPropertyDescriptors, Hs = Object.getOwnPropertySymbols, qp = Object.prototype.hasOwnProperty, Zp = Object.prototype.propertyIsEnumerable, Zu = (e, t, n) => t in e ? jp(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, ve = (e, t) => {\n  for (var n in t || (t = {}))\n    qp.call(t, n) && Zu(e, n, t[n]);\n  if (Hs)\n    for (var n of Hs(t))\n      Zp.call(t, n) && Zu(e, n, t[n]);\n  return e;\n}, Ie = (e, t) => Vy(e, zy(t)), pn = (e, t) => {\n  var n = {};\n  for (var r in e)\n    qp.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);\n  if (e != null && Hs)\n    for (var r of Hs(e))\n      t.indexOf(r) < 0 && Zp.call(e, r) && (n[r] = e[r]);\n  return n;\n}, Wy = (e, t) => {\n  for (var n in t)\n    jp(e, n, { get: t[n], enumerable: !0 });\n}, b1 = (e, t, n) => new Promise((r, i) => {\n  var o = (c) => {\n    try {\n      s(n.next(c));\n    } catch (l) {\n      i(l);\n    }\n  }, a = (c) => {\n    try {\n      s(n.throw(c));\n    } catch (l) {\n      i(l);\n    }\n  }, s = (c) => c.done ? r(c.value) : Promise.resolve(c.value).then(o, a);\n  s((n = n.apply(e, t)).next());\n}), mc = {\n  defaultSize: \"Small\",\n  defaultTypographyType: \"Body Strong\",\n  defaultColor: \"text\",\n  defaultBorderRadius: 32,\n  defaultBackgroundColor: \"bg\",\n  defaultBorderColor: \"bg\",\n  defaultHoverBackgroundColor: \"bg\",\n  defaultHoverBorderColor: \"bg\",\n  defaultActiveBackgroundColor: \"bg\",\n  defaultActiveBorderColor: \"bg\",\n  defaultOutlineOffset: 1,\n  defaultPaddingsY: {\n    ExtraSmall: 4,\n    Small: {\n      short: 8,\n      regular: 12\n    },\n    Schmedium: 12,\n    Medium: 12,\n    Mlarge: 12,\n    Large: 12\n  },\n  kinds: {}\n}, Kp = Ie(ve({}, mc), {\n  kinds: {\n    primary: {\n      defaultColor: \"bg\",\n      defaultBackgroundColor: \"c9Neutral\",\n      defaultBorderColor: \"c9Neutral\",\n      defaultHoverBackgroundColor: \"c8Neutral\",\n      defaultHoverBorderColor: \"c8Neutral\",\n      defaultActiveBackgroundColor: \"c7Neutral\",\n      defaultActiveBorderColor: \"c7Neutral\"\n    },\n    ghost: {\n      defaultBackgroundColor: \"transparent\",\n      defaultHoverBackgroundColor: \"transparent\",\n      defaultHoverBorderColor: \"transparent\",\n      defaultPaddingsY: {\n        ExtraSmall: 0,\n        Small: 0,\n        Schmedium: 0,\n        Medium: 0,\n        Mlarge: 0,\n        Large: 0\n      }\n    },\n    quaternary: {\n      defaultBackgroundColor: \"transparent\",\n      defaultBorderColor: \"gray80\",\n      defaultHoverBackgroundColor: \"transparenta02\",\n      defaultHoverBorderColor: \"gray80\",\n      defaultActiveBackgroundColor: \"transparenta08\",\n      defaultActiveBorderColor: \"gray80\"\n    },\n    transparent: {\n      defaultBackgroundColor: \"transparent\",\n      defaultBorderColor: \"transparent\",\n      defaultHoverBackgroundColor: \"transparenta02\",\n      defaultHoverBorderColor: \"transparent\",\n      defaultActiveBackgroundColor: \"transparenta08\",\n      defaultActiveBorderColor: \"transparent\"\n    },\n    secondary: {\n      defaultBackgroundColor: \"bg\",\n      defaultBorderColor: \"gray90\",\n      defaultHoverBackgroundColor: \"bg\",\n      defaultHoverBorderColor: \"gray85\",\n      defaultActiveBackgroundColor: \"bg\",\n      defaultActiveBorderColor: \"gray80\"\n    },\n    linkLight: {\n      defaultColor: \"link\",\n      defaultBackgroundColor: \"linkLight\",\n      defaultBorderColor: \"transparent\",\n      defaultHoverBackgroundColor: \"grayBlue93\",\n      defaultHoverBorderColor: \"grayBlue93\",\n      defaultActiveBackgroundColor: \"grayBlue92\",\n      defaultActiveBorderColor: \"grayBlue92\"\n    },\n    warning: {\n      defaultColor: \"danger\",\n      defaultBackgroundColor: \"red42a10\",\n      defaultBorderColor: \"transparent\",\n      defaultHoverBackgroundColor: \"red42a20\",\n      defaultHoverBorderColor: \"transparent\",\n      defaultActiveBackgroundColor: \"red42a30\",\n      defaultActiveBorderColor: \"transparent\"\n    },\n    tertiary: {\n      defaultColor: \"bg\",\n      defaultBackgroundColor: \"grayBlue9\",\n      defaultHoverBackgroundColor: \"grayBlue12\",\n      defaultActiveBackgroundColor: \"grayBlue14\"\n    },\n    blue39: {\n      defaultBorderColor: \"blue39\",\n      defaultColor: \"gray98\"\n    },\n    blue43: {\n      defaultColor: \"white\"\n    },\n    green33: {\n      defaultColor: \"white\"\n    },\n    purple55: {\n      defaultColor: \"white\"\n    },\n    danger: {\n      defaultColor: \"white\"\n    }\n  }\n}), Gp = {\n  paddingY: 56,\n  paddingX: 56,\n  shadow: \"soft\",\n  borderRadius: 24,\n  borderWidth: 0,\n  borderColor: \"vlcNeutral\",\n  textAlign: \"left\",\n  backgroundColor: \"bg\",\n  smBackgroundColor: \"bg\",\n  smBorderWidth: 0,\n  defaultDescriptionTypographyMap: {\n    default: {\n      type: \"Body Strong\",\n      size: \"Small\",\n      color: \"mcNeutral\"\n    },\n    link: {\n      type: \"Body Strong\",\n      size: \"Small\",\n      color: \"text\"\n    }\n  }\n}, Fy = Ie(ve({}, Gp), {\n  kinds: {\n    primary: {},\n    secondary: {},\n    tertiary: {}\n  }\n}), Yp = Ie(ve({}, Gp), {\n  kinds: {\n    primary: {},\n    secondary: {\n      paddingY: 40,\n      paddingX: 40,\n      shadow: \"none\",\n      borderRadius: 8,\n      borderWidth: 1,\n      borderColor: \"vlcNeutral\"\n    },\n    tertiary: { paddingY: 56, paddingX: 40, shadow: \"hard\" }\n  }\n}), Xp = {\n  defaultIconName: \"LoadingSpinner\",\n  kinds: {}\n}, Jp = Ie(ve({}, Xp), {\n  kinds: {\n    primary: {\n      defaultIconName: \"LoadingSpinner\"\n    }\n  }\n}), Ku = {\n  black: \"#000000\",\n  gray5: \"#0D0D0D\",\n  gray10: \"#1A1A1A\",\n  gray15: \"#262626\",\n  gray20: \"#333333\",\n  gray25: \"#404040\",\n  gray30: \"#4D4D4D\",\n  gray40: \"#666666\",\n  gray50: \"#808080\",\n  gray60: \"#999999\",\n  gray70: \"#B3B3B3\",\n  gray75: \"#BFBFBF\",\n  gray80: \"#CCCCCC\",\n  gray85: \"#D9D9D9\",\n  gray90: \"#E6E6E6\",\n  gray91: \"#171717\",\n  gray95: \"#F2F2F2\",\n  gray98: \"#F9F9F9\",\n  white: \"#FFFFFF\"\n}, Qp = \"#1d1d1d linear-gradient(180deg, #090909 63.08%, #1d1d1d 100.52%)\", Gu = \"#FFF14E\", jy = Ie(ve({}, Ku), {\n  // green\n  success: \"#17C27C\",\n  green33: \"#179257\",\n  green35: \"#19981E\",\n  // blue\n  blue43: \"#145BC6\",\n  blue22: \"#0E2E60\",\n  blue39: \"#0068C9\",\n  blue37: \"#21529c\",\n  blue58: \"#28BFFF\",\n  // less than 50% saturated blue\n  grayBlue5: \"#0c0d0f\",\n  grayBlue9: \"#16171A\",\n  grayBlue12: \"#2D2E34\",\n  grayBlue14: \"#3A3B41\",\n  grayBlue18: \"#21283a\",\n  grayBlue32: \"#4F5156\",\n  grayBlue43: \"#686A72\",\n  grayBlue45: \"#676F80\",\n  grayBlue57: \"#8B8E98\",\n  grayBlue67: \"#9BA7B9\",\n  grayBlue69: \"#A6A9BA\",\n  grayBlue80: \"#C0C9D6\",\n  grayBlue88: \"#DEDFE4\",\n  grayBlue92: \"#E1EBF5\",\n  grayBlue93: \"#E6EEF6\",\n  grayBlue94: \"#EBEEF2\",\n  grayBlue96: \"#F2F5F7\",\n  // purple\n  purple43: \"#820AD1\",\n  purple55: \"#8B38DE\",\n  // red\n  red42a10: \"#D800271A\",\n  red42a20: \"#D800272D\",\n  red42a30: \"#D800273F\",\n  // yellow\n  primary: Gu,\n  warning: Gu,\n  // orange\n  danger: \"#FD2C0F\",\n  // neutral\n  secondary: Ku.black,\n  // transparent\n  transparent: \"transparent\",\n  transparenta02: \"#00000005\",\n  transparenta08: \"#00000014\"\n}), Z = jy;\nfunction e3(e) {\n  return e in Z;\n}\nfunction t3(e, t = Z.black, n = Z.white) {\n  const r = Xu(e), i = Xu(t);\n  return !r || !i ? t : qy(r, i) < 4.5 ? n : t;\n}\nfunction Yu(e, t, n) {\n  const r = [e, t, n].map(function(i) {\n    return i /= 255, i <= 0.03928 ? i / 12.92 : Math.pow((i + 0.055) / 1.055, 2.4);\n  });\n  return r[0] * 0.2126 + r[1] * 0.7152 + r[2] * 0.0722;\n}\nfunction qy(e, t) {\n  const n = Yu(e[0], e[1], e[2]), r = Yu(t[0], t[1], t[2]), i = Math.max(n, r), o = Math.min(n, r);\n  return (i + 0.05) / (o + 0.05);\n}\nfunction Xu(e) {\n  const t = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(e);\n  return t ? [\n    parseInt(t[1], 16),\n    parseInt(t[2], 16),\n    parseInt(t[3], 16)\n  ] : [0, 0, 0];\n}\nvar Zy = function(t) {\n  return Ky(t) && !Gy(t);\n};\nfunction Ky(e) {\n  return !!e && typeof e == \"object\";\n}\nfunction Gy(e) {\n  var t = Object.prototype.toString.call(e);\n  return t === \"[object RegExp]\" || t === \"[object Date]\" || Jy(e);\n}\nvar Yy = typeof Symbol == \"function\" && Symbol.for, Xy = Yy ? Symbol.for(\"react.element\") : 60103;\nfunction Jy(e) {\n  return e.$$typeof === Xy;\n}\nfunction Qy(e) {\n  return Array.isArray(e) ? [] : {};\n}\nfunction _a(e, t) {\n  return t.clone !== !1 && t.isMergeableObject(e) ? vo(Qy(e), e, t) : e;\n}\nfunction eb(e, t, n) {\n  return e.concat(t).map(function(r) {\n    return _a(r, n);\n  });\n}\nfunction tb(e, t) {\n  if (!t.customMerge)\n    return vo;\n  var n = t.customMerge(e);\n  return typeof n == \"function\" ? n : vo;\n}\nfunction nb(e) {\n  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(e).filter(function(t) {\n    return Object.propertyIsEnumerable.call(e, t);\n  }) : [];\n}\nfunction Ju(e) {\n  return Object.keys(e).concat(nb(e));\n}\nfunction n3(e, t) {\n  try {\n    return t in e;\n  } catch {\n    return !1;\n  }\n}\nfunction rb(e, t) {\n  return n3(e, t) && !(Object.hasOwnProperty.call(e, t) && Object.propertyIsEnumerable.call(e, t));\n}\nfunction ib(e, t, n) {\n  var r = {};\n  return n.isMergeableObject(e) && Ju(e).forEach(function(i) {\n    r[i] = _a(e[i], n);\n  }), Ju(t).forEach(function(i) {\n    rb(e, i) || (n3(e, i) && n.isMergeableObject(t[i]) ? r[i] = tb(i, n)(e[i], t[i], n) : r[i] = _a(t[i], n));\n  }), r;\n}\nfunction vo(e, t, n) {\n  n = n || {}, n.arrayMerge = n.arrayMerge || eb, n.isMergeableObject = n.isMergeableObject || Zy, n.cloneUnlessOtherwiseSpecified = _a;\n  var r = Array.isArray(t), i = Array.isArray(e), o = r === i;\n  return o ? r ? n.arrayMerge(e, t, n) : ib(e, t, n) : _a(t, n);\n}\nvo.all = function(t, n) {\n  if (!Array.isArray(t))\n    throw new Error(\"first argument should be an array\");\n  return t.reduce(function(r, i) {\n    return vo(r, i, n);\n  }, {});\n};\nvar ob = vo, ab = ob;\nconst va = /* @__PURE__ */ Va(ab);\nvar Hd = {\n  bg: Z.white,\n  smBg: Z.white,\n  c05Neutral: Z.gray95,\n  c1Neutral: Z.gray90,\n  c15Neutral: Z.gray85,\n  c2Neutral: Z.gray80,\n  c25Neutral: Z.gray75,\n  c3Neutral: Z.gray70,\n  c4Neutral: Z.gray60,\n  c5Neutral: Z.gray50,\n  c6Neutral: Z.gray40,\n  c7Neutral: Z.gray30,\n  c8Neutral: Z.gray20,\n  c9Neutral: Z.gray10,\n  danger: Z.danger,\n  hcNeutral: Z.black,\n  info: Z.blue43,\n  lcNeutral: Z.gray80,\n  link: Z.blue43,\n  linkLight: \"#0068C90F\",\n  mcNeutral: Z.gray40,\n  onInfoText: Z.white,\n  onPrimaryText: Z.black,\n  onSuccessText: Z.white,\n  primary: Z.primary,\n  secondary: Z.secondary,\n  tertiary: Z.black,\n  success: Z.success,\n  text: Z.black,\n  vlcNeutral: Z.gray95,\n  warning: Z.warning,\n  transparent: Z.transparent\n};\n[\n  ...Object.keys(Hd),\n  ...Object.keys(Z)\n];\nvar sb = Ie(ve({}, Hd), {\n  // base type should be Themes but default to Light\n  type: \"light\",\n  typography: Ur(\n    \"Lightspark\"\n    /* Lightspark */\n  ),\n  hcNeutralFromBg: (e) => t3(e, Z.black, Z.white),\n  buttons: Kp,\n  loading: Jp,\n  cardForm: Yp,\n  badge: {\n    bg: \"c05Neutral\"\n  },\n  inputBackground: Z.white\n}), Nn = sb, ia = {\n  type: \"dark\",\n  bg: Z.black,\n  smBg: Z.black,\n  c05Neutral: Z.gray5,\n  c1Neutral: Z.gray10,\n  c15Neutral: Z.gray15,\n  c2Neutral: Z.gray20,\n  c25Neutral: Z.gray25,\n  c3Neutral: Z.gray30,\n  c4Neutral: Z.gray40,\n  c5Neutral: Z.gray50,\n  c6Neutral: Z.gray60,\n  c7Neutral: Z.gray70,\n  c8Neutral: Z.gray80,\n  c9Neutral: Z.gray90,\n  danger: Z.danger,\n  hcNeutral: Z.white,\n  hcNeutralFromBg: (e) => t3(e, Z.white, Z.black),\n  info: Z.white,\n  lcNeutral: Z.gray40,\n  link: Z.blue43,\n  linkLight: \"#0068C90F\",\n  mcNeutral: Z.gray60,\n  onInfoText: Z.white,\n  onPrimaryText: Z.black,\n  onSuccessText: Z.white,\n  primary: Z.primary,\n  secondary: Z.secondary,\n  tertiary: Z.white,\n  success: Z.success,\n  text: Z.white,\n  typography: Ur(\n    \"Lightspark\"\n    /* Lightspark */\n  ),\n  vlcNeutral: Z.gray20,\n  warning: Z.warning,\n  transparent: Z.transparent,\n  buttons: Kp,\n  loading: Jp,\n  cardForm: Yp,\n  inputBackground: Z.black,\n  badge: {\n    bg: \"c15Neutral\"\n  }\n}, Fa = mr(Nn, {\n  header: fn(Nn, {\n    text: Z.gray60\n  }),\n  nav: fn(Nn, {\n    text: Z.gray10,\n    secondary: Z.gray40\n  }),\n  content: fn(Nn, {\n    bg: Z.white,\n    smBg: Z.white\n  }),\n  controls: fn(Nn, {\n    bg: Z.gray95,\n    smBg: Z.gray95,\n    text: Z.gray60,\n    secondary: Z.secondary\n  })\n}), ja = mr(ia, {\n  header: fn(ia, {}),\n  nav: fn(ia, {}),\n  content: fn(ia, {}),\n  controls: fn(ia, {\n    bg: Z.gray40,\n    smBg: Z.gray40,\n    text: Z.white,\n    secondary: Z.secondary\n  })\n}), cb = mr(Fa, {\n  type: \"umaAuthSdkLight\",\n  bg: Z.gray98,\n  smBg: Z.gray98,\n  secondary: Z.grayBlue43,\n  tertiary: Z.grayBlue9,\n  warning: \"#F7E3E3\",\n  danger: \"#E31A1A\",\n  text: Z.grayBlue9,\n  link: Z.blue39,\n  linkLight: \"#0068C90F\",\n  inputBackground: Z.white,\n  typography: Ur(\"UmaAuthSdk\", {\n    main: \"Manrope\",\n    code: \"Monaco\"\n  }),\n  content: fn(Nn, {\n    bg: Z.gray98,\n    smBg: Z.gray98,\n    text: Z.grayBlue9,\n    secondary: Z.grayBlue43\n  }),\n  controls: fn(Nn, {\n    text: Z.grayBlue9,\n    secondary: Z.grayBlue43,\n    bg: Z.grayBlue94\n  }),\n  buttons: va(mc, {\n    defaultTypographyType: \"Title\",\n    defaultSize: \"Medium\",\n    defaultBorderRadius: 999,\n    defaultPaddingsY: {\n      ExtraSmall: {\n        short: 14,\n        regular: 16\n      },\n      Small: {\n        short: 14,\n        regular: 16\n      },\n      Schmedium: {\n        short: 14,\n        regular: 16\n      },\n      Medium: {\n        short: 14,\n        regular: 16\n      },\n      Mlarge: {\n        short: 14,\n        regular: 16\n      },\n      Large: {\n        short: 14,\n        regular: 16\n      }\n    },\n    kinds: {\n      primary: {\n        defaultColor: \"bg\",\n        defaultBorderColor: \"blue39\",\n        defaultBackgroundColor: \"blue39\",\n        defaultHoverBackgroundColor: \"blue37\",\n        defaultHoverBorderColor: \"blue37\",\n        defaultActiveBackgroundColor: \"blue22\",\n        defaultActiveBorderColor: \"blue22\"\n      },\n      ghost: {\n        defaultColor: \"secondary\",\n        defaultBackgroundColor: \"transparent\",\n        defaultHoverBackgroundColor: \"transparent\",\n        defaultHoverBorderColor: \"transparent\"\n      },\n      secondary: {\n        defaultBackgroundColor: \"grayBlue94\",\n        defaultBorderColor: \"grayBlue94\",\n        defaultHoverBackgroundColor: \"grayBlue88\",\n        defaultHoverBorderColor: \"grayBlue88\",\n        defaultActiveBackgroundColor: \"grayBlue69\",\n        defaultActiveBorderColor: \"grayBlue69\"\n      },\n      quaternary: {\n        defaultBackgroundColor: \"transparent\",\n        defaultBorderColor: \"grayBlue80\",\n        defaultHoverBackgroundColor: \"grayBlue94\",\n        defaultHoverBorderColor: \"grayBlue80\",\n        defaultActiveBackgroundColor: \"grayBlue88\",\n        defaultActiveBorderColor: \"grayBlue80\"\n      },\n      tertiary: {\n        defaultColor: \"bg\",\n        defaultBackgroundColor: \"grayBlue9\",\n        defaultHoverBackgroundColor: \"grayBlue12\",\n        defaultActiveBackgroundColor: \"grayBlue14\"\n      },\n      transparent: {\n        defaultBackgroundColor: \"transparent\",\n        defaultBorderColor: \"transparent\",\n        defaultHoverBackgroundColor: \"transparenta02\",\n        defaultHoverBorderColor: \"transparent\",\n        defaultActiveBackgroundColor: \"transparenta08\",\n        defaultActiveBorderColor: \"transparent\"\n      },\n      linkLight: {\n        defaultColor: \"link\",\n        defaultBackgroundColor: \"linkLight\",\n        defaultBorderColor: \"transparent\",\n        defaultHoverBackgroundColor: \"grayBlue93\",\n        defaultHoverBorderColor: \"grayBlue93\",\n        defaultActiveBackgroundColor: \"grayBlue92\",\n        defaultActiveBorderColor: \"grayBlue92\"\n      },\n      warning: {\n        defaultColor: \"danger\",\n        defaultBackgroundColor: \"red42a10\",\n        defaultBorderColor: \"transparent\",\n        defaultHoverBackgroundColor: \"red42a20\",\n        defaultHoverBorderColor: \"transparent\",\n        defaultActiveBackgroundColor: \"red42a30\",\n        defaultActiveBorderColor: \"transparent\"\n      },\n      danger: {\n        defaultColor: \"white\"\n      }\n    }\n  })\n}), lb = mr(ja, {\n  type: \"umaAuthSdkDark\",\n  bg: Z.gray5,\n  smBg: Z.gray5,\n  secondary: Z.grayBlue57,\n  tertiary: Z.gray98,\n  text: Z.gray98,\n  link: Z.blue39,\n  inputBackground: Z.gray5,\n  typography: Ur(\"UmaAuthSdk\", {\n    main: \"Manrope\",\n    code: \"Monaco\"\n  }),\n  content: fn(Nn, {\n    bg: Z.gray5,\n    smBg: Z.gray5,\n    text: Z.grayBlue94,\n    secondary: Z.grayBlue43\n  }),\n  controls: fn(Nn, {\n    text: Z.grayBlue94,\n    secondary: Z.grayBlue43,\n    bg: Z.grayBlue9\n  }),\n  buttons: va(mc, {\n    defaultTypographyType: \"Title\",\n    defaultSize: \"Medium\",\n    defaultBorderRadius: 999,\n    defaultPaddingsY: {\n      ExtraSmall: {\n        short: 14,\n        regular: 16\n      },\n      Small: {\n        short: 14,\n        regular: 16\n      },\n      Schmedium: {\n        short: 14,\n        regular: 16\n      },\n      Medium: {\n        short: 14,\n        regular: 16\n      },\n      Mlarge: {\n        short: 14,\n        regular: 16\n      },\n      Large: {\n        short: 14,\n        regular: 16\n      }\n    },\n    kinds: {\n      primary: {\n        defaultColor: \"bg\",\n        defaultBackgroundColor: \"blue39\",\n        defaultHoverBackgroundColor: \"blue37\"\n      },\n      ghost: {\n        defaultColor: \"secondary\",\n        defaultBackgroundColor: \"transparent\",\n        defaultHoverBackgroundColor: \"transparent\",\n        defaultHoverBorderColor: \"transparent\"\n      },\n      secondary: {\n        defaultBackgroundColor: \"grayBlue80\",\n        defaultHoverBackgroundColor: \"grayBlue94\",\n        defaultBorderColor: \"grayBlue80\"\n      },\n      tertiary: {\n        defaultColor: \"bg\",\n        defaultHoverBackgroundColor: \"grayBlue80\"\n      },\n      transparent: {\n        defaultBackgroundColor: \"transparent\",\n        defaultBorderColor: \"transparent\",\n        defaultHoverBackgroundColor: \"transparenta02\",\n        defaultHoverBorderColor: \"transparent\",\n        defaultActiveBackgroundColor: \"transparenta08\",\n        defaultActiveBorderColor: \"transparent\"\n      },\n      linkLight: {\n        defaultColor: \"link\",\n        defaultBackgroundColor: \"linkLight\",\n        defaultBorderColor: \"transparent\",\n        defaultHoverBackgroundColor: \"linkLight\",\n        defaultHoverBorderColor: \"transparent\"\n      },\n      warning: {\n        defaultColor: \"danger\",\n        defaultBackgroundColor: \"warning\",\n        defaultBorderColor: \"transparent\",\n        defaultHoverBackgroundColor: \"warning\",\n        defaultHoverBorderColor: \"transparent\"\n      }\n    }\n  })\n}), db = mr(Fa, {\n  type: \"umameDocsLight\",\n  bg: Z.gray98,\n  smBg: Z.gray98,\n  secondary: Z.grayBlue43,\n  text: Z.grayBlue9,\n  link: Z.blue39,\n  inputBackground: Z.white,\n  typography: Ur(\"UmameDocs\", {\n    main: \"Manrope\",\n    code: \"Monaco\"\n  }),\n  content: fn(Nn, {\n    bg: Z.gray98,\n    smBg: Z.gray98,\n    text: Z.grayBlue9,\n    secondary: Z.grayBlue43\n  }),\n  controls: fn(Nn, {\n    text: Z.grayBlue9,\n    secondary: Z.grayBlue43,\n    bg: Z.grayBlue94\n  })\n}), fb = mr(ja, {\n  type: \"umameDocsDark\",\n  bg: Z.gray98,\n  smBg: Z.gray98,\n  secondary: Z.grayBlue43,\n  text: Z.grayBlue9,\n  link: Z.blue39,\n  typography: Ur(\"UmameDocs\", {\n    main: \"Manrope\",\n    code: \"Monaco\"\n  })\n}), ub = mr(Fa, {\n  type: \"lightsparkDocsLight\",\n  typography: Ur(\n    \"LightsparkDocs\"\n    /* LightsparkDocs */\n  )\n}), hb = mr(ja, {\n  type: \"lightsparkDocsDark\",\n  typography: Ur(\n    \"LightsparkDocs\"\n    /* LightsparkDocs */\n  )\n}), r3 = {\n  secondary: Z.grayBlue43,\n  mcNeutral: Z.grayBlue43,\n  success: Z.green35,\n  link: Z.blue39,\n  typography: Ur(\"Bridge\", {\n    main: \"Manrope\",\n    code: \"Monaco\"\n  }),\n  buttons: va(mc, {\n    defaultTypographyType: \"Title\",\n    defaultSize: \"Medium\",\n    defaultBorderRadius: 8,\n    defaultPaddingsY: {\n      ExtraSmall: 14,\n      Small: 14,\n      Schmedium: 14,\n      Medium: 14,\n      Mlarge: 14,\n      Large: 14\n    },\n    kinds: {\n      primary: {\n        defaultColor: \"bg\",\n        defaultBackgroundColor: \"blue39\",\n        defaultBorderColor: \"blue39\",\n        defaultHoverBackgroundColor: \"blue37\",\n        defaultHoverBorderColor: \"blue37\",\n        defaultActiveBackgroundColor: \"blue22\",\n        defaultActiveBorderColor: \"blue22\"\n      },\n      ghost: {\n        defaultColor: \"secondary\",\n        defaultBackgroundColor: \"transparent\",\n        defaultHoverBackgroundColor: \"transparent\",\n        defaultBorderColor: \"transparent\",\n        defaultHoverBorderColor: \"transparent\",\n        defaultActiveBackgroundColor: \"transparent\"\n      },\n      secondary: {\n        defaultBackgroundColor: \"transparent\",\n        defaultBorderColor: \"grayBlue80\",\n        defaultHoverBackgroundColor: \"grayBlue94\",\n        defaultHoverBorderColor: \"grayBlue80\",\n        defaultActiveBackgroundColor: \"grayBlue88\",\n        defaultActiveBorderColor: \"grayBlue80\"\n      },\n      transparent: {\n        defaultColor: \"secondary\",\n        defaultBackgroundColor: \"transparent\",\n        defaultBorderColor: \"transparent\",\n        defaultHoverBackgroundColor: \"transparenta02\",\n        defaultHoverBorderColor: \"transparent\",\n        defaultActiveBackgroundColor: \"transparenta08\",\n        defaultActiveBorderColor: \"transparent\"\n      }\n    }\n  }),\n  loading: va(Xp, {\n    defaultIconName: \"UmaBridgeLoading\",\n    kinds: {\n      primary: {\n        defaultIconName: \"UmaBridgeLoading\"\n      },\n      secondary: {\n        defaultIconName: \"UmaBridgeLoadingTransparent\"\n      }\n    }\n  }),\n  cardForm: va(Fy, {\n    backgroundColor: \"white\",\n    smBackgroundColor: \"bg\",\n    defaultDescriptionTypographyMap: {\n      default: {\n        type: \"Body\",\n        size: \"Large\",\n        color: \"secondary\"\n      },\n      link: {\n        type: \"Body\",\n        size: \"Large\",\n        color: \"text\"\n      }\n    },\n    kinds: {\n      primary: {\n        paddingY: 56,\n        paddingX: 40,\n        shadow: \"hard\"\n      },\n      secondary: {\n        borderWidth: 1,\n        smBorderWidth: 0,\n        borderColor: \"grayBlue94\",\n        paddingY: 40,\n        paddingX: 40,\n        shadow: \"none\"\n      }\n    }\n  }),\n  badge: {\n    bg: \"grayBlue94\"\n  }\n}, pb = mr(Fa, Ie(ve({}, r3), {\n  type: \"bridgeLight\",\n  bg: Z.gray98,\n  smBg: Z.gray98,\n  text: Z.grayBlue9,\n  secondary: Z.grayBlue43,\n  inputBackground: Z.white\n})), gb = mr(ja, Ie(ve({}, r3), {\n  type: \"bridgeDark\"\n  /* BridgeDark */\n})), mb = {\n  light: Fa,\n  dark: ja,\n  lightsparkDocsLight: ub,\n  lightsparkDocsDark: hb,\n  umaAuthSdkLight: cb,\n  umaAuthSdkDark: lb,\n  umameDocsLight: db,\n  umameDocsDark: fb,\n  bridgeLight: pb,\n  bridgeDark: gb\n};\nfunction mr(e, t) {\n  return ve(ve({}, e), t);\n}\nfunction fn(e, t) {\n  return ve(ve({}, e), t);\n}\nfunction x1(e) {\n  return !!(e && typeof e == \"string\" && e in Hd);\n}\nfunction i3(e) {\n  return !!(typeof e == \"string\" && (x1(e) || e3(e) || Array.isArray(e) && e.length === 2 && x1(e[1])));\n}\nfunction Ea(e, t) {\n  if (t && x1(t))\n    return e[t];\n  if (t && Array.isArray(t)) {\n    const [n, r] = t;\n    return e[n][r];\n  } else if (t && e3(t))\n    return Z[t];\n  return e.text;\n}\nfunction Us(e, t, n = \"inherit\") {\n  return t === \"inherit\" || !t && n === \"inherit\" ? \"inherit\" : Ea(e, t);\n}\nfunction Qu(e) {\n  return e === \"transparent\" || i3(e);\n}\nfunction e0(e) {\n  return Array.isArray(e) && e.length === 2 && Qu(e[0]) && Qu(e[1]);\n}\nfunction vb(e, t, n = \"transparent\") {\n  return e0(t) && (t = w1(e) ? t[0] : t[1]), e0(n) && (n = w1(e) ? n[0] : n[1]), t === \"transparent\" ? \"transparent\" : t ? Ea(e, t) : n === \"transparent\" ? \"transparent\" : Ea(e, n);\n}\nvar yb = (e) => [\n  \"dark\",\n  \"bridgeDark\",\n  \"lightsparkDocsDark\",\n  \"umameDocsDark\",\n  \"umaAuthSdkDark\"\n  /* UmaAuthSdkDark */\n].includes(e.type), w1 = (e) => [\n  \"light\",\n  \"bridgeLight\",\n  \"lightsparkDocsLight\",\n  \"umameDocsLight\",\n  \"umaAuthSdkLight\"\n  /* UmaAuthSdkLight */\n].includes(e.type), Ri = (e, t) => ({ theme: n }) => w1(n) ? e : t;\nfunction bb() {\n  const e = Cn(), n = Wp().current(\n    \"sm\"\n    /* sm */\n  );\n  return yb(e) ? Qp : n ? e.smBg : e.bg;\n}\nvar Qi = 12, xb = Qi / 16, wb = 1.21;\nfunction $b(e, t, n) {\n  const r = gt`\n    ${Bt.sm(`\n      margin-left: auto;\n      margin-right: auto;\n      width: calc(100% - ${e * 2}px);\n    `)}\n  `, i = gt`\n    ${Bt.minSmMaxLg(`\n      margin-left: auto;\n      margin-right: auto;\n      width: calc(100% - ${t * 2}px);\n    `)}\n  `, o = gt`\n    ${Bt.lg(`\n      margin-left: auto;\n      margin-right: auto;\n      width: calc(100% - ${n * 2}px);\n      max-width: 1280px;\n    `)}\n  `;\n  return {\n    smPx: e,\n    minSmMaxLgPx: t,\n    lgPx: n,\n    smCSS: r,\n    minSmMaxLgCSS: i,\n    lgCSS: o,\n    css: gt`\n      ${o}\n      ${r}\n      ${i}\n    `\n  };\n}\nvar o3 = $b(16, 24, 32), Ro = (e) => `\n    border-radius: ${Array.isArray(e) ? e.map((n) => `${n}px`).join(\" \") : `${e}px`};\n  `;\ngt`\n  box-shadow:\n    0px 4px 10px 0px rgba(0, 0, 0, 0.08),\n    0px 8px 24px 0px rgba(0, 0, 0, 0.04);\n`;\ngt`\n  box-shadow:\n    0px 24px 24px -12px rgba(0, 0, 0, 0.06),\n    0px 12px 12px -6px rgba(0, 0, 0, 0.06),\n    0px 6px 6px -3px rgba(0, 0, 0, 0.06),\n    0px 3px 3px -1.5px rgba(0, 0, 0, 0.06),\n    0px 1px 1px -0.5px rgba(0, 0, 0, 0.06),\n    0px 0px 0px 1px rgba(0, 0, 0, 0.06);\n`;\nvar a3 = ({\n  theme: e,\n  onBgHex: t\n}) => `${t ? e.hcNeutralFromBg(t) : e.hcNeutral} dashed 1px`, Cb = \"-2px\", vc = ({ theme: e }) => gt`\n  &,\n  & a,\n  & button {\n    &:focus-visible {\n      outline: ${a3({ theme: e })};\n      outline-offset: ${Cb};\n    }\n  }\n`, Ud = ({ theme: e }) => gt`\n  color: ${e.c6Neutral};\n  font-weight: 600;\n`;\nG.div`\n  ${Ud}\n`;\ngt`\n  background: ${Qp};\n`;\nvar Sb = ({\n  theme: e,\n  important: t = !1\n}) => gt`\n  border-color: ${Ri(e.c1Neutral, e.c3Neutral)({ theme: e })}\n    ${t ? \"!important\" : \"\"};\n`, s3 = ({\n  theme: e,\n  important: t = !1,\n  border: n = !0\n}) => gt`\n  background-color: ${Ri(e.bg, e.c1Neutral)({ theme: e })}\n    ${t ? \"!important\" : \"\"};\n  ${n ? `border: 0.5px solid ${t ? \"!important\" : \"\"};` : \"\"}\n  ${Sb({ theme: e, important: t })};\n  ${Ri(\n  `box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 1px 4px rgba(0, 0, 0, 0.1) ${t ? \"!important\" : \"\"};`,\n  \"\"\n)({ theme: e })}\n`;\nfunction c3(e) {\n  return !!(e && Zn(e) && \"link\" in e);\n}\nfunction l3(e) {\n  return !!(e && Zn(e) && \"nextLink\" in e);\n}\nfunction d3(e) {\n  return !!(e && Zn(e) && \"icon\" in e);\n}\nfunction f3(e) {\n  return !!(e && Zn(e) && \"currencyAmount\" in e);\n}\nfunction u3(e) {\n  return !!(e && Zn(e) && \"clipboardTextField\" in e);\n}\nfunction $1(e) {\n  const t = [\"text\", \"onClick\", \"typography\"];\n  return !!/* Exclude other nodes by ensuring only text node properties: */\n  (e && Zn(e) && /* text is required: */\n  \"text\" in e && /* ensure the rest of the keys are allowed: */\n  Object.keys(e).every((n) => t.includes(n)));\n}\nfunction h3(e) {\n  return e.split(`\n`).map((t, n, r) => {\n    const i = `str-${n}-${t.substr(0, 20)}`;\n    return !t && n === r.length - 1 ? null : /* @__PURE__ */ q(\"span\", { children: [\n      t.length ? t : null,\n      n < r.length - 1 ? /* @__PURE__ */ p(\"br\", {}) : null\n    ] }, i);\n  });\n}\nfunction vr(e, t) {\n  return ve({\n    block: e.block || !1,\n    colorProp: e.color,\n    displayProp: e.display,\n    hideOverflow: e.hideOverflow || !1,\n    id: e.id,\n    display: e.display,\n    size: e.size || \"Medium\",\n    textAlign: e.textAlign,\n    onClick: e.onClick,\n    children: e.children ? h3(e.children) : null\n  }, t);\n}\nvar yr = ({\n  /* theme, size, colorProp, */\n  block: e,\n  hideOverflow: t,\n  displayProp: n,\n  textAlign: r,\n  onClick: i\n}) => {\n  const o = e || t ? \"block\" : n || null;\n  return gt`\n    /* Margins should always be set in parent style contexts eg Article: */\n    margin: 0;\n\n    ${typeof i == \"function\" ? \"cursor: pointer;\" : \"\"}\n    ${r ? `text-align: ${r};` : \"\"}\n    ${o ? `display: ${o};` : \"\"}\n    ${t ? \"overflow: hidden; text-overflow: ellipsis; white-space: nowrap; max-width: 100%;\" : \"\"}\n  `;\n}, yn = (e, t, n, r = \"inherit\", i = !0) => `\n    ${i ? \"&, & *\" : \"&\"} {\n      ${Hy(e, t, n)};\n      color: ${Us(e, r)};\n    }\n  `;\nfunction Mb(e) {\n  const t = p3(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(g3, Ie(ve({}, r), { children: n }));\n}\nfunction p3(e) {\n  return vr(e, { as: e.tag || \"span\" });\n}\nvar g3 = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Label\", t, n)}\n  ${yr}\n`;\nfunction Lb(e) {\n  const t = m3(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(v3, Ie(ve({}, r), { children: n }));\n}\nfunction m3(e) {\n  return vr(e, { as: e.tag || \"span\" });\n}\nvar v3 = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Label Moderate\", t, n)}\n  ${yr}\n`;\nfunction Ab(e) {\n  const t = kb(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(_b, Ie(ve({}, r), { children: n }));\n}\nfunction kb(e) {\n  return vr(e, { as: e.tag || \"span\" });\n}\nvar _b = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Label Strong\", t, n)}\n  ${yr}\n`;\nfunction Eb(e) {\n  const t = Tb(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(Bb, Ie(ve({}, r), { children: n }));\n}\nfunction Tb(e) {\n  return vr(e, { as: e.tag || \"span\" });\n}\nvar Bb = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Overline\", t, n)}\n  ${yr}\n`;\nfunction Ib(e) {\n  const t = Db(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(Rb, Ie(ve({}, r), { children: n }));\n}\nfunction Db(e) {\n  return vr(e, { as: e.tag || \"span\" });\n}\nvar Rb = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Body Strong\", t, n)}\n  ${yr}\n`;\nfunction ya(e) {\n  return e.toString();\n}\nfunction Pb(e) {\n  const t = Ob(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(Hb, Ie(ve({}, r), { children: n }));\n}\nfunction Ob(e) {\n  return vr(e, { as: e.tag || \"h1\" });\n}\nvar Hb = G.h1`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Display\", t, n)}\n  ${yr}\n`;\nfunction Ub(e) {\n  const t = y3(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(b3, Ie(ve({}, r), { children: n }));\n}\nfunction y3(e) {\n  return vr(e, { as: e.tag || \"span\" });\n}\nvar b3 = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Title\", t, n)}\n  ${yr}\n`;\nfunction t0(e) {\n  const t = Nb(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(Vb, Ie(ve({}, r), { children: n }));\n}\nfunction Nb(e) {\n  return vr(e, { as: e.tag || \"span\" });\n}\nvar Vb = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Code\", t, n)}\n  ${yr}\n`;\nfunction zb(e) {\n  const t = x3(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p(w3, Ie(ve({}, r), { children: n }));\n}\nfunction x3(e) {\n  return vr(e, { as: e.tag || \"span\" });\n}\nvar w3 = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Body\", t, n)}\n  ${yr}\n`, Wb = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\nfunction Fb(e) {\n  const t = jb(e), { children: n } = t, r = pn(t, [\"children\"]);\n  return /* @__PURE__ */ p($3, Ie(ve({}, r), { children: n }));\n}\nfunction jb(e) {\n  return vr(e, { as: e.heading || \"h1\" });\n}\nvar $3 = G.span`\n  ${({ theme: e, size: t, colorProp: n }) => yn(e, \"Headline\", t, n)}\n  ${yr}\n`;\nfunction qb(e) {\n  return `${e}${ya($3)}`;\n}\nWb.map(qb).join(\",\");\nvar Zb = {\n  Display: Pb,\n  Headline: Fb,\n  Title: Ub,\n  Body: zb,\n  \"Body Strong\": Ib,\n  Label: Mb,\n  \"Label Moderate\": Lb,\n  \"Label Strong\": Ab,\n  Overline: Eb,\n  Code: t0,\n  \"Code Strong\": t0\n}, qa = (e, t) => {\n  const n = Zb[e], { children: r } = t;\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(n, t, r);\n};\nfunction Kb({\n  href: e,\n  text: t,\n  children: n,\n  id: r,\n  target: i,\n  typography: o\n}) {\n  const a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), [s, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), l = e.startsWith(\"http\"), d = i || (l ? \"_blank\" : void 0);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    b1(this, null, function* () {\n      try {\n        const b = yield __webpack_require__.e(/*! import() */ \"vendor-chunks/@uma-sdk\").then(__webpack_require__.bind(__webpack_require__, /*! ./link-DaH_InAP.js */ \"(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/link-DaH_InAP.js\")).then((x) => x.l);\n        a.current = b.default;\n      } catch {\n      }\n      c(!0);\n    });\n  });\n  const f = a.current;\n  let g = n;\n  return t && (g = o ? qa(o.type, {\n    size: o.size,\n    color: o.color,\n    children: t\n  }) : t), !s || !f ? /* @__PURE__ */ p(\"a\", { href: e, target: d, id: r, children: g }) : /* @__PURE__ */ p(f, { href: e, target: d, id: r, children: g });\n}\nfunction Gb(e) {\n  var t, n;\n  const { onWriteEmptyText: r, onWriteError: i, onWrite: o, onReadError: a } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      onWriteEmptyText: e == null ? void 0 : e.onWriteEmptyText,\n      onWriteError: e == null ? void 0 : e.onWriteError,\n      onWrite: e == null ? void 0 : e.onWrite,\n      onReadError: e == null ? void 0 : e.onReadError\n    }),\n    [e]\n  ), [s, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    typeof ((t = navigator.clipboard) == null ? void 0 : t.readText) < \"u\"\n  ), [l, d] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\n    typeof ((n = navigator.clipboard) == null ? void 0 : n.writeText) < \"u\"\n  ), f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (x) => b1(this, null, function* () {\n      try {\n        x.trim() ? (yield navigator.clipboard.writeText(x), o && o()) : r && r();\n      } catch {\n        i && i(), d(!1);\n      }\n    }),\n    [o, r, i]\n  ), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => b1(this, null, function* () {\n    try {\n      return yield navigator.clipboard.readText();\n    } catch {\n      return a && a(), c(!1), null;\n    }\n  }), [a]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      canReadFromClipboard: s,\n      canWriteToClipboard: l,\n      readTextFromClipboard: g,\n      writeTextToClipboard: f\n    }),\n    [\n      s,\n      l,\n      g,\n      f\n    ]\n  );\n}\nfunction Sr(e, t = !1) {\n  const n = (e / Qi).toFixed(6);\n  return t ? Number(n) : `${n}rem`;\n}\nSr(8), Sr(10), Sr(12), Sr(14), Sr(16), Sr(18), Sr(20), Sr(21), Sr(24);\ngt`\n  display: flex;\n  align-items: center;\n`;\ngt`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\ngt`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\ngt`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\ngt`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\ngt`\n  text-align: center;\n`;\nvar Yb = gt`\n  overflow: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  &::-moz-scrollbar {\n    display: none;\n  }\n`, Xb = (e) => gt`\n  display: -webkit-box;\n  -webkit-line-clamp: ${e};\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\nfunction Jb() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"36\",\n      height: \"33\",\n      viewBox: \"0 0 36 33\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M32 7.5V7.5C32 6.10444 32 5.40666 31.8278 4.83886C31.44 3.56046 30.4395 2.56004 29.1611 2.17224C28.5933 2 27.8956 2 26.5 2H8.4C6.15979 2 5.03968 2 4.18404 2.43597C3.43139 2.81947 2.81947 3.43139 2.43597 4.18404C2 5.03968 2 6.15979 2 8.4V24.6C2 26.8402 2 27.9603 2.43597 28.816C2.81947 29.5686 3.43139 30.1805 4.18404 30.564C5.03968 31 6.15979 31 8.4 31H25.6C27.8402 31 28.9603 31 29.816 30.564C30.5686 30.1805 31.1805 29.5686 31.564 28.816C32 27.9603 32 26.8402 32 24.6V24.5\",\n            stroke: \"currentColor\",\n            strokeWidth: \"3\",\n            strokeLinecap: \"round\"\n          }\n        ),\n        /* @__PURE__ */ p(\"rect\", { x: \"24\", y: \"12\", width: \"12\", height: \"8\", rx: \"1\", fill: \"#7808D0\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M19 30C19 21.1634 11.8366 14 3 14\",\n            stroke: \"currentColor\",\n            strokeWidth: \"3\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Qb({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\"g\", { id: \"triangle-exclamation\", children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          id: \"Vector\",\n          d: \"M11.9971 10.0156V12.0121M12 15H12.01M11.1354 3.49213L2.88661 17.4956C2.4946 18.1611 2.9751 19 3.74825 19H20.2459C21.019 19 21.4995 18.1611 21.1075 17.4956L12.8587 3.49213C12.4722 2.83596 11.5219 2.83596 11.1354 3.49213ZM12.25 15C12.25 15.1381 12.1381 15.25 12 15.25C11.8619 15.25 11.75 15.1381 11.75 15C11.75 14.8619 11.8619 14.75 12 14.75C12.1381 14.75 12.25 14.8619 12.25 15Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t\n        }\n      ) })\n    }\n  );\n}\nfunction ex() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M9.33395 1.60194C9.33395 0.612524 8.05068 0.224007 7.50188 1.04724L2.12471 9.11298C1.68167 9.77751 2.15806 10.6677 2.95676 10.6677H6.66728V14.4001C6.66728 15.3895 7.95048 15.778 8.49928 14.9548L13.8765 6.88904C14.3195 6.2245 13.8431 5.33435 13.0444 5.33435H9.33395V1.60194Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}\nfunction tx() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"21\",\n      height: \"28\",\n      viewBox: \"0 0 21 28\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M11.3704 14H10.3704C10.3704 14.5523 10.8181 15 11.3704 15V14ZM7.22223 16.0556L6.77821 16.9516C7.08819 17.1052 7.45547 17.0876 7.74947 16.9052C8.04347 16.723 8.22227 16.4015 8.22227 16.0556H7.22223ZM3.07408 18.1111L2.14676 17.7368C2.02255 18.0446 2.05911 18.3939 2.24433 18.6692L3.07408 18.1111ZM16.4919 8.68545C16.5841 9.22998 17.1003 9.59669 17.6448 9.50451C18.1893 9.41233 18.556 8.89617 18.4639 8.35163L16.4919 8.68545ZM0.128733 11.4262C0.22092 11.9707 0.73708 12.3375 1.28161 12.2452C1.82615 12.1531 2.19287 11.637 2.10068 11.0924L0.128733 11.4262ZM12.3704 14V9.88891H10.3704V14H12.3704ZM6.22223 9.88891V16.0556H8.22227V9.88891H6.22223ZM7.66627 15.1596L7.58893 15.1212L6.70095 16.9134L6.77821 16.9516L7.66627 15.1596ZM2.41327 17.0766L2.14676 17.7368L4.0014 18.4854L4.26791 17.8251L2.41327 17.0766ZM2.24433 18.6692L6.13327 24.4506L7.7928 23.3343L3.90381 17.553L2.24433 18.6692ZM11.5649 27.3334H12.7531V25.3334H11.5649V27.3334ZM20.6667 19.4815V18.1111H18.6667V19.4815H20.6667ZM15.5185 13H11.3704V15H15.5185V13ZM20.6667 18.1111C20.6667 15.2799 18.3533 13 15.5185 13V15C17.2657 15 18.6667 16.4014 18.6667 18.1111H20.6667ZM7.58893 15.1212C5.62571 14.1484 3.23445 15.0419 2.41327 17.0766L4.26791 17.8251C4.64845 16.8822 5.77005 16.452 6.70095 16.9134L7.58893 15.1212ZM12.7531 27.3334C17.1152 27.3334 20.6667 23.8264 20.6667 19.4815H18.6667C18.6667 22.705 16.0276 25.3334 12.7531 25.3334V27.3334ZM9.29627 6.83335C7.60707 6.83335 6.22223 8.19294 6.22223 9.88891H8.22227C8.22227 9.31438 8.69467 8.83335 9.29627 8.83335V6.83335ZM6.13327 24.4506C7.34627 26.2538 9.38533 27.3334 11.5649 27.3334V25.3334C10.0461 25.3334 8.63133 24.581 7.7928 23.3343L6.13327 24.4506ZM12.3704 9.88891C12.3704 8.19294 10.9856 6.83335 9.29627 6.83335V8.83335C9.898 8.83335 10.3704 9.31438 10.3704 9.88891H12.3704ZM2 9.88891C2 5.90862 5.25819 2.66669 9.29627 2.66669V0.666687C4.17057 0.666687 0 4.78718 0 9.88891H2ZM9.29627 2.66669C12.9176 2.66669 15.9148 5.27615 16.4919 8.68545L18.4639 8.35163C17.7244 3.98349 13.8967 0.666687 9.29627 0.666687V2.66669ZM2.10068 11.0924C2.03453 10.7016 2 10.2996 2 9.88891H0C0 10.412 0.044 10.9256 0.128733 11.4262L2.10068 11.0924Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}\nfunction nx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M17.7498 19.25H21.4228C22.0042 19.25 22.468 18.754 22.3704 18.1808C21.8389 15.0624 20.0189 12.75 16.9998 12.75C16.5537 12.75 16.1338 12.8005 15.7404 12.8966M11.2497 7C11.2497 8.79493 9.79461 10.25 7.99969 10.25C6.20476 10.25 4.74969 8.79493 4.74969 7C4.74969 5.20507 6.20476 3.75 7.99969 3.75C9.79461 3.75 11.2497 5.20507 11.2497 7ZM19.7497 7.5C19.7497 9.01878 18.5185 10.25 16.9997 10.25C15.4809 10.25 14.2497 9.01878 14.2497 7.5C14.2497 5.98122 15.4809 4.75 16.9997 4.75C18.5185 4.75 19.7497 5.98122 19.7497 7.5ZM1.87029 19.1808C2.4382 15.4997 4.51686 12.75 7.99969 12.75C11.4825 12.75 13.5612 15.4997 14.1291 19.1808C14.2177 19.755 13.7549 20.25 13.1739 20.25H2.82547C2.24447 20.25 1.7817 19.755 1.87029 19.1808Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction rx({\n  strokeWidth: e = \"2.28571\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"32\",\n      height: \"32\",\n      viewBox: \"0 0 32 32\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M7.33337 23.3333L14.6667 16L7.33337 8.66663M16.6667 26H26\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction ix({\n  strokeWidth: e = \"1\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 12\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M0.5 2.85714H11.5M4.07143 11.5H7.92857C8.79647 11.5 9.5 10.7965 9.5 9.92857L9.92857 2.07143C9.92857 1.20355 9.22504 0.5 8.35714 0.5H3.64286C2.77498 0.5 2.07143 1.20355 2.07143 2.07143L2.5 9.92857C2.5 10.7965 3.20355 11.5 4.07143 11.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M5 5V9\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M7 5V9\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        )\n      ]\n    }\n  );\n}\nfunction ox() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 40 18\",\n      fill: \"none\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M30.6127 11.5888C30.9753 11.5888 31.2799 11.5259 31.5265 11.4002C31.778 11.2697 31.9762 11.1222 32.1213 10.9578C32.2712 10.7934 32.3727 10.6556 32.4259 10.5444C32.5274 10.3316 32.5854 10.085 32.6 9.80459C32.6126 9.61777 32.6211 9.45169 32.6255 9.30635C32.3053 9.38884 32.0235 9.44143 31.7972 9.48367L31.7876 9.48546C31.425 9.54832 31.1324 9.60634 30.91 9.65953C30.6876 9.71272 30.4918 9.77074 30.3225 9.8336C30.1291 9.91096 29.972 9.99558 29.8511 10.0875C29.7351 10.1745 29.648 10.2712 29.59 10.3776C29.5368 10.4839 29.5102 10.6024 29.5102 10.733C29.5102 10.9119 29.5537 11.0666 29.6408 11.1971C29.7326 11.3229 29.8608 11.4196 30.0252 11.4873C30.1896 11.555 30.3854 11.5888 30.6127 11.5888Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M0.506832 2.74799C0 3.7427 0 5.04485 0 7.64916V10.3512C0 12.9555 0 14.2577 0.506832 15.2524C0.952653 16.1274 1.66403 16.8387 2.539 17.2846C3.53372 17.7914 4.83587 17.7914 7.44018 17.7914H32.5163C35.1206 17.7914 36.4228 17.7914 37.4175 17.2846C38.2925 16.8387 39.0038 16.1274 39.4497 15.2524C39.9565 14.2577 39.9565 12.9555 39.9565 10.3512V7.64916C39.9565 5.04485 39.9565 3.7427 39.4497 2.74799C39.0038 1.87301 38.2925 1.16164 37.4175 0.715816C36.4228 0.208984 35.1206 0.208984 32.5163 0.208984H7.44018C4.83587 0.208984 3.53372 0.208984 2.539 0.715816C1.66403 1.16164 0.952653 1.87301 0.506832 2.74799ZM30.192 13.1409C29.6311 13.1409 29.1548 13.0345 28.7632 12.8218C28.3763 12.6042 28.0814 12.3165 27.8783 11.9587C27.6801 11.5961 27.5809 11.1971 27.5809 10.762C27.5809 10.3993 27.6101 10.1905 27.7213 9.89067C27.8326 9.59088 28.0075 9.32106 28.2541 9.0938C28.5055 8.86171 28.8516 8.70218 29.1317 8.61725C29.4118 8.53232 29.9345 8.40989 30.2676 8.35398C30.3758 8.33582 30.5032 8.31555 30.649 8.29235L30.6491 8.29234L30.6493 8.29231C30.9523 8.24411 31.3345 8.1833 31.7876 8.10271C32.1373 8.04051 32.4065 7.94077 32.649 7.80203C32.6185 7.44774 32.5103 7.17964 32.3243 6.99772C32.1019 6.78013 31.7296 6.67134 31.2074 6.67134C30.9173 6.67134 30.6151 6.74145 30.3008 6.88167C29.9865 7.02189 29.7665 7.27091 29.6408 7.62872L27.8566 7.06299C28.0548 6.41507 28.4271 5.88802 28.9735 5.48186C29.5199 5.0757 30.2645 4.87262 31.2074 4.87262C31.8988 4.87262 32.5129 4.97899 33.0496 5.19174C33.5863 5.4045 33.9925 5.77198 34.2681 6.29419C34.4228 6.5843 34.5147 6.87442 34.5437 7.16453C34.5727 7.45465 34.5872 7.77861 34.5872 8.13642V12.9233H32.8611V11.9618C32.5494 12.329 32.2182 12.606 31.8674 12.7928C31.4274 13.0249 30.8689 13.1409 30.192 13.1409ZM24.1572 12.9231V8.29575C24.1572 7.77837 24.0339 7.37705 23.7873 7.09177C23.5456 6.80165 23.2095 6.65659 22.7792 6.65659C22.5036 6.65659 22.2642 6.72187 22.0611 6.85242C21.8581 6.97814 21.6985 7.15704 21.5825 7.38914C21.4712 7.61639 21.4156 7.87992 21.4156 8.1797V12.9231H19.4428V8.29575C19.4428 7.77837 19.3195 7.37705 19.073 7.09177C18.8312 6.80165 18.4951 6.65659 18.0648 6.65659C17.6538 6.65659 17.3226 6.79923 17.0711 7.08451C16.8246 7.36496 16.7013 7.73002 16.7013 8.1797V12.9231H14.714V5.08997H16.4547V5.94818C16.6819 5.6683 16.9599 5.43784 17.2887 5.25678C17.7239 5.01986 18.2099 4.90139 18.7466 4.90139C19.3606 4.90139 19.8635 5.03194 20.2552 5.29305C20.5823 5.50848 20.8387 5.78317 21.0243 6.11711C21.2732 5.74915 21.5946 5.45996 21.9886 5.24953C22.419 5.01744 22.8952 4.90139 23.4174 4.90139C24.312 4.90139 24.9865 5.16733 25.441 5.69921C25.9003 6.22625 26.13 6.9177 26.13 7.77354V12.9231H24.1572ZM6.92079 12.8433C7.30762 13.0512 7.80807 13.1552 8.42214 13.1552C9.19095 13.1552 9.82679 12.9884 10.3297 12.6547C10.5683 12.4979 10.7786 12.3181 10.9607 12.1154V12.9231H12.7014V5.08997H10.7141V9.06456C10.7141 9.54809 10.6585 9.93975 10.5472 10.2395C10.4409 10.5345 10.3031 10.7593 10.1338 10.9141C9.96459 11.0639 9.78327 11.1655 9.58986 11.2187C9.39645 11.2719 9.21513 11.2985 9.04589 11.2985C8.62523 11.2985 8.29884 11.2042 8.06675 11.0156C7.83949 10.827 7.6751 10.5925 7.57355 10.3121C7.47201 10.0316 7.41157 9.75359 7.39223 9.47798C7.37289 9.19753 7.36322 8.96786 7.36322 8.78895V5.08997H5.36142V9.48523C5.36142 9.61578 5.37109 9.8237 5.39043 10.109C5.40977 10.3943 5.46538 10.711 5.55725 11.0591C5.64912 11.4024 5.80143 11.7336 6.01418 12.0528C6.23177 12.3719 6.53397 12.6354 6.92079 12.8433Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction ax({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 22 22\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"circle\",\n          {\n            cx: \"11\",\n            cy: \"11\",\n            r: \"9\",\n            stroke: \"#EBEEF2\",\n            strokeWidth: e\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M19.9999 11C19.9999 9.57971 19.6638 8.17958 19.019 6.91409C18.3742 5.6486 17.439 4.55368 16.29 3.71885C15.1409 2.88402 13.8106 2.33299 12.4078 2.11081C11.005 1.88862 9.56953 2.0016 8.21875 2.44049\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        )\n      ]\n    }\n  );\n}\nfunction sx({\n  strokeWidth: e = \"2.09994\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 21 20\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"ellipse\",\n          {\n            opacity: \"0.3\",\n            cx: \"10.4996\",\n            cy: \"9.99998\",\n            rx: \"8.74961\",\n            ry: \"8.74986\",\n            stroke: \"#F9F9F9\",\n            strokeWidth: e\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M19.2503 9.99998C19.2503 8.61916 18.9235 7.25795 18.2966 6.02763C17.6697 4.79731 16.7606 3.73282 15.6435 2.9212C14.5265 2.10957 13.2332 1.57386 11.8694 1.35785C10.5056 1.14184 9.11007 1.25168 7.79688 1.67837\",\n            stroke: \"#F9F9F9\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        )\n      ]\n    }\n  );\n}\nfunction cx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M12 3C12.1989 3 12.3897 3.07902 12.5303 3.21967L17.0303 7.71967C17.3232 8.01256 17.3232 8.48744 17.0303 8.78033C16.7374 9.07322 16.2626 9.07322 15.9697 8.78033L12.75 5.56066V15C12.75 15.4142 12.4142 15.75 12 15.75C11.5858 15.75 11.25 15.4142 11.25 15V5.56066L8.03033 8.78033C7.73744 9.07322 7.26256 9.07322 6.96967 8.78033C6.67678 8.48744 6.67678 8.01256 6.96967 7.71967L11.4697 3.21967C11.6103 3.07902 11.8011 3 12 3Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M3.75 12C4.16421 12 4.5 12.3358 4.5 12.75V19.5H19.5V12.75C19.5 12.3358 19.8358 12 20.25 12C20.6642 12 21 12.3358 21 12.75V20.25C21 20.6642 20.6642 21 20.25 21H3.75C3.33579 21 3 20.6642 3 20.25V12.75C3 12.3358 3.33579 12 3.75 12Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction lx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 31 34\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M10.0472 14.9699C9.50375 14.4264 9.50375 13.5452 10.0472 13.0017C14.8217 8.22728 22.5626 8.22728 27.3371 13.0017C32.1115 17.7762 32.1115 25.5171 27.3371 30.2916C22.5626 35.066 14.8217 35.066 10.0472 30.2916C9.50375 29.7481 9.50375 28.8669 10.0472 28.3234C10.5907 27.7799 11.4719 27.7799 12.0154 28.3234C15.7029 32.0109 21.6815 32.0109 25.3689 28.3234C29.0564 24.6359 29.0564 18.6574 25.3689 14.9699C21.6815 11.2824 15.7029 11.2824 12.0154 14.9699C11.4719 15.5134 10.5907 15.5134 10.0472 14.9699Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M20.9351 18.9665C21.4786 19.51 21.4786 20.3912 20.9351 20.9347C16.1607 25.7091 8.41976 25.7091 3.6453 20.9347C-1.12916 16.1602 -1.12916 8.41927 3.6453 3.64481C8.41976 -1.12965 16.1607 -1.12965 20.9351 3.64481C21.4786 4.1883 21.4786 5.06948 20.9351 5.61297C20.3916 6.15647 19.5105 6.15647 18.967 5.61297C15.2795 1.9255 9.30093 1.9255 5.61346 5.61297C1.92599 9.30044 1.92599 15.279 5.61346 18.9665C9.30093 22.654 15.2795 22.654 18.967 18.9665C19.5105 18.423 20.3916 18.423 20.9351 18.9665Z\",\n            fill: \"#00AD54\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction dx({ strokeWidth: e = \"1.5\" }) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 17 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M6.74994 6.95207L10.0833 5.04728M6.74994 9.04727L10.0833 10.9521M14.2499 3.99967C14.2499 5.19629 13.2799 6.16634 12.0833 6.16634C10.8867 6.16634 9.91659 5.19629 9.91659 3.99967C9.91659 2.80305 10.8867 1.83301 12.0833 1.83301C13.2799 1.83301 14.2499 2.80305 14.2499 3.99967ZM14.2499 11.9997C14.2499 13.1963 13.2799 14.1663 12.0833 14.1663C10.8867 14.1663 9.91659 13.1963 9.91659 11.9997C9.91659 10.8031 10.8867 9.83301 12.0833 9.83301C13.2799 9.83301 14.2499 10.8031 14.2499 11.9997ZM6.91659 7.99967C6.91659 9.19627 5.94654 10.1663 4.74992 10.1663C3.5533 10.1663 2.58325 9.19627 2.58325 7.99967C2.58325 6.80307 3.5533 5.83301 4.74992 5.83301C5.94654 5.83301 6.91659 6.80307 6.91659 7.99967Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e\n        }\n      )\n    }\n  );\n}\nfunction fx() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M11.7628 2.03849C11.9168 1.98717 12.0832 1.98717 12.2372 2.03849L20.4872 4.78849C20.7934 4.89057 21 5.17718 21 5.5V11.9123C21 14.6497 19.8165 16.6701 18.1412 18.2596C16.4942 19.8225 14.3404 20.9975 12.3561 22.068C12.1338 22.1879 11.8662 22.1879 11.6439 22.068C9.65956 20.9975 7.5058 19.8225 5.85876 18.2596C4.18351 16.6701 3 14.6497 3 11.9123V5.5C3 5.17718 3.20657 4.89057 3.51283 4.78849L11.7628 2.03849ZM15.2803 10.0303C15.5732 9.73744 15.5732 9.26256 15.2803 8.96967C14.9874 8.67678 14.5126 8.67678 14.2197 8.96967L11 12.1893L9.78033 10.9697C9.48744 10.6768 9.01256 10.6768 8.71967 10.9697C8.42678 11.2626 8.42678 11.7374 8.71967 12.0303L10.4697 13.7803C10.6103 13.921 10.8011 14 11 14C11.1989 14 11.3897 13.921 11.5303 13.7803L15.2803 10.0303Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}\nfunction ux({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M5 1H13C14.1046 1 15 1.89543 15 3V8M5 1H3.1875H3C1.89543 1 1 1.89543 1 3V13C1 14.1046 1.89543 15 3 15H5M5 1V5V8M5 15H13C14.1046 15 15 14.1046 15 13V8M5 15V8M5 8H15\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction hx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"square\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"12\",\n      height: \"12\",\n      viewBox: \"0 0 12 12\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M1.5 2.5H10.5M4.5 9.5H7.5M3 6H9\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t\n        }\n      )\n    }\n  );\n}\nfunction px({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M19 13C14.0987 13.4243 11.4243 16.0987 11 21C10.5578 16.0225 7.89737 13.5547 3 13C7.97478 12.4262 10.4262 9.97478 11 5C11.5547 9.89737 14.0225 12.5578 19 13Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M18.8864 2.34512C18.8642 2.14869 18.6981 2.0002 18.5004 2C18.3027 1.9998 18.1363 2.14794 18.1137 2.34433C18.0082 3.25861 17.7367 3.88584 17.3113 4.31127C16.8858 4.7367 16.2586 5.00822 15.3443 5.11367C15.1479 5.13632 14.9998 5.30271 15 5.5004C15.0002 5.69809 15.1487 5.86417 15.3451 5.88642C16.2439 5.98823 16.8855 6.25969 17.3217 6.68804C17.7556 7.11407 18.0322 7.74041 18.1126 8.64552C18.1305 8.84634 18.2988 9.00023 18.5004 9C18.702 8.99977 18.8701 8.84551 18.8874 8.64465C18.9645 7.75483 19.2409 7.11438 19.6776 6.67764C20.1144 6.24091 20.7548 5.96446 21.6446 5.88744C21.8455 5.87005 21.9998 5.70205 22 5.50044C22.0002 5.29883 21.8463 5.13048 21.6455 5.11264C20.7404 5.03224 20.1141 4.75557 19.688 4.3217C19.2597 3.88545 18.9882 3.24394 18.8864 2.34512Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction gx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      viewBox: \"0 0 20 16\",\n      width: \"100%\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M18.5466 1.55566H1.1864M18.5466 8.00009H1.1864M18.5466 14.4445H1.1864\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t\n        }\n      )\n    }\n  );\n}\nfunction mx() {\n  const e = Cn();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ q(\"g\", { clipPath: \"url(#clip0_286_445)\", children: [\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M23.9977 6.64738C23.9977 6.40527 23.9931 6.16543 23.9864 5.92333C23.9728 5.39839 23.9411 4.86666 23.8483 4.34625C23.7533 3.81905 23.5994 3.32806 23.3551 2.84838C23.1152 2.37774 22.803 1.94558 22.4274 1.57224C22.0541 1.1989 21.6219 0.884389 21.1513 0.644548C20.6716 0.400181 20.1806 0.24632 19.6534 0.151288C19.133 0.0585195 18.6035 0.0268423 18.0763 0.0132664C17.8342 0.00647844 17.5944 0.00421578 17.3523 0.00195312C17.0649 0.00195312 16.7798 0.00195312 16.4925 0.00195312H7.50747C7.22012 0.00195312 6.93502 0.00195312 6.64767 0.00195312C6.40556 0.00195312 6.16346 0.00647844 5.92362 0.0132664C5.79238 0.0177917 5.66115 0.022317 5.52765 0.0268423C5.13169 0.0449436 4.73573 0.0811461 4.34655 0.151288C3.95059 0.221431 3.57499 0.327776 3.2107 0.477111C3.08852 0.526889 2.9686 0.583456 2.84868 0.644548C2.4957 0.82556 2.16309 1.04504 1.86216 1.30298C1.7626 1.38896 1.66531 1.47947 1.57028 1.57224C1.19694 1.94558 0.882434 2.37774 0.642593 2.84838C0.398226 3.32806 0.244366 3.81905 0.149335 4.34625C0.0565663 4.86666 0.0248892 5.39613 0.0113133 5.92333C0.0045253 6.16543 0.00226265 6.40527 0 6.64738C0 6.93247 0 7.21983 0 7.50719V16.4922C0 16.7796 0 17.0646 0 17.352C0 17.5941 0.0045253 17.8339 0.0113133 18.0761C0.0248892 18.601 0.0565663 19.1327 0.149335 19.6531C0.244366 20.1803 0.398226 20.6736 0.642593 21.1533C0.882434 21.6239 1.19468 22.0561 1.57028 22.4294C1.94362 22.8027 2.37578 23.1173 2.84641 23.3571C3.3261 23.6015 3.81709 23.7553 4.34429 23.8504C4.8647 23.9431 5.39416 23.9748 5.92136 23.9884C6.16346 23.9952 6.4033 23.9974 6.6454 23.9997C6.93276 23.9997 7.21785 23.9997 7.50521 23.9997H16.4902C16.7776 23.9997 17.0626 23.9997 17.35 23.9997C17.5921 23.9997 17.8319 23.9952 18.074 23.9884C18.599 23.9748 19.1307 23.9431 19.6511 23.8504C20.1783 23.7553 20.6693 23.6015 21.149 23.3571C21.6196 23.1173 22.0518 22.8027 22.4251 22.4294C22.7985 22.0561 23.113 21.6239 23.3528 21.1533C23.5972 20.6736 23.751 20.1826 23.8461 19.6531C23.9388 19.1327 23.9705 18.6033 23.9841 18.0761C23.9909 17.8339 23.9931 17.5941 23.9954 17.352C23.9954 17.0646 23.9954 16.7796 23.9954 16.4922V7.50719C23.9954 7.21983 23.9954 6.93473 23.9954 6.64738H23.9977Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M19.0151 14.8113C19.0422 14.7208 19.0694 14.6302 19.092 14.5375C20.0876 10.5688 17.6575 5.87603 13.544 3.40747C15.3473 5.85114 16.1438 8.8107 15.4356 11.3992C15.3722 11.63 15.2975 11.8517 15.2116 12.0667C15.1211 12.0078 15.0057 11.9399 14.8518 11.854C14.8518 11.854 10.7587 9.32658 6.32387 4.85783C6.20848 4.74018 8.68834 8.40342 11.5053 11.3788C10.1794 10.6344 6.48 7.9441 4.14042 5.80136C4.42777 6.28104 4.76943 6.74263 5.14503 7.18837C7.09996 9.66824 9.64997 12.7251 12.7023 15.076C10.5573 16.3883 7.52534 16.4924 4.5047 15.076C3.75803 14.7253 3.05661 14.3044 2.40723 13.8247C3.68562 15.8679 5.65413 17.6328 8.04801 18.6623C10.9057 19.8909 13.7454 19.8072 15.8609 18.6827C15.8609 18.6827 15.8768 18.6759 15.8836 18.6714C15.9786 18.6193 16.0736 18.5673 16.1641 18.513C17.1869 17.988 19.1803 17.4699 20.2527 19.5561C20.5175 20.0697 21.0764 17.35 19.0151 14.8135V14.8113Z\",\n              fill: e.bg\n            }\n          )\n        ] }),\n        /* @__PURE__ */ p(\"defs\", { children: /* @__PURE__ */ p(\"clipPath\", { id: \"clip0_286_445\", children: /* @__PURE__ */ p(\"rect\", { width: \"23.9999\", height: \"24\", fill: e.bg }) }) })\n      ]\n    }\n  );\n}\nfunction vx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 12\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M0.5 7.96429C1.28571 9.53571 2.85714 11.5 6 11.5C9.14286 11.5 10.7143 9.53571 11.5 7.96429M11.5 7.96429H8.75M11.5 7.96429V11.1071M11.5 4.03571C10.7143 2.46429 9.14286 0.5 6 0.5C2.85714 0.5 1.28571 2.46429 0.5 4.03571M0.5 4.03571H3.25M0.5 4.03571V0.892857\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction yx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M4.66667 7.99996H11.3333M7.33333 11.3333H14M2 4.66663H8.66667\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction bx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M11.8407 1.43262C6.11131 1.43262 1.44824 6.09788 1.44824 11.825C1.44824 17.5522 6.11351 22.2174 11.8407 22.2174C17.5678 22.2174 22.2331 17.5522 22.2331 11.825C22.2331 6.09788 17.5678 1.43262 11.8407 1.43262ZM11.8253 2.356C12.003 2.3606 12.1718 2.43466 12.2959 2.56239C12.4199 2.69012 12.4893 2.86141 12.4892 3.03974C12.4892 3.22108 12.4172 3.39499 12.289 3.52321C12.1607 3.65144 11.9868 3.72348 11.8055 3.72348C11.6241 3.72348 11.4502 3.65144 11.322 3.52321C11.1938 3.39499 11.1217 3.22108 11.1217 3.03974C11.1217 2.94826 11.14 2.8577 11.1756 2.77343C11.2112 2.68916 11.2633 2.61288 11.3289 2.54913C11.3945 2.48537 11.4723 2.43543 11.5575 2.40225C11.6428 2.36908 11.7338 2.35335 11.8253 2.356ZM13.3906 3.48164C14.5909 3.70646 15.7279 4.18988 16.7226 4.89831C17.7173 5.60675 18.5459 6.52322 19.1507 7.58408L18.3439 9.40446C18.2054 9.71885 18.3483 10.0882 18.6605 10.2289L20.2126 10.917C20.2608 11.4022 20.2667 11.8907 20.2302 12.3769H19.3662C19.2805 12.3769 19.2453 12.434 19.2453 12.5176V12.9133C19.2453 13.8455 18.7198 14.0499 18.2581 14.1005C17.8184 14.1511 17.3326 13.9158 17.271 13.6476C17.0116 12.19 16.5807 11.88 15.8991 11.3414C16.7456 10.8049 17.625 10.0113 17.625 8.95156C17.625 7.80613 16.8401 7.08502 16.3059 6.73106C15.554 6.23639 14.7229 6.13746 14.4987 6.13746H5.57267C6.80692 4.75863 8.46132 3.82518 10.2797 3.48164L11.3328 4.5853C11.5702 4.83373 11.9638 4.84472 12.2122 4.60508L13.3906 3.48164ZM3.67315 8.54264C3.85103 8.54779 4.01991 8.62209 4.14388 8.74976C4.26786 8.87744 4.33717 9.04842 4.3371 9.22638C4.3371 9.40772 4.26506 9.58163 4.13684 9.70986C4.00861 9.83808 3.8347 9.91012 3.65336 9.91012C3.47202 9.91012 3.29811 9.83808 3.16988 9.70986C3.04166 9.58163 2.96962 9.40772 2.96962 9.22638C2.96958 9.1349 2.9879 9.04434 3.02349 8.96007C3.05908 8.8758 3.11122 8.79953 3.17683 8.73577C3.24243 8.67201 3.32016 8.62207 3.40541 8.58889C3.49066 8.55572 3.58171 8.53999 3.67315 8.54264ZM19.9752 8.57342C20.1531 8.57857 20.3219 8.65287 20.4459 8.78054C20.5699 8.90822 20.6392 9.0792 20.6391 9.25716C20.6391 9.4385 20.5671 9.61241 20.4389 9.74064C20.3107 9.86886 20.1367 9.9409 19.9554 9.9409C19.7741 9.9409 19.6002 9.86886 19.4719 9.74064C19.3437 9.61241 19.2717 9.4385 19.2717 9.25716C19.2716 9.16568 19.2899 9.07512 19.3255 8.99085C19.3611 8.90658 19.4133 8.8303 19.4789 8.76655C19.5445 8.70279 19.6222 8.65285 19.7075 8.61967C19.7927 8.5865 19.8837 8.57077 19.9752 8.57342ZM4.96148 8.68334H6.15308V14.0565H3.7479C3.45085 13.0134 3.35828 11.9227 3.47528 10.8445L4.94829 10.1893C5.26268 10.0486 5.40558 9.68147 5.26488 9.36708L4.96148 8.68334ZM9.93454 8.7405H12.7728C12.9201 8.7405 13.8083 8.90979 13.8083 9.57594C13.8083 10.1278 13.1268 10.3256 12.5662 10.3256H9.93234L9.93454 8.7405ZM9.93454 12.6011H12.1089C12.3067 12.6011 13.1708 12.6583 13.4456 13.7619C13.5313 14.1005 13.7226 15.2042 13.8523 15.5581C13.982 15.9539 14.5075 16.7453 15.0681 16.7453H18.6165C18.3787 17.0638 18.1186 17.365 17.8382 17.6467L16.3938 17.3367C16.0574 17.2642 15.7254 17.4796 15.6529 17.816L15.3099 19.4165C14.207 19.9161 13.0093 20.1718 11.7986 20.1661C10.5878 20.1604 9.39257 19.8935 8.29444 19.3836L7.95147 17.783C7.87892 17.4467 7.54914 17.2312 7.21277 17.3037L5.79912 17.6071C5.53679 17.3365 5.29293 17.0486 5.06921 16.7453H11.944C12.0209 16.7453 12.0737 16.7321 12.0737 16.6596V14.228C12.0737 14.1577 12.0209 14.1423 11.944 14.1423H9.93234L9.93454 12.6011ZM6.76207 18.17C6.93996 18.1751 7.10883 18.2494 7.23281 18.3771C7.35678 18.5048 7.4261 18.6757 7.42602 18.8537C7.42602 19.035 7.35399 19.209 7.22576 19.3372C7.09753 19.4654 6.92362 19.5374 6.74228 19.5374C6.56094 19.5374 6.38703 19.4654 6.25881 19.3372C6.13058 19.209 6.05854 19.035 6.05854 18.8537C6.0585 18.7622 6.07682 18.6717 6.11242 18.5874C6.14801 18.5031 6.20015 18.4269 6.26575 18.3631C6.33135 18.2993 6.40908 18.2494 6.49433 18.2162C6.57959 18.183 6.67063 18.1673 6.76207 18.17ZM16.8863 18.2007C17.0642 18.2059 17.233 18.2802 17.357 18.4079C17.481 18.5355 17.5503 18.7065 17.5502 18.8845C17.5502 19.0658 17.4782 19.2397 17.35 19.368C17.2217 19.4962 17.0478 19.5682 16.8665 19.5682C16.6851 19.5682 16.5112 19.4962 16.383 19.368C16.2548 19.2397 16.1827 19.0658 16.1827 18.8845C16.1827 18.793 16.201 18.7025 16.2366 18.6182C16.2722 18.5339 16.3243 18.4576 16.3899 18.3939C16.4555 18.3301 16.5333 18.2802 16.6185 18.247C16.7038 18.2138 16.7948 18.1981 16.8863 18.2007Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M21.6541 11.825C21.6541 14.4273 20.6203 16.923 18.7802 18.7631C16.9401 20.6032 14.4444 21.637 11.8421 21.637C9.23977 21.637 6.74404 20.6032 4.90394 18.7631C3.06383 16.923 2.03007 14.4273 2.03007 11.825C2.03007 9.22267 3.06383 6.72695 4.90394 4.88685C6.74404 3.04674 9.23977 2.01298 11.8421 2.01298C14.4444 2.01298 16.9401 3.04674 18.7802 4.88685C20.6203 6.72695 21.6541 9.22267 21.6541 11.825ZM21.4694 10.8774L22.9996 11.825L21.4694 12.7725L22.7841 14.0015L21.1 14.6325L22.1509 16.0945L20.3723 16.3847L21.1198 18.0248L19.3192 17.9611L19.7326 19.7155L17.9781 19.3022L18.0419 21.1027L16.4018 20.3552L16.1116 22.1339L14.6496 21.083L14.0186 22.767L12.7896 21.4523L11.8421 22.9825L10.8945 21.4523L9.66553 22.767L9.03456 21.083L7.57254 22.1339L7.28234 20.3552L5.64224 21.1027L5.706 19.3022L3.95157 19.7155L4.3649 17.9611L2.56431 18.0248L3.3118 16.3847L1.5332 16.0945L2.58409 14.6325L0.900026 14.0015L2.21474 12.7725L0.68457 11.825L2.21474 10.8774L0.900026 9.64844L2.58409 9.01747L1.5332 7.55545L3.3118 7.26525L2.56431 5.62515L4.3649 5.68891L3.95157 3.93448L5.706 4.34781L5.64224 2.54722L7.28234 3.29471L7.57254 1.51611L9.03456 2.567L9.66553 0.882936L10.8945 2.19765L11.8421 0.66748L12.7896 2.19765L14.0186 0.882936L14.6496 2.567L16.1116 1.51611L16.4018 3.29471L18.0419 2.54722L17.9781 4.34781L19.7326 3.93448L19.3192 5.68891L21.1198 5.62515L20.3723 7.26525L22.1509 7.55545L21.1 9.01747L22.7841 9.64844L21.4694 10.8774Z\",\n            fill: \"currentColor\",\n            stroke: \"currentColor\",\n            strokeWidth: \"0.659557\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction xx({\n  strokeWidth: e = \"3.71429\",\n  strokeLinecap: t = \"butt\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 26 41\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M0 11.2142H26\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M13 5.64284V0.0714111\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M13 40.9286V35.3572\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M0 20.5H26\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M0 29.7858H26\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        )\n      ]\n    }\n  );\n}\nfunction wx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      viewBox: \"0 0 12 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M10.4 4.77783H1.09985\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            stroke: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M10.4 8H1.09985\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            stroke: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M10.4 11.2222H1.09985\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            stroke: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M5.95215 15.2498L5.95215 13.6387\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            stroke: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M5.95215 2.36111L5.95215 0.75\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            stroke: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction $x({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M10.9972 10.9512C9.78136 12.1281 8.12781 12.6667 6.83333 12.6667C4.5 12.6667 1 10.9167 1 6.83333C1 2.75 4.5 1 6.83333 1C9.16667 1 12.6667 2.75 12.6667 6.83333C12.6667 8.65133 11.9729 10.0068 10.9972 10.9512ZM10.9972 10.9512L15 15\",\n          stroke: \"#404040\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Cx({ strokeWidth: e = \"1.125\" }) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 13\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"rect\",\n          {\n            x: \"0.5625\",\n            y: \"3.3125\",\n            width: \"8.25\",\n            height: \"6.375\",\n            rx: \"0.9375\",\n            stroke: \"currentColor\",\n            strokeWidth: e\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8.8125 4.8125H10.5C11.0178 4.8125 11.4375 5.23223 11.4375 5.75V7.25C11.4375 7.76777 11.0178 8.1875 10.5 8.1875H8.8125V4.8125Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"rect\",\n          {\n            x: \"3.75\",\n            y: \"5.75\",\n            width: \"2.25\",\n            height: \"1.5\",\n            rx: \"0.75\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Sx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M4 5.33331L8 1.33331L12 5.33331\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M4 10.6667L8 14.6667L12 10.6667\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Mx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M12.2783 -0.199511C11.2995 -0.194963 10.3647 -0.111484 9.54227 0.0340522C7.11937 0.4621 6.67946 1.35804 6.67946 3.01031V5.19246H12.4051V5.91984H6.67946H4.53069C2.86667 5.91984 1.4096 6.92001 0.95385 8.82269C0.428147 11.0036 0.404829 12.3645 0.95385 14.6417C1.36085 16.3368 2.33281 17.5446 3.99683 17.5446H5.96543V14.9287C5.96543 13.0389 7.60056 11.3719 9.54227 11.3719H15.2612C16.8532 11.3719 18.124 10.0611 18.124 8.46234V3.01031C18.124 1.45863 16.815 0.293021 15.2612 0.0340522C14.2776 -0.129677 13.2571 -0.204059 12.2783 -0.199511ZM9.18191 1.55555C9.77333 1.55555 10.2563 2.04641 10.2563 2.64996C10.2563 3.25137 9.77333 3.73769 9.18191 3.73769C8.58838 3.73769 8.10753 3.25137 8.10753 2.64996C8.10753 2.04641 8.58838 1.55555 9.18191 1.55555Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M18.8383 5.91992V8.46242C18.8383 10.4336 17.1671 12.0927 15.2614 12.0927H9.54249C7.97598 12.0927 6.67969 13.4334 6.67969 15.0022V20.4542C6.67969 22.0059 8.02898 22.9186 9.54249 23.3637C11.3549 23.8967 13.0929 23.993 15.2614 23.3637C16.7029 22.9464 18.1242 22.1065 18.1242 20.4542V18.2721H12.4053V17.5447H18.1242H20.987C22.6511 17.5447 23.2711 16.384 23.8498 14.6418C24.4476 12.8483 24.4222 11.1235 23.8498 8.82277C23.4386 7.16623 22.6532 5.91992 20.987 5.91992H18.8383ZM15.6218 19.7268C16.2153 19.7268 16.6962 20.2132 16.6962 20.8146C16.6962 21.4181 16.2153 21.909 15.6218 21.909C15.0304 21.909 14.5474 21.4181 14.5474 20.8146C14.5474 20.2132 15.0304 19.7268 15.6218 19.7268Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Lx() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 13 12\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ q(\"g\", { clipPath: `url(#clip0_3508_2717-${e})`, children: [\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M1.19725 4.03679H4.28314C4.54577 4.03679 4.75859 3.82397 4.75859 3.56134V0.475449C4.75859 0.21282 4.54577 0 4.28314 0H1.19725C0.935188 0 0.721802 0.21282 0.721802 0.475449V3.56134C0.721802 3.82397 0.934622 4.03679 1.19725 4.03679V4.03679ZM1.6727 0.950899H3.80769V3.08589H1.6727V0.950899Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M12.2458 0H9.1599C8.89727 0 8.68445 0.21282 8.68445 0.475449V3.56191C8.68445 3.82454 8.89727 4.03736 9.1599 4.03736H12.2458C12.5084 4.03736 12.7212 3.82454 12.7212 3.56191V0.476015C12.7212 0.213386 12.5084 0 12.2458 0ZM11.7703 3.08589H9.63591V0.951465H11.7703V3.08589Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M4.3161 7.96387H1.23021C0.967581 7.96387 0.754761 8.17669 0.754761 8.43932V11.5252C0.754761 11.7878 0.967581 12.0007 1.23021 12.0007H4.3161C4.57873 12.0007 4.79155 11.7878 4.79155 11.5252V8.43932C4.79155 8.17669 4.57873 7.96387 4.3161 7.96387ZM3.84065 11.0498H1.70566V8.91533H3.84065V11.0498V11.0498Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M12.2458 7.96375H9.1599C8.89727 7.96375 8.68445 8.17657 8.68445 8.43919V11.5251C8.68445 11.7877 8.89727 12.0005 9.1599 12.0005H12.2458C12.5084 12.0005 12.7212 11.7877 12.7212 11.5251V8.43919C12.7212 8.17657 12.5084 7.96375 12.2458 7.96375ZM11.7703 11.0496H9.63591V8.91521H11.7703V11.0496Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M6.7379 0C6.47527 0 6.26245 0.21282 6.26245 0.475449V3.56191C6.26245 3.82454 6.47527 4.03736 6.7379 4.03736C7.00053 4.03736 7.21335 3.82454 7.21335 3.56191V0.476015C7.21335 0.213386 7.00053 0 6.7379 0Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M12.2458 5.54126L9.19164 5.54126C8.92901 5.54126 8.71619 5.75408 8.71619 6.01671C8.71619 6.27934 8.92901 6.49216 9.19164 6.49216L12.2458 6.49216C12.5084 6.49216 12.7212 6.27934 12.7212 6.01671C12.7212 5.75408 12.5084 5.54126 12.2458 5.54126Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M7.541 5.54126L6.95616 5.54126C6.69353 5.54126 6.48071 5.75408 6.48071 6.01671C6.48071 6.27934 6.69353 6.49216 6.95616 6.49216L7.541 6.49216C7.80363 6.49216 8.01645 6.27934 8.01645 6.01671C8.01645 5.75408 7.80363 5.54126 7.541 5.54126Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M6.7379 10.2861C6.47527 10.2861 6.26245 10.499 6.26245 10.7616V11.5246C6.26245 11.7872 6.47527 12 6.7379 12C7.00053 12 7.21335 11.7872 7.21335 11.5246V10.7616C7.21335 10.499 7.00053 10.2861 6.7379 10.2861Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M6.7379 5.54126H4.91478C4.65215 5.54126 4.43933 5.75408 4.43933 6.01671C4.43933 6.27934 4.65215 6.49216 4.91478 6.49216H6.26415V8.93676C6.26415 9.19939 6.47697 9.41221 6.7396 9.41221C7.00223 9.41221 7.21505 9.19939 7.21505 8.93676V6.01671C7.21505 5.89049 7.16467 5.7688 7.07524 5.67994C6.98582 5.59107 6.86412 5.5407 6.7379 5.54126V5.54126Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M1.19725 6.49216H2.87264C3.13527 6.49216 3.34809 6.27934 3.34809 6.01671C3.34809 5.75408 3.13527 5.54126 2.87264 5.54126H1.19725C0.934622 5.54126 0.721802 5.75408 0.721802 6.01671C0.721802 6.27934 0.934622 6.49216 1.19725 6.49216Z\",\n              fill: \"currentColor\"\n            }\n          )\n        ] }),\n        /* @__PURE__ */ p(\"defs\", { children: /* @__PURE__ */ p(\"clipPath\", { id: `clip0_3508_2717-${e}`, children: /* @__PURE__ */ p(\n          \"rect\",\n          {\n            width: \"11.9994\",\n            height: \"12\",\n            fill: \"white\",\n            transform: \"translate(0.721802)\"\n          }\n        ) }) })\n      ]\n    }\n  );\n}\nfunction Ax({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M7.75 7.25C8.5 5 12.25 5.19156 12.25 7.54132C12.25 9.2008 10 9.4614 10 11.25M10 14V13.99M19.25 10C19.25 15.1086 15.1086 19.25 10 19.25C4.89137 19.25 0.75 15.1086 0.75 10C0.75 4.89137 4.89137 0.75 10 0.75C15.1086 0.75 19.25 4.89137 19.25 10ZM10.25 14C10.25 14.1381 10.1381 14.25 10 14.25C9.8619 14.25 9.75 14.1381 9.75 14C9.75 13.8619 9.8619 13.75 10 13.75C10.1381 13.75 10.25 13.8619 10.25 14Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction kx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 14 14\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M5.50065 5.16634C6.00065 3.66634 8.50065 3.79405 8.50065 5.36055C8.50065 6.46687 7.00065 6.64061 7.00065 7.83301M7.00065 9.66634V9.65967M13.1673 6.99967C13.1673 10.4054 10.4064 13.1663 7.00065 13.1663C3.5949 13.1663 0.833984 10.4054 0.833984 6.99967C0.833984 3.59392 3.5949 0.833008 7.00065 0.833008C10.4064 0.833008 13.1673 3.59392 13.1673 6.99967ZM7.16732 9.66634C7.16732 9.75841 7.09272 9.83301 7.00065 9.83301C6.90858 9.83301 6.83398 9.75841 6.83398 9.66634C6.83398 9.57427 6.90858 9.49967 7.00065 9.49967C7.09272 9.49967 7.16732 9.57427 7.16732 9.66634Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction _x() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)(), t = Cn();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 22\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ q(\"g\", { clipPath: `url(#clip0_286_456-${e})`, children: [\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M12.0005 12.8165C13.1819 12.8165 14.1396 11.8587 14.1396 10.6773C14.1396 9.49593 13.1819 8.53821 12.0005 8.53821C10.819 8.53821 9.86133 9.49593 9.86133 10.6773C9.86133 11.8587 10.819 12.8165 12.0005 12.8165Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M11.9997 15.0604C18.339 15.0604 23.478 13.0982 23.478 10.6778C23.478 8.25733 18.339 6.29517 11.9997 6.29517C5.66048 6.29517 0.521484 8.25733 0.521484 10.6778C0.521484 13.0982 5.66048 15.0604 11.9997 15.0604Z\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.04348\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M8.20389 12.8681C11.3735 18.3581 15.6423 21.8275 17.7385 20.6173C19.8346 19.4071 18.9644 13.9755 15.7948 8.48551C12.6252 2.99554 8.35638 -0.473876 6.26021 0.736348C4.16404 1.94657 5.03426 7.37815 8.20389 12.8681Z\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.04348\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M8.20415 8.48669C5.03451 13.9767 4.1643 19.4082 6.26047 20.6185C8.35664 21.8287 12.6254 18.3593 15.795 12.8693C18.9647 7.37933 19.8349 1.94775 17.7387 0.737529C15.6426 -0.472695 11.3738 2.99672 8.20415 8.48669Z\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.04348\"\n            }\n          )\n        ] }),\n        /* @__PURE__ */ p(\"defs\", { children: /* @__PURE__ */ p(\"clipPath\", { id: `clip0_286_456-${e}`, children: /* @__PURE__ */ p(\"rect\", { width: \"24\", height: \"21.3532\", fill: t.bg }) }) })\n      ]\n    }\n  );\n}\nfunction Ex({\n  strokeWidth: e = \"2.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 40 40\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M14.5827 12.9163H25.416M14.5827 19.583H18.7493M32.0827 35.4163V6.24967C32.0827 5.32921 31.3365 4.58301 30.416 4.58301H9.58268C8.66222 4.58301 7.91602 5.32921 7.91602 6.24967V35.4163L12.2216 31.6663L16.1105 35.4163L19.9993 31.6663L23.8882 35.4163L27.7772 31.6663L32.0827 35.4163Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Tx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M12 9.9987V4.66536C12 3.92898 11.4031 3.33203 10.6667 3.33203H7M12 9.9987L10 7.9987M12 9.9987L14 7.9987M4 5.9987V11.332C4 12.0684 4.59695 12.6654 5.33333 12.6654H9M4 5.9987L6 7.9987M4 5.9987L2 7.9987\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Bx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 17 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M11.0203 5.72973L6.47973 10.2703M11.0203 10.2703L6.47973 5.72973M15.75 8C15.75 11.866 12.616 15 8.75 15C4.88401 15 1.75 11.866 1.75 8C1.75 4.13401 4.88401 1 8.75 1C12.616 1 15.75 4.13401 15.75 8Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t\n        }\n      )\n    }\n  );\n}\nfunction Ix() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M1 14L15 2\",\n            stroke: \"currentColor\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M1.5 7.99986C1.5 7.17871 2.17312 6.0791 3.46017 5.13192C4.7117 4.21088 6.37168 3.57129 8 3.57129C9.61784 3.57129 11.2669 4.20267 12.5156 5.11417L13.6804 4.11579C13.5977 4.05032 13.5138 3.9863 13.4289 3.92381C11.9617 2.84404 9.99667 2.07129 8 2.07129C6.00332 2.07129 4.0383 2.84404 2.57108 3.92381C1.13938 4.97744 0 6.46711 0 7.99986C0 9.5326 1.13938 11.0223 2.57108 12.0759C2.89623 12.3152 3.24581 12.5394 3.61478 12.7435L4.84569 11.6884C4.34877 11.4558 3.88134 11.1778 3.46017 10.8678C2.17312 9.92062 1.5 8.82101 1.5 7.99986ZM6.48982 12.2547L5.1284 13.4217C6.04079 13.741 7.01656 13.9284 8 13.9284C9.99667 13.9284 11.9617 13.1557 13.4289 12.0759C14.8606 11.0223 16 9.5326 16 7.99986C16 6.99641 15.5117 6.01143 14.7727 5.15516L13.6346 6.13069C14.2058 6.79245 14.5 7.457 14.5 7.99986C14.5 8.82101 13.8269 9.92062 12.5398 10.8678C11.2883 11.7888 9.62832 12.4284 8 12.4284C7.49528 12.4284 6.98752 12.367 6.48982 12.2547ZM10.7583 8.59603C10.4961 9.81498 9.44641 10.7413 8.16793 10.8164L10.7583 8.59603ZM10.5527 6.79664C10.1011 5.84021 9.12785 5.17843 8 5.17843C6.44177 5.17843 5.17857 6.44163 5.17857 7.99986C5.17857 8.97302 5.67126 9.83111 6.42081 10.3383L7.6591 9.2769C7.09451 9.12657 6.67857 8.61179 6.67857 7.99986C6.67857 7.27006 7.2702 6.67843 8 6.67843C8.68203 6.67843 9.24338 7.19514 9.31395 7.85845L10.5527 6.79664Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Dx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M5.3998 1H2.5998C2.15798 1 1.7998 1.35818 1.7998 1.8V14.2C1.7998 14.6418 2.15798 15 2.5998 15H5.3998M5.3998 1H13.3998C13.8416 1 14.1998 1.35818 14.1998 1.8V14.2C14.1998 14.6418 13.8416 15 13.3998 15H5.3998M5.3998 1V15M8.5998 4.6H10.9998M8.5998 7.8H10.9998\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Rx({\n  strokeWidth: e = \"1\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 12\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M5.10092 6.89819L6.93999 5.06257M11.5 0.5L0.5 4.16667L5.08333 6.91667L7.83333 11.5L11.5 0.5Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Px({\n  strokeWidth: e = \"1\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 12\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M6.88851 2.9033L1 8.79181V11H3.20819L9.0967 5.11149M6.88851 2.9033L8.57623 1.21559C8.86367 0.928136 9.32974 0.928136 9.61717 1.21559L10.7844 2.38283C11.0719 2.67028 11.0719 3.13633 10.7844 3.42378L9.0967 5.11149M6.88851 2.9033L9.0967 5.11149\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Ox({\n  strokeWidth: e = \"1.5\",\n  strokeLinejoin: t = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M15.7485 6.5C15.7485 8.57107 14.0696 10.25 11.9985 10.25C9.92747 10.25 8.24854 8.57107 8.24854 6.5C8.24854 4.42893 9.92747 2.75 11.9985 2.75C14.0696 2.75 15.7485 4.42893 15.7485 6.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinejoin: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M11.9985 13.25C8.20293 13.25 5.43245 15.7735 4.67009 19.1657C4.54089 19.7406 5.0077 20.25 5.59696 20.25H18.4001C18.9894 20.25 19.4562 19.7406 19.327 19.1657C18.5646 15.7735 15.7941 13.25 11.9985 13.25Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinejoin: t\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Hx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 33 33\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M16.3721 0.248047C7.46702 0.248047 0.248047 7.46702 0.248047 16.3721C0.248047 21.0432 2.2344 25.2505 5.40849 28.1952C8.28546 30.8642 12.1382 32.4961 16.3721 32.4961C20.6059 32.4961 24.4588 30.8642 27.3356 28.1952C30.5098 25.2505 32.4961 21.0432 32.4961 16.3721C32.4961 7.46702 25.2771 0.248047 16.3721 0.248047ZM6.65904 26.0413C8.79248 23.1022 12.1978 21.2093 16.3721 21.2093C20.5464 21.2093 23.9517 23.1022 26.085 26.0413C23.6032 28.5344 20.1678 30.0775 16.3721 30.0775C12.5763 30.0775 9.14095 28.5344 6.65904 26.0413ZM21.2093 13.1473C21.2093 15.8189 19.0437 17.9845 16.3721 17.9845C13.7005 17.9845 11.5349 15.8189 11.5349 13.1473C11.5349 10.4758 13.7005 8.31006 16.3721 8.31006C19.0437 8.31006 21.2093 10.4758 21.2093 13.1473Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M6.49756 25.9241L6.39773 26.0617L6.51763 26.1821C9.03545 28.7113 12.5211 30.277 16.3721 30.277C20.223 30.277 23.7087 28.7113 26.2264 26.1821L26.3463 26.0617L26.2465 25.9241C24.076 22.9339 20.611 21.0098 16.3721 21.0098C12.1332 21.0098 8.66814 22.9339 6.49756 25.9241ZM27.1999 28.0489L27.3356 28.1952L27.1999 28.0489C24.3585 30.685 20.5536 32.2966 16.3721 32.2966C12.1905 32.2966 8.38573 30.685 5.5442 28.0489C2.4091 25.1403 0.447582 20.9854 0.447582 16.3721C0.447582 7.57722 7.57722 0.447582 16.3721 0.447582C25.1669 0.447582 32.2966 7.57722 32.2966 16.3721C32.2966 20.9854 30.3351 25.1403 27.1999 28.0489ZM16.3721 18.184C19.1539 18.184 21.4088 15.9291 21.4088 13.1473C21.4088 10.3656 19.1539 8.11053 16.3721 8.11053C13.5903 8.11053 11.3353 10.3656 11.3353 13.1473C11.3353 15.9291 13.5903 18.184 16.3721 18.184Z\",\n            stroke: \"white\",\n            strokeOpacity: \"0.05\",\n            strokeWidth: \"0.39907\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Ux({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"butt\",\n  strokeLinejoin: n = \"miter\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 21 19\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M4.2852 2.80323L4.28378 2.81174C4.16768 3.50397 4.04904 4.21137 3.96368 4.82785C3.3302 5.5199 2.84097 6.34727 2.54459 7.26219H1.75H1.09375V7.91844V10.8244V11.4626L1.7317 11.4804L2.59376 11.5045C2.97833 12.6034 3.64313 13.5696 4.50179 14.318L3.94048 15.3554L3.63587 15.9184L4.19114 16.237L5.64215 17.0693L6.19546 17.3867L6.52843 16.8426L7.20243 15.7413C7.73371 15.8781 8.29024 15.9508 8.86295 15.9508H10.733C11.2494 15.9508 11.7526 15.8917 12.2361 15.7798L12.7333 16.6734L13.0537 17.2493L13.6282 16.9265L15.0524 16.1264L15.6282 15.8028L15.301 15.2291L14.8823 14.495C16.1356 13.4907 17.0179 12.0401 17.2872 10.3828H18.3359C19.2032 10.3828 19.9063 9.67973 19.9063 8.81242C19.9063 7.9451 19.2032 7.242 18.3359 7.242H17.0447C16.1753 4.58759 13.6788 2.66994 10.733 2.66994H8.86295C8.17571 2.66994 7.51184 2.77455 6.88698 2.96907C6.72823 2.86308 6.56121 2.75214 6.39011 2.63848L6.38912 2.63782C6.057 2.4172 5.70863 2.18579 5.36863 1.95616L4.52263 1.3848L4.3541 2.39166L4.28524 2.80302L4.2852 2.80323Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8.87903 5.07309H11.1462\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"ellipse\",\n          {\n            cx: \"5.45801\",\n            cy: \"7.36851\",\n            rx: \"0.755735\",\n            ry: \"0.807216\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Nx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 15 15\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M1.875 7.17828H7.1783V1.87498\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M7.33203 1.875V7.1783H12.6353\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M12.6367 7.33859H7.33342V12.6419\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M7.17969 12.643L7.17969 7.33969L1.87639 7.33969\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Vx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 20 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ q(\"g\", { clipPath: \"url(#clip0_1383_30073)\", children: [\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M31.6927 15.3862H27.765V8.21623H26.7521V16.3799H32.6996V12.7227H31.6927V15.3862Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M35.856 9.20419H37.9936V15.3862H35.856V16.3799H41.1146V15.3862H39.0064V9.20419H41.1146V8.21623H35.856V9.20419Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M49.6235 15.3862H47.4506C46.3671 15.3862 45.9844 15.2129 45.8489 15.1147C45.6428 14.9587 45.5427 14.6525 45.5427 14.2076V10.4175C45.5427 9.9611 45.6369 9.63178 45.8254 9.47001C45.9373 9.37179 46.267 9.20424 47.1798 9.20424H50.0004V8.2105H47.1798C46.161 8.2105 45.5015 8.37805 45.1129 8.73048C44.7301 9.08291 44.5358 9.64911 44.5358 10.4118V14.2018C44.5358 14.56 44.577 14.872 44.6594 15.132C44.7537 15.4382 44.9303 15.6924 45.1894 15.8889C45.425 16.068 45.7429 16.2009 46.1316 16.276C46.479 16.3453 46.9266 16.38 47.4565 16.38H50.6364V12.8037H49.6235V15.3862Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M59.8698 11.7983H55.4474V8.21623H54.4346V16.3799H55.4474V12.7921H59.8698V16.3799H60.8826V8.21623H59.8698V11.7983Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M64.0919 9.20419H66.9184V16.3799H67.9312V9.20419H70.7578V8.21623H64.0919V9.20419Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M77.9949 12.0525L75.0742 11.469C74.9505 11.4459 74.8622 11.4112 74.7974 11.3419C74.7974 11.3419 74.7326 11.2668 74.7326 10.9837V9.87439C74.7326 9.67795 74.7974 9.53352 74.9387 9.40641C75.0859 9.27353 75.2861 9.20997 75.5688 9.20997H79.0666V8.21623H75.5688C75.0329 8.21623 74.5913 8.37223 74.2556 8.67266C73.9023 8.98465 73.7257 9.38908 73.7257 9.87439V10.9837C73.7257 11.4806 73.8434 11.833 74.0908 12.0583C74.3027 12.2547 74.5736 12.3819 74.8916 12.4454L77.7947 13.0289C77.9655 13.0636 78.095 13.1272 78.1833 13.2196C78.1951 13.2312 78.2893 13.3467 78.2893 13.7974V14.5831C78.2893 14.8258 78.2128 15.0049 78.0479 15.1551C77.8771 15.3111 77.6416 15.3862 77.3295 15.3862H73.4607V16.3799H77.3295C77.9125 16.3799 78.3894 16.2124 78.7487 15.8773C79.1137 15.5364 79.2963 15.1031 79.2963 14.5831V13.7974C79.2963 13.208 79.1667 12.7921 78.9018 12.5263C78.6603 12.2836 78.3541 12.1276 77.9949 12.0525Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M88.4001 8.88643C88.2058 8.67266 87.9349 8.49933 87.5933 8.38378C87.2753 8.27401 86.869 8.21623 86.3921 8.21623H82.9767V16.3799H83.9895V13.7165H86.3921C86.869 13.7165 87.2754 13.6645 87.5875 13.5605C87.929 13.4449 88.1999 13.2832 88.4001 13.0694C88.5944 12.8614 88.7298 12.6072 88.8064 12.3125C88.8712 12.0583 88.9006 11.781 88.9006 11.4863V10.4868C88.9006 10.1922 88.8712 9.91484 88.8064 9.65484C88.7357 9.36019 88.6003 9.10598 88.406 8.88643H88.4001ZM83.9836 9.20419H86.3862C86.7395 9.20419 87.0221 9.23886 87.2282 9.30819C87.4108 9.37174 87.5462 9.44685 87.6287 9.54507C87.717 9.64329 87.7818 9.76462 87.8171 9.90328C87.8583 10.0766 87.8819 10.273 87.8819 10.481V11.4806C87.8819 11.6885 87.8583 11.8792 87.8171 12.0468C87.7818 12.1854 87.7229 12.2894 87.6346 12.3876C87.5462 12.4801 87.4167 12.5552 87.2341 12.613C87.028 12.6823 86.7395 12.7112 86.3862 12.7112H83.9836V9.19842V9.20419Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M98.2224 11.6019L97.2684 9.38908C97.1448 9.1002 97.0093 8.85176 96.868 8.65533C96.7208 8.45311 96.4322 8.21623 95.8728 8.21623H94.5184C93.9472 8.21623 93.6528 8.45311 93.5056 8.64955C93.3525 8.85176 93.2229 9.09442 93.1052 9.3833L92.2219 11.6134C92.1394 11.833 92.0747 12.0583 92.0334 12.2952C91.9863 12.5321 91.9628 12.7978 91.9628 13.0752V16.3857H92.9756V14.0573H97.4804V16.3857H98.4933V13.0752C98.4933 12.7978 98.4697 12.5378 98.4226 12.2952C98.3755 12.0583 98.3107 11.8272 98.2283 11.6077L98.2224 11.6019ZM94.3006 9.25619C94.3006 9.25619 94.383 9.20419 94.5184 9.20419H95.8728C95.9317 9.20419 96.0318 9.20997 96.0672 9.25619C96.1614 9.38908 96.2556 9.5624 96.3439 9.7704L97.2861 11.9485C97.345 12.1103 97.3921 12.2894 97.4274 12.4743C97.4627 12.6534 97.4804 12.8498 97.4804 13.0578H92.9756C92.9756 12.8441 92.9933 12.6476 93.0286 12.4743C93.0639 12.2894 93.1111 12.1161 93.1641 11.9659L94.0474 9.74729C94.1239 9.55085 94.2122 9.38908 94.3064 9.25619H94.3006Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M107.621 12.3761C107.621 12.3761 107.644 12.3241 107.656 12.301C107.785 11.9832 107.856 11.5846 107.856 11.1166V10.1806C107.856 9.63756 107.691 9.16957 107.361 8.79981C107.02 8.40694 106.508 8.2105 105.842 8.2105H102.262V16.3742H103.275V13.237H106.743C107.149 13.237 107.444 13.3121 107.609 13.4565C107.762 13.5952 107.838 13.8147 107.838 14.1325V16.3742H108.851V14.1325C108.851 13.5432 108.663 13.0752 108.298 12.7401C108.115 12.5783 107.891 12.457 107.626 12.3761H107.621ZM105.842 9.20424C106.195 9.20424 106.449 9.28513 106.596 9.45268C106.761 9.63756 106.837 9.86866 106.837 10.1864V11.1339C106.837 11.5384 106.767 11.8446 106.625 12.041C106.525 12.1855 106.243 12.2664 105.836 12.2664H103.263V9.21002H105.836L105.842 9.20424Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M118.326 12.2143C117.99 11.9601 117.513 11.8272 116.901 11.8157L118.485 8.21623H117.384L115.8 11.8157H113.527V8.21623H112.514V16.3799H113.527V12.8094H116.801C117.207 12.8094 117.513 12.8729 117.69 13.0001C117.743 13.0347 117.896 13.1445 117.896 13.572V16.3799H118.909V13.572C118.909 12.9654 118.715 12.509 118.326 12.2143Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M10.0695 12.7915H2.78532L13.0727 3.95763L11.0588 8.23881H12.213L16.0877 0L0 13.8199H9.58667L10.0695 12.7915Z\",\n              fill: \"currentColor\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M10.1461 10.1801L9.66324 11.2085H16.9475L6.66004 20.0424L8.67395 15.7612H7.51978L3.64507 24L19.7328 10.1801H10.1461Z\",\n              fill: \"currentColor\"\n            }\n          )\n        ] }),\n        /* @__PURE__ */ p(\"defs\", { children: /* @__PURE__ */ p(\"clipPath\", { id: \"clip0_1383_30073\", children: /* @__PURE__ */ p(\"rect\", { width: \"20\", height: \"24\", fill: \"currentColor\" }) }) })\n      ]\n    }\n  );\n}\nfunction zx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 30 30\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ q(\"g\", { clipPath: \"url(#clip0_469_6261)\", children: [\n          /* @__PURE__ */ p(\"circle\", { cx: \"15\", cy: \"15\", r: \"15\", fill: \"#FFF14E\" }),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M14.901 15.6596H8.94529L17.3565 8.29803L15.7099 11.8657H16.6535L19.8216 5L6.66797 16.5166H14.5062L14.901 15.6596Z\",\n              fill: \"black\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M14.9638 13.4834L14.569 14.3404H20.5247L12.1135 21.702L13.7601 18.1343H12.8165L12.1713 19.5354L9.64844 25L22.802 13.4834H14.9638Z\",\n              fill: \"black\"\n            }\n          )\n        ] }),\n        /* @__PURE__ */ p(\"defs\", { children: /* @__PURE__ */ p(\"clipPath\", { id: \"clip0_469_6261\", children: /* @__PURE__ */ p(\"rect\", { width: \"30\", height: \"30\", fill: \"white\" }) }) })\n      ]\n    }\n  );\n}\nfunction Wx() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M10.2917 1.125H14.0417C14.5019 1.125 14.875 1.4981 14.875 1.95833V14.0417C14.875 14.5019 14.5019 14.875 14.0417 14.875H10.2917M10.5 8H1.125M10.5 8L7.58333 10.9167M10.5 8L7.58333 5.08333\",\n          stroke: \"currentColor\",\n          strokeWidth: \"1.5\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}\nfunction Fx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 22 22\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M9 9.99954L1 17.9995L2.5 19.4995L4 20.9995L12 12.9995M9 9.99954L11.2929 7.70665C11.6834 7.31612 12.3166 7.31612 12.7071 7.70665L14.2929 9.29243C14.6834 9.68296 14.6834 10.3161 14.2929 10.7067L12 12.9995M9 9.99954L12 12.9995\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M9 2.99951C10.3668 4.36635 10.5 4.49951 10.5 4.49951M10.5 2.99951L9 4.49951\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M18 8.99969C20.7337 11.7334 21 11.9997 21 11.9997M21 8.99969L18 11.9997\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M17.5977 0.999512C16.5971 4.73377 16.4996 5.09759 16.4996 5.09759M19.0977 3.59759L14.9996 2.49951\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        )\n      ]\n    }\n  );\n}\nfunction jx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M6.75 12H17.25\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t\n        }\n      )\n    }\n  );\n}\nfunction qx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 18\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M4.89258 16.2514H7.99972M11.1069 16.2514H7.99972M7.99972 13.959V16.2514\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M3.5 8H5L7 10L9 5L11 7H12.5\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"rect\",\n          {\n            x: \"0.75\",\n            y: \"1.74854\",\n            width: \"14.5\",\n            height: \"11.193\",\n            rx: \"2\",\n            stroke: \"currentColor\",\n            strokeWidth: e\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Zx({\n  strokeWidth: e = \"1\",\n  strokeLinecap: t = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 12\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M6 3.25V8.75M3.25 6H8.75M11.5 6C11.5 9.03757 9.03757 11.5 6 11.5C2.96243 11.5 0.5 9.03757 0.5 6C0.5 2.96243 2.96243 0.5 6 0.5C9.03757 0.5 11.5 2.96243 11.5 6Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t\n        }\n      )\n    }\n  );\n}\nfunction Kx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 12\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ q(\"g\", { clipPath: \"url(#clip0_1_2)\", children: [\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              fillRule: \"evenodd\",\n              clipRule: \"evenodd\",\n              d: \"M6.00009 0.166443C6.12679 0.166443 6.24725 0.221364 6.33031 0.316995L7.59831 1.77637L9.50773 1.47348C9.63286 1.45363 9.76043 1.489 9.8575 1.57043C9.95456 1.65187 10.0116 1.77137 10.0137 1.89804L10.047 3.83105L11.7044 4.82637C11.813 4.89162 11.888 5.0007 11.91 5.12548C11.932 5.25025 11.8988 5.37841 11.8191 5.47682L10.6021 6.97902L11.2319 8.80678C11.2732 8.92659 11.2605 9.05837 11.1972 9.16809C11.1338 9.27782 11.026 9.3547 10.9017 9.37879L9.00379 9.74723L8.31143 11.5523C8.26605 11.6706 8.17161 11.7634 8.05255 11.8067C7.93349 11.8501 7.80154 11.8396 7.69076 11.7782L6.00009 10.8405L4.30941 11.7782C4.19862 11.8396 4.06663 11.8501 3.94758 11.8067C3.82853 11.7634 3.7341 11.6706 3.68873 11.5523L2.99634 9.74723L1.09848 9.37879C0.974113 9.3547 0.866319 9.27782 0.802969 9.16809C0.739625 9.05837 0.726949 8.92659 0.768226 8.80678L1.39809 6.97902L0.181066 5.47682C0.101312 5.37841 0.0681439 5.25025 0.0901473 5.12548C0.112145 5.0007 0.18715 4.89162 0.295761 4.82637L1.95315 3.83105L1.98642 1.89804C1.98861 1.77137 2.04559 1.65187 2.14264 1.57043C2.2397 1.489 2.36728 1.45363 2.49241 1.47348L4.40182 1.77637L5.66981 0.316995C5.75293 0.221364 5.87339 0.166443 6.00009 0.166443ZM7.76776 5.57995C7.93862 5.40909 7.93862 5.13213 7.76776 4.96127C7.59691 4.7904 7.31988 4.7904 7.14902 4.96127L5.41676 6.69353L4.8511 6.12793C4.68025 5.95708 4.40323 5.95708 4.23238 6.12793C4.06153 6.29879 4.06153 6.57576 4.23238 6.74662L5.10736 7.62162C5.18943 7.70369 5.30073 7.74978 5.41676 7.74978C5.53278 7.74978 5.64408 7.70369 5.7261 7.62162L7.76776 5.57995Z\",\n              fill: \"#0068C9\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M7.76776 5.57989C7.93862 5.40903 7.93862 5.13207 7.76776 4.96121C7.59691 4.79034 7.31988 4.79034 7.14902 4.96121L5.41676 6.69347L4.8511 6.12787C4.68025 5.95702 4.40323 5.95702 4.23238 6.12787C4.06153 6.29873 4.06153 6.5757 4.23238 6.74656L5.10736 7.62156C5.18943 7.70363 5.30073 7.74972 5.41676 7.74972C5.53278 7.74972 5.64408 7.70363 5.7261 7.62156L7.76776 5.57989Z\",\n              fill: \"#F9F9F9\"\n            }\n          )\n        ] }),\n        /* @__PURE__ */ p(\"defs\", { children: /* @__PURE__ */ p(\"clipPath\", { id: \"clip0_1_2\", children: /* @__PURE__ */ p(\"rect\", { width: \"12\", height: \"12\", fill: \"white\" }) }) })\n      ]\n    }\n  );\n}\nfunction Gx() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)(), t = Cn();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 25 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"g\", { clipPath: `url(#clip0_286_537-${e})`, children: /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M24.333 24H0.333008V0H24.333L12.333 12L24.333 24Z\",\n            fill: \"currentColor\"\n          }\n        ) }),\n        /* @__PURE__ */ p(\"defs\", { children: /* @__PURE__ */ p(\"clipPath\", { id: `clip0_286_537-${e}`, children: /* @__PURE__ */ p(\n          \"rect\",\n          {\n            width: \"24\",\n            height: \"24\",\n            fill: t.bg,\n            transform: \"translate(0.333008)\"\n          }\n        ) }) })\n      ]\n    }\n  );\n}\nfunction Yx() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"rect\", { width: \"16\", height: \"16\", rx: \"2\", fill: \"#FFF14E\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M6.73918 10.2677L5.48342 13L12.0306 7.24169H8.59885L8.9703 6.43284L10.5472 3L4 8.75831H7.43176L7.06031 9.56716L6.73918 10.2677Z\",\n            fill: \"black\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Xx({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M9.99883 10.8335L7.49887 8.3335M4.40956 15.8335C1.77112 12.8887 1.86683 8.36008 4.6967 5.5302C7.62563 2.60126 12.3743 2.60126 15.3033 5.5302C18.1332 8.36008 18.2289 12.8887 15.5904 15.8335\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Jx({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M7.70833 3.125H4.45833C3.99162 3.125 3.75827 3.125 3.58001 3.21582C3.42321 3.29572 3.29572 3.42321 3.21582 3.58001C3.125 3.75827 3.125 3.99162 3.125 4.45833V15.5417C3.125 16.0084 3.125 16.2418 3.21582 16.42C3.29572 16.5768 3.42321 16.7043 3.58001 16.7842C3.75827 16.875 3.99162 16.875 4.45833 16.875H15.5417C16.0084 16.875 16.2418 16.875 16.42 16.7842C16.5768 16.7043 16.7043 16.5768 16.7842 16.42C16.875 16.2418 16.875 16.0084 16.875 15.5417V12.2917M11.4583 3.125H16.875M16.875 3.125V8.54167M16.875 3.125L9.16667 10.8333\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M7.70833 3.125H4.45833C3.99162 3.125 3.75827 3.125 3.58001 3.21582C3.42321 3.29572 3.29572 3.42321 3.21582 3.58001C3.125 3.75827 3.125 3.99162 3.125 4.45833V15.5417C3.125 16.0084 3.125 16.2418 3.21582 16.42C3.29572 16.5768 3.42321 16.7043 3.58001 16.7842C3.75827 16.875 3.99162 16.875 4.45833 16.875H15.5417C16.0084 16.875 16.2418 16.875 16.42 16.7842C16.5768 16.7043 16.7043 16.5768 16.7842 16.42C16.875 16.2418 16.875 16.0084 16.875 15.5417V12.2917M11.4583 3.125H16.875M16.875 3.125V8.54167M16.875 3.125L9.16667 10.8333\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Qx() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M10.0004 3.57361e-09C10.4146 4.00036e-05 10.7503 0.33585 10.7503 0.75007L10.75 4.25007C10.75 4.66428 10.4141 5.00004 9.9999 5C9.5857 4.99996 9.25 4.66415 9.25 4.24993L9.2503 0.74993C9.2503 0.33572 9.5862 -3.99964e-05 10.0004 3.57361e-09ZM2.92919 2.92867C3.22211 2.6358 3.69699 2.63584 3.98985 2.92876L6.46451 5.40385C6.75738 5.69677 6.75734 6.17164 6.46442 6.46451C6.1715 6.75738 5.69663 6.75734 5.40376 6.46442L2.9291 3.98933C2.63623 3.69641 2.63628 3.22154 2.92919 2.92867ZM17.0716 2.92943C17.3645 3.22232 17.3645 3.69719 17.0716 3.99009L14.5967 6.46496C14.3038 6.75785 13.8289 6.75785 13.536 6.46496C13.2431 6.17207 13.2431 5.69719 13.536 5.4043L16.0109 2.92943C16.3038 2.63653 16.7787 2.63653 17.0716 2.92943ZM0 10.0007C0 9.5865 0.33579 9.2507 0.75 9.2507H4.25C4.66421 9.2507 5 9.5865 5 10.0007C5 10.4149 4.66421 10.7507 4.25 10.7507H0.75C0.33579 10.7507 0 10.4149 0 10.0007ZM15 10.0007C15 9.5865 15.3358 9.2507 15.75 9.2507H19.25C19.6642 9.2507 20 9.5865 20 10.0007C20 10.4149 19.6642 10.7507 19.25 10.7507H15.75C15.3358 10.7507 15 10.4149 15 10.0007ZM13.5357 13.5353C13.8286 13.2424 14.3035 13.2424 14.5964 13.5353L17.0713 16.0102C17.3642 16.3031 17.3642 16.778 17.0713 17.0709C16.7784 17.3637 16.3035 17.3637 16.0106 17.0709L13.5357 14.596C13.2429 14.3031 13.2429 13.8282 13.5357 13.5353ZM6.46496 13.536C6.75785 13.8289 6.75785 14.3038 6.46496 14.5967L3.99009 17.0716C3.69719 17.3645 3.22232 17.3645 2.92943 17.0716C2.63653 16.7787 2.63653 16.3038 2.92943 16.0109L5.4043 13.536C5.69719 13.2431 6.17207 13.2431 6.46496 13.536ZM10.0003 15C10.4145 15 10.7503 15.3358 10.7503 15.75V19.25C10.7503 19.6642 10.4145 20 10.0003 20C9.5861 20 9.2503 19.6642 9.2503 19.25V15.75C9.2503 15.3358 9.5861 15 10.0003 15Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}\nfunction ew() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 17 17\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ q(\"g\", { clipPath: `url(#clip0_448_7848)-${e})`, children: [\n          /* @__PURE__ */ p(\"circle\", { cx: \"8.5\", cy: \"8.5\", r: \"7\", stroke: \"#E6E6E6\", strokeWidth: \"2\" }),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M8.5 15.5C4.63401 15.5 1.5 12.366 1.5 8.5C1.5 4.63401 4.63401 1.5 8.5 1.5\",\n              stroke: \"black\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }\n          ),\n          /* @__PURE__ */ p(\n            \"mask\",\n            {\n              id: `mask0_448_7848-${e}`,\n              style: { maskType: \"alpha\" },\n              maskUnits: \"userSpaceOnUse\",\n              x: \"0\",\n              y: \"0\",\n              width: \"10\",\n              height: \"17\",\n              children: /* @__PURE__ */ p(\n                \"path\",\n                {\n                  d: \"M8.5 15.5C4.63401 15.5 1.5 12.366 1.5 8.5C1.5 4.63401 4.63401 1.5 8.5 1.5\",\n                  stroke: \"black\",\n                  strokeWidth: \"2\",\n                  strokeLinecap: \"round\"\n                }\n              )\n            }\n          ),\n          /* @__PURE__ */ q(\"g\", { mask: `url(#mask0_448_7848-${e})`, children: [\n            /* @__PURE__ */ p(\"g\", { filter: `url(#filter0_f_448_7848)-${e})`, children: /* @__PURE__ */ p(\n              \"ellipse\",\n              {\n                cx: \"9\",\n                cy: \"4\",\n                rx: \"47\",\n                ry: \"19\",\n                fill: `url(#paint0_radial_448_7848-${e})`\n              }\n            ) }),\n            /* @__PURE__ */ p(\"g\", { filter: `url(#filter1_f_448_7848)-${e})`, children: /* @__PURE__ */ p(\n              \"ellipse\",\n              {\n                cx: \"9.5\",\n                cy: \"-6.5\",\n                rx: \"31.5\",\n                ry: \"25.5\",\n                fill: `url(#paint1_radial_448_7848-${e})`\n              }\n            ) })\n          ] })\n        ] }),\n        /* @__PURE__ */ q(\"defs\", { children: [\n          /* @__PURE__ */ q(\n            \"filter\",\n            {\n              id: `filter0_f_448_7848-${e}`,\n              x: \"-44\",\n              y: \"-21\",\n              width: \"106\",\n              height: \"50\",\n              filterUnits: \"userSpaceOnUse\",\n              colorInterpolationFilters: \"sRGB\",\n              children: [\n                /* @__PURE__ */ p(\"feFlood\", { floodOpacity: \"0\", result: \"BackgroundImageFix\" }),\n                /* @__PURE__ */ p(\n                  \"feBlend\",\n                  {\n                    mode: \"normal\",\n                    in: \"SourceGraphic\",\n                    in2: \"BackgroundImageFix\",\n                    result: \"shape\"\n                  }\n                ),\n                /* @__PURE__ */ p(\n                  \"feGaussianBlur\",\n                  {\n                    stdDeviation: \"3\",\n                    result: \"effect1_foregroundBlur_448_7848\"\n                  }\n                )\n              ]\n            }\n          ),\n          /* @__PURE__ */ q(\n            \"filter\",\n            {\n              id: `filter1_f_448_7848-${e}`,\n              x: \"-28\",\n              y: \"-38\",\n              width: \"75\",\n              height: \"63\",\n              filterUnits: \"userSpaceOnUse\",\n              colorInterpolationFilters: \"sRGB\",\n              children: [\n                /* @__PURE__ */ p(\"feFlood\", { floodOpacity: \"0\", result: \"BackgroundImageFix\" }),\n                /* @__PURE__ */ p(\n                  \"feBlend\",\n                  {\n                    mode: \"normal\",\n                    in: \"SourceGraphic\",\n                    in2: \"BackgroundImageFix\",\n                    result: \"shape\"\n                  }\n                ),\n                /* @__PURE__ */ p(\n                  \"feGaussianBlur\",\n                  {\n                    stdDeviation: \"3\",\n                    result: \"effect1_foregroundBlur_448_7848\"\n                  }\n                )\n              ]\n            }\n          ),\n          /* @__PURE__ */ q(\n            \"radialGradient\",\n            {\n              id: `paint0_radial_448_7848-${e}`,\n              cx: \"0\",\n              cy: \"0\",\n              r: \"1\",\n              gradientUnits: \"userSpaceOnUse\",\n              gradientTransform: \"translate(9.09573 3.9613) rotate(161.271) scale(31.3334 19.6551)\",\n              children: [\n                /* @__PURE__ */ p(\"stop\", { stopColor: \"#0066FF\" }),\n                /* @__PURE__ */ p(\"stop\", { offset: \"1\", stopColor: \"#0066FF\", stopOpacity: \"0\" })\n              ]\n            }\n          ),\n          /* @__PURE__ */ q(\n            \"radialGradient\",\n            {\n              id: `paint1_radial_448_7848-${e}`,\n              cx: \"0\",\n              cy: \"0\",\n              r: \"1\",\n              gradientUnits: \"userSpaceOnUse\",\n              gradientTransform: \"translate(9.56416 -6.55194) rotate(145.825) scale(24.0388 23.0445)\",\n              children: [\n                /* @__PURE__ */ p(\"stop\", { stopColor: \"#FFC700\" }),\n                /* @__PURE__ */ p(\"stop\", { offset: \"1\", stopColor: \"#BF09FF\", stopOpacity: \"0\" })\n              ]\n            }\n          ),\n          /* @__PURE__ */ p(\"clipPath\", { id: `clip0_448_7848-${e}`, children: /* @__PURE__ */ p(\n            \"rect\",\n            {\n              width: \"16\",\n              height: \"16\",\n              fill: \"white\",\n              transform: \"translate(0.5 0.5)\"\n            }\n          ) })\n        ] })\n      ]\n    }\n  );\n}\nfunction tw({ strokeWidth: e = \"2\" }) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 21 22\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M1 14.1429C1 12.5427 1 11.7426 1.34469 11.1315C1.64789 10.5938 2.13169 10.1568 2.72675 9.88284C3.40324 9.57143 4.28882 9.57143 6.05998 9.57143H14.9149C16.6861 9.57143 17.5717 9.57143 18.2482 9.88284C18.8432 10.1568 19.327 10.5938 19.6302 11.1315C19.9749 11.7426 19.9749 12.5427 19.9749 14.1429V16.4286C19.9749 18.0287 19.9749 18.8288 19.6302 19.44C19.327 19.9776 18.8432 20.4147 18.2482 20.6886C17.5717 21 16.6861 21 14.9149 21H6.05998C4.28882 21 3.40324 21 2.72675 20.6886C2.13169 20.4147 1.64789 19.9776 1.34469 19.44C1 18.8288 1 18.0287 1 16.4286V14.1429Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M4.5821 9.57143L4.5821 5.28572C4.5821 3.95445 4.5821 3.28882 4.82283 2.76376C5.1438 2.06368 5.75945 1.50747 6.53435 1.21749C7.11552 1 9.01392 1 10.4875 1C11.961 1 13.4884 1 14.0696 1.21749C14.8445 1.50747 15.4601 2.06368 15.7811 2.76376C16.0218 3.28882 16.0218 3.95445 16.0218 5.28571V9.57143H4.5821Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e\n          }\n        )\n      ]\n    }\n  );\n}\nvar nw = (e) => /* @__PURE__ */ q(\"svg\", Ie(ve({ viewBox: \"0 0 169 34\", width: \"100%\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" }, e), { children: [\n  /* @__PURE__ */ p(\"path\", { d: \"M44.898 21.7971H39.3337V11.6397H37.8989V23.2049H46.3245V18.0239H44.898V21.7971Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M50.796 13.0393H53.8242V21.7971H50.796V23.2049H58.2456V21.7971H55.2591V13.0393H58.2456V11.6397H50.796V13.0393Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M70.3 21.7972H67.2217C65.6868 21.7972 65.1445 21.5516 64.9527 21.4125C64.6607 21.1915 64.5189 20.7577 64.5189 20.1275V14.7582C64.5189 14.1116 64.6523 13.645 64.9193 13.4158C65.0778 13.2767 65.545 13.0393 66.838 13.0393H70.8339V11.6315H66.838C65.3948 11.6315 64.4605 11.8689 63.9099 12.3682C63.3676 12.8675 63.0923 13.6696 63.0923 14.75V20.1193C63.0923 20.6267 63.1507 21.0687 63.2675 21.437C63.401 21.8708 63.6513 22.231 64.0183 22.5093C64.352 22.763 64.8025 22.9512 65.3531 23.0576C65.8453 23.1559 66.4793 23.205 67.2301 23.205H71.7349V18.1385H70.3V21.7972Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M84.8156 16.7143H78.5506V11.6397H77.1157V23.2049H78.5506V18.1221H84.8156V23.2049H86.2504V11.6397H84.8156V16.7143Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M90.7968 13.0393H94.8011V23.2049H96.2359V13.0393H100.24V11.6397H90.7968V13.0393Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M110.493 17.0744L106.355 16.2477C106.18 16.215 106.055 16.1659 105.963 16.0677C105.963 16.0677 105.871 15.9613 105.871 15.5602V13.9887C105.871 13.7104 105.963 13.5058 106.163 13.3257C106.372 13.1375 106.655 13.0475 107.056 13.0475H112.011V11.6397H107.056C106.297 11.6397 105.671 11.8607 105.195 12.2863C104.695 12.7283 104.445 13.3012 104.445 13.9887V15.5602C104.445 16.2641 104.612 16.7634 104.962 17.0826C105.262 17.3609 105.646 17.541 106.096 17.631L110.209 18.4577C110.451 18.5068 110.635 18.5968 110.76 18.7278C110.776 18.7441 110.91 18.9078 110.91 19.5463V20.6594C110.91 21.0032 110.801 21.2569 110.568 21.4697C110.326 21.6907 109.992 21.7971 109.55 21.7971H104.069V23.2049H109.55C110.376 23.2049 111.052 22.9675 111.561 22.4928C112.078 22.0099 112.336 21.396 112.336 20.6594V19.5463C112.336 18.7114 112.153 18.1221 111.777 17.7456C111.435 17.4018 111.002 17.1808 110.493 17.0744Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M125.233 12.5891C124.958 12.2863 124.574 12.0407 124.091 11.877C123.64 11.7215 123.064 11.6397 122.389 11.6397H117.55V23.2049H118.985V19.4317H122.389C123.064 19.4317 123.64 19.358 124.082 19.2107C124.566 19.047 124.95 18.8178 125.233 18.515C125.509 18.2203 125.701 17.8602 125.809 17.4427C125.901 17.0826 125.943 16.6897 125.943 16.2723V14.8563C125.943 14.4389 125.901 14.046 125.809 13.6777C125.709 13.2603 125.517 12.9001 125.242 12.5891H125.233ZM118.977 13.0393H122.38C122.881 13.0393 123.281 13.0884 123.573 13.1866C123.832 13.2766 124.024 13.383 124.141 13.5222C124.266 13.6613 124.358 13.8332 124.408 14.0296C124.466 14.2752 124.499 14.5535 124.499 14.8481V16.2641C124.499 16.5588 124.466 16.8289 124.408 17.0662C124.358 17.2627 124.274 17.41 124.149 17.5491C124.024 17.6801 123.84 17.7865 123.582 17.8684C123.29 17.9666 122.881 18.0075 122.38 18.0075H118.977V13.0311V13.0393Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M139.148 16.436L137.797 13.3012C137.622 12.8919 137.43 12.54 137.23 12.2617C137.021 11.9752 136.612 11.6397 135.82 11.6397H133.901C133.092 11.6397 132.675 11.9752 132.466 12.2535C132.249 12.54 132.066 12.8838 131.899 13.293L130.648 16.4524C130.531 16.7634 130.439 17.0826 130.381 17.4182C130.314 17.7538 130.281 18.1303 130.281 18.5231V23.2131H131.715V19.9146H138.097V23.2131H139.532V18.5231C139.532 18.1303 139.499 17.762 139.432 17.4182C139.365 17.0826 139.274 16.7552 139.157 16.4442L139.148 16.436ZM133.592 13.1129C133.592 13.1129 133.709 13.0393 133.901 13.0393H135.82C135.903 13.0393 136.045 13.0475 136.095 13.1129C136.229 13.3012 136.362 13.5467 136.487 13.8414L137.822 16.9271C137.905 17.1563 137.972 17.41 138.022 17.6719C138.072 17.9257 138.097 18.2039 138.097 18.4986H131.715C131.715 18.1958 131.74 17.9175 131.791 17.6719C131.841 17.41 131.907 17.1645 131.982 16.9517L133.234 13.8087C133.342 13.5304 133.467 13.3012 133.601 13.1129H133.592Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M152.462 17.5328C152.462 17.5328 152.496 17.4592 152.512 17.4264C152.696 16.9763 152.796 16.4115 152.796 15.7485V14.4226C152.796 13.6532 152.563 12.9902 152.095 12.4664C151.612 11.9098 150.886 11.6315 149.943 11.6315H144.871V23.1968H146.306V18.7524H151.219C151.795 18.7524 152.212 18.8588 152.446 19.0634C152.663 19.2599 152.771 19.5709 152.771 20.021V23.1968H154.206V20.021C154.206 19.1862 153.939 18.5232 153.422 18.0485C153.163 17.8193 152.846 17.6474 152.471 17.5328H152.462ZM149.943 13.0393C150.444 13.0393 150.802 13.1539 151.011 13.3913C151.244 13.6532 151.353 13.9806 151.353 14.4308V15.7731C151.353 16.346 151.253 16.7798 151.053 17.0581C150.911 17.2627 150.51 17.3773 149.935 17.3773H146.289V13.0475H149.935L149.943 13.0393Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M167.629 17.3036C167.153 16.9435 166.477 16.7552 165.61 16.7388L167.854 11.6397H166.294L164.05 16.7388H160.83V11.6397H159.395V23.2049H160.83V18.1466H165.468C166.044 18.1466 166.477 18.2367 166.728 18.4167C166.803 18.4659 167.02 18.6214 167.02 19.227V23.2049H168.454V19.227C168.454 18.3676 168.179 17.721 167.629 17.3036Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M14.2652 18.1213H3.94587L18.5197 5.60665L15.6667 11.6716H17.3017L22.7909 0L0 19.5782H13.5811L14.2652 18.1213Z\", fill: \"currentColor\" }),\n  /* @__PURE__ */ p(\"path\", { d: \"M14.3736 14.4218L13.6896 15.8787H24.0089L9.43506 28.3934L12.2881 22.3284H10.653L5.16385 34L27.9548 14.4218H14.3736Z\", fill: \"currentColor\" })\n] })), rw = nw;\nfunction iw() {\n  return /* @__PURE__ */ p(rw, {});\n}\nfunction ow({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"square\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M21 12C21 16.9706 16.9706 21 12 21M21 12C21 7.02944 16.9706 3 12 3M21 12H3M12 21C7.02944 21 3 16.9706 3 12M12 21C9.79086 21 8 16.9706 8 12C8 7.02944 9.79086 3 12 3M12 21C14.2091 21 16 16.9706 16 12C16 7.02944 14.2091 3 12 3M12 3C7.02944 3 3 7.02944 3 12\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t\n        }\n      )\n    }\n  );\n}\nfunction aw() {\n  const e = Cn();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"rect\", { width: \"24\", height: \"24\", fill: e.hcNeutral }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M4.20792 11.1836C4.17676 11.1836 4.16897 11.168 4.18455 11.1447L4.34813 10.9343C4.36371 10.911 4.40266 10.8954 4.43382 10.8954H7.21476C7.24592 10.8954 7.25371 10.9188 7.23813 10.9421L7.1057 11.1447C7.09012 11.168 7.05118 11.1914 7.02781 11.1914L4.20792 11.1836Z\",\n            fill: e.bg\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M3.03116 11.9003C3 11.9003 2.99221 11.8847 3.00779 11.8613L3.17137 11.651C3.18695 11.6276 3.2259 11.6121 3.25706 11.6121H6.80919C6.84035 11.6121 6.85593 11.6354 6.84814 11.6588L6.78582 11.8458C6.77803 11.8769 6.74687 11.8925 6.71571 11.8925L3.03116 11.9003Z\",\n            fill: e.bg\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M4.9169 12.6171C4.88574 12.6171 4.87795 12.5937 4.89353 12.5703L5.00259 12.3756C5.01817 12.3522 5.04933 12.3289 5.08049 12.3289H6.63844C6.6696 12.3289 6.68517 12.3522 6.68517 12.3834L6.6696 12.5703C6.6696 12.6015 6.63844 12.6249 6.61507 12.6249L4.9169 12.6171Z\",\n            fill: e.bg\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M13.0035 11.0434C12.5128 11.168 12.1778 11.2615 11.6948 11.3862C11.578 11.4173 11.5702 11.4251 11.4689 11.3083C11.3521 11.1758 11.2664 11.0901 11.1028 11.0122C10.6121 10.7707 10.1369 10.8409 9.69287 11.1291C9.16316 11.4719 8.89052 11.9782 8.89831 12.6092C8.9061 13.2324 9.33454 13.7465 9.94993 13.8322C10.4796 13.9023 10.9236 13.7154 11.2742 13.3181C11.3443 13.2324 11.4066 13.1389 11.4845 13.0299C11.2041 13.0299 10.8535 13.0299 9.98109 13.0299C9.8175 13.0299 9.77855 12.9286 9.83308 12.7962C9.93435 12.5547 10.1213 12.1496 10.2304 11.947C10.2537 11.9003 10.3083 11.8224 10.4251 11.8224H13.2606C13.245 12.0327 13.245 12.2431 13.2138 12.4534C13.1281 13.0143 12.9178 13.5284 12.5751 13.9802C12.0142 14.7203 11.282 15.1799 10.355 15.3046C9.5916 15.4058 8.88273 15.2578 8.25955 14.7904C7.68311 14.3542 7.35594 13.7777 7.27025 13.061C7.16899 12.2119 7.41826 11.4485 7.93238 10.7785C8.48545 10.0541 9.21769 9.59445 10.1135 9.43086C10.8457 9.29843 11.5468 9.38412 12.1778 9.81257C12.5907 10.0852 12.8867 10.4591 13.0814 10.911C13.1281 10.9811 13.097 11.02 13.0035 11.0434Z\",\n            fill: e.bg\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M15.582 15.3513C14.8731 15.3357 14.2266 15.1332 13.6813 14.6658C13.2217 14.2685 12.9335 13.7621 12.84 13.1623C12.6998 12.282 12.9413 11.503 13.471 10.8097C14.0396 10.0619 14.7251 9.67236 15.6521 9.50877C16.4467 9.36855 17.1945 9.44645 17.8722 9.90606C18.4876 10.3267 18.8693 10.8954 18.9705 11.6432C19.103 12.6949 18.7992 13.5518 18.0747 14.2841C17.5606 14.806 16.9296 15.1332 16.2052 15.2812C15.9949 15.3201 15.7845 15.3279 15.582 15.3513ZM17.436 12.2041C17.4282 12.1029 17.4282 12.025 17.4126 11.9471C17.2724 11.1758 16.5635 10.7396 15.8235 10.911C15.099 11.0746 14.6317 11.5342 14.4603 12.2664C14.3201 12.8741 14.6161 13.4895 15.1769 13.7388C15.6054 13.9257 16.0338 13.9024 16.4467 13.692C17.0621 13.3726 17.397 12.8741 17.436 12.2041Z\",\n            fill: e.bg\n          }\n        )\n      ]\n    }\n  );\n}\nfunction sw() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 22 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M1.58766 17.6612L2.4502 18.1592L12.0591 1.51639L11.1966 1.01839L1.58766 17.6612Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M20.6095 16.3309H1.3916V17.3269H20.6095V16.3309Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M1.76929 16.8913L11.3818 22.4413L11.8798 21.5787L2.26729 16.0288L1.76929 16.8913Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M10.1199 2.42546L19.7324 7.97546L20.2304 7.11293L10.6179 1.56293L10.1199 2.42546Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M1.77056 7.10902L2.26855 7.97156L11.8811 2.42156L11.3831 1.55902L1.77056 7.10902Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M9.94574 1.51639L19.5547 18.1592L20.4172 17.6612L10.8083 1.01839L9.94574 1.51639Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M3.14834 6.45007H2.15234V17.5501H3.14834V6.45007Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M19.8515 6.45007H18.8555V17.5501H19.8515V6.45007Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M10.7779 21.266L11.2129 22.0194L19.5732 17.1924L19.1382 16.439L10.7779 21.266Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M21.1713 17.874C20.5953 18.876 19.3113 19.218 18.3093 18.642C17.3073 18.066 16.9653 16.782 17.5413 15.78C18.1173 14.778 19.4013 14.436 20.4033 15.012C21.4113 15.594 21.7533 16.872 21.1713 17.874Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M4.45548 8.21973C3.87948 9.22173 2.59549 9.56373 1.5935 8.98773C0.591502 8.41173 0.249504 7.12773 0.825501 6.12573C1.4015 5.12373 2.68549 4.78173 3.68748 5.35773C4.68948 5.93973 5.03148 7.21773 4.45548 8.21973Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M0.83136 17.874C0.255364 16.872 0.597361 15.594 1.59936 15.012C2.60135 14.436 3.87934 14.778 4.46134 15.78C5.03734 16.782 4.69534 18.06 3.69334 18.642C2.68535 19.218 1.40736 18.876 0.83136 17.874Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M17.5472 8.21973C16.9712 7.21773 17.3132 5.93973 18.3152 5.35773C19.3172 4.78173 20.5952 5.12373 21.1772 6.12573C21.7532 7.12773 21.4112 8.40573 20.4092 8.98773C19.4072 9.56373 18.1232 9.22173 17.5472 8.21973Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M11.0002 23.7477C9.84224 23.7477 8.90625 22.8117 8.90625 21.6537C8.90625 20.4957 9.84224 19.5597 11.0002 19.5597C12.1582 19.5597 13.0942 20.4957 13.0942 21.6537C13.0942 22.8057 12.1582 23.7477 11.0002 23.7477Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M11.0002 4.43983C9.84224 4.43983 8.90625 3.50383 8.90625 2.34583C8.90625 1.18783 9.84224 0.251831 11.0002 0.251831C12.1582 0.251831 13.0942 1.18783 13.0942 2.34583C13.0942 3.50383 12.1582 4.43983 11.0002 4.43983Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction cw({\n  strokeWidth: e = \"1.5\",\n  strokeLinejoin: t = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M14.1041 2.9055C12.6568 1.46965 10.3103 1.46965 8.86307 2.9055L7.98955 3.88576L7.11603 2.90552C5.66876 1.46967 3.32227 1.46967 1.875 2.90552C0.427734 4.34137 0.427732 6.66934 1.875 8.10519L7.98953 14.1715L14.1041 8.10517C15.5514 6.66932 15.5514 4.34135 14.1041 2.9055Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinejoin: t\n        }\n      )\n    }\n  );\n}\nfunction lw({\n  strokeWidth: e = \"1.5\",\n  strokeLinejoin: t = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M3.75 9.2582C3.75 8.97962 3.75 8.84033 3.78504 8.71146C3.81609 8.59729 3.86716 8.48953 3.93586 8.39321C4.0134 8.28448 4.12121 8.19628 4.33682 8.01987L10.9868 2.57896C11.3478 2.28362 11.5283 2.13596 11.7291 2.07944C11.9063 2.02959 12.0937 2.02959 12.2709 2.07944C12.4717 2.13596 12.6522 2.28362 13.0132 2.57896L19.6632 8.01987C19.8788 8.19628 19.9866 8.28448 20.0641 8.39321C20.1328 8.48953 20.1839 8.59729 20.215 8.71146C20.25 8.84033 20.25 8.97962 20.25 9.2582V18.65C20.25 19.21 20.25 19.4901 20.141 19.704C20.0451 19.8921 19.8922 20.0451 19.704 20.141C19.4901 20.25 19.2101 20.25 18.65 20.25H5.35C4.78995 20.25 4.50992 20.25 4.29601 20.141C4.10785 20.0451 3.95487 19.8921 3.85899 19.704C3.75 19.4901 3.75 19.21 3.75 18.65V9.2582Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinejoin: t\n        }\n      )\n    }\n  );\n}\nfunction dw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M15.351 8.00008C15.351 12.0502 12.0677 15.3334 8.01766 15.3334C3.96757 15.3334 0.684326 12.0502 0.684326 8.00008C0.684326 3.94999 3.96757 0.666748 8.01766 0.666748C12.0677 0.666748 15.351 3.94999 15.351 8.00008Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8.01758 11.1429V8.00008M8.01758 4.85732V4.83276\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8.01758 4.85732V4.83276\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction fw() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)(), t = Cn();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 25 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"g\", { clipPath: `url(#clip0_286_523-${e})`, children: /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M24.667 24H0.666992V0H24.667L12.667 12L24.667 24Z\",\n            fill: \"currentColor\"\n          }\n        ) }),\n        /* @__PURE__ */ q(\"g\", { clipPath: `url(#clip1_286_523-${e})`, children: [\n          /* @__PURE__ */ p(\"path\", { d: \"M24.667 0H0.666992V24H24.667V0Z\", fill: \"currentColor\" }),\n          /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M16.79 18.7499C17.2734 19.5393 17.9024 20.1194 19.0147 20.1194C19.9492 20.1194 20.5462 19.6524 20.5462 19.0071C20.5462 18.2337 19.9328 17.9598 18.9043 17.5099L18.3404 17.268C16.713 16.5747 15.6319 15.7061 15.6319 13.8699C15.6319 12.1785 16.9206 10.8909 18.9347 10.8909C20.3686 10.8909 21.3995 11.3899 22.1424 12.6966L20.3862 13.8242C19.9995 13.1309 19.5824 12.8577 18.9347 12.8577C18.2742 12.8577 17.8555 13.2768 17.8555 13.8242C17.8555 14.5008 18.2745 14.7747 19.2422 15.1937L19.806 15.4352C21.7222 16.257 22.8041 17.0947 22.8041 18.9781C22.8041 21.0086 21.209 22.121 19.0669 22.121C16.9724 22.121 15.6193 21.1229 14.9572 19.8147L16.79 18.7499ZM8.82311 18.9453C9.1774 19.5739 9.49969 20.1053 10.2745 20.1053C11.0155 20.1053 11.4829 19.8154 11.4829 18.6882V11.0196H13.7382V18.7187C13.7382 21.0539 12.369 22.1168 10.3705 22.1168C8.56483 22.1168 7.51911 21.1823 6.9873 20.0568L8.82311 18.9453Z\",\n              fill: t.bg\n            }\n          )\n        ] }),\n        /* @__PURE__ */ q(\"defs\", { children: [\n          /* @__PURE__ */ p(\"clipPath\", { id: `clip0_286_523-${e}`, children: /* @__PURE__ */ p(\n            \"rect\",\n            {\n              width: \"24\",\n              height: \"24\",\n              fill: t.bg,\n              transform: \"translate(0.666992)\"\n            }\n          ) }),\n          /* @__PURE__ */ p(\"clipPath\", { id: `clip1_286_523-${e}`, children: /* @__PURE__ */ p(\n            \"rect\",\n            {\n              width: \"24\",\n              height: \"24\",\n              fill: t.bg,\n              transform: \"translate(0.666992)\"\n            }\n          ) })\n        ] })\n      ]\n    }\n  );\n}\nfunction uw() {\n  const e = Cn();\n  return /* @__PURE__ */ q(\"svg\", { width: \"100%\", viewBox: \"0 0 25 24\", fill: \"none\", children: [\n    /* @__PURE__ */ p(\"rect\", { width: \"24\", height: \"24\", fill: \"currentColor\" }),\n    /* @__PURE__ */ p(\n      \"path\",\n      {\n        fill: e.bg,\n        d: \"M14.0284 15.104C13.631 15.2166 12.7358 15.4001 11.4558 15.4001C10.1996 15.4001 9.17311 15.185 9.16991 14.9318C9.16779 14.7633 9.37146 14.6899 9.37146 14.6899L9.33522 14.6689C8.73366 14.7752 8.17485 14.9396 8.17808 15.1856C8.18365 15.6322 9.89118 15.9675 11.4533 15.9675C12.7814 15.9675 14.0569 15.7447 14.6322 15.4527L14.0284 15.104ZM9.78311 16.4845C9.50413 16.54 8.89612 16.6796 8.89612 16.9753C8.89612 17.3849 10.197 17.6986 11.4528 17.6986C13.1809 17.6986 13.8887 17.2539 13.9207 17.2309L13.2022 16.8152C12.8966 16.888 12.3817 17.0024 11.4546 17.0024C10.4198 17.0024 9.74563 16.8252 9.74563 16.6312C9.74563 16.59 9.77137 16.5411 9.81932 16.5054L9.78311 16.4845ZM16.8447 13.7287C16.7963 14.6561 15.9395 15.2336 15.0831 15.7216L15.1607 15.7663C16.0745 15.5092 17.7051 14.7606 17.5703 13.6099C17.5031 13.036 16.9786 12.626 16.2948 12.626C16.0818 12.626 15.8924 12.6635 15.7388 12.7103L15.7383 12.7118L15.7059 12.7934C16.3175 12.6737 16.8764 13.1203 16.8447 13.7287ZM11.4292 19.1713C13.833 19.1504 16.5227 18.6799 16.5157 17.8891C16.5145 17.7458 16.4211 17.6476 16.34 17.5883L16.3006 17.6109C16.0784 18.2235 14.2 18.6761 11.4251 18.7003C9.63458 18.7159 7.15433 18.2869 7.15 17.7912C7.14566 17.2942 8.32496 17.0211 8.32496 17.0211L8.24164 16.9735C7.45136 17.0823 5.9952 17.4608 6.00001 18.0072C6.00694 18.7972 9.35354 19.1895 11.4292 19.1713ZM11.1792 19.7359C10.2237 19.7443 9.05699 19.6652 8.07554 19.5002L7.98466 19.5525C8.96228 19.8392 10.3233 20.0123 11.8189 19.9993C14.7561 19.9736 17.1375 19.2452 17.1846 18.3687L17.1506 18.3489C16.9537 18.5891 15.6833 19.6966 11.1792 19.7359ZM7.49957 13.5173C7.49957 13.0742 9.18017 12.8256 9.96266 12.7654L10.0373 12.8086C9.73673 12.8633 8.53072 13.076 8.53072 13.3534C8.53072 13.6555 10.3805 13.8535 11.4542 13.8535C13.2778 13.8535 14.5175 13.5775 14.8509 13.4865L15.3173 13.7579C14.9979 13.9143 13.6265 14.3242 11.4543 14.3242C9.04006 14.3242 7.49957 13.8519 7.49957 13.5173Z\"\n      }\n    ),\n    /* @__PURE__ */ p(\n      \"path\",\n      {\n        fill: e.bg,\n        d: \"M14.7951 7.32458L14.7547 7.30147C14.0204 7.54741 11.7604 8.43947 11.7604 10.1028C11.7604 11.0435 12.679 11.5645 12.679 12.4467C12.679 12.7614 12.5013 13.0564 12.3566 13.2327L12.4293 13.2748C12.8117 13.0262 13.4887 12.4881 13.4887 11.7933C13.4887 11.2049 12.6743 10.498 12.6743 9.74167C12.6743 8.55001 14.2456 7.61505 14.7951 7.32458ZM13.6857 5.14453C13.6857 7.60625 10.3121 8.54827 10.3121 10.2985C10.3121 11.5272 11.1269 12.2977 11.5776 12.7847L11.541 12.8059C10.9719 12.4499 9.47461 11.5552 9.47461 10.0774C9.47461 8.00271 13.3494 7.01134 13.3494 4.65472C13.3494 4.36475 13.3065 4.14253 13.2765 4.02258L13.3157 3.99998C13.4385 4.1543 13.6857 4.54009 13.6857 5.14453Z\"\n      }\n    )\n  ] });\n}\nfunction hw() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M8.90625 6.38889L8.21689 6.09345L7.76885 7.13889H8.90625V6.38889ZM11.3229 0.75L12.0123 1.04544C12.149 0.726338 12.0489 0.355085 11.7703 0.148013C11.4916 -0.0590584 11.1072 -0.0478189 10.8412 0.175182L11.3229 0.75ZM0.75 9.61111L0.268248 9.03629C0.0265337 9.23887 -0.0626239 9.57103 0.0451549 9.86742C0.152934 10.1638 0.43462 10.3611 0.75 10.3611L0.75 9.61111ZM7.09375 9.61111L7.78311 9.90655L8.23115 8.86111H7.09375V9.61111ZM4.67708 15.25L3.98772 14.9546C3.85097 15.2737 3.95109 15.6449 4.22974 15.852C4.5084 16.0591 4.89275 16.0478 5.15884 15.8248L4.67708 15.25ZM15.25 6.38889L15.7318 6.96371C15.9735 6.76113 16.0626 6.42897 15.9548 6.13258C15.8471 5.83619 15.5654 5.63889 15.25 5.63889V6.38889ZM9.59561 6.68433L12.0123 1.04544L10.6336 0.454561L8.21689 6.09345L9.59561 6.68433ZM10.8412 0.175182L0.268248 9.03629L1.23175 10.1859L11.8047 1.32482L10.8412 0.175182ZM0.75 10.3611H7.09375V8.86111H0.75V10.3611ZM6.40439 9.31567L3.98772 14.9546L5.36644 15.5454L7.78311 9.90655L6.40439 9.31567ZM5.15884 15.8248L15.7318 6.96371L14.7682 5.81407L4.19533 14.6752L5.15884 15.8248ZM15.25 5.63889H8.90625V7.13889H15.25V5.63889Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}\nfunction pw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"butt\",\n  strokeLinejoin: n = \"miter\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M10.0714 8.17857C10.0714 9.32259 9.14402 10.25 8 10.25C6.85598 10.25 5.92857 9.32259 5.92857 8.17857C5.92857 7.03455 6.85598 6.10714 8 6.10714C9.14402 6.10714 10.0714 7.03455 10.0714 8.17857Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8 3C4.375 3 0.75 5.82468 0.75 8.17857C0.75 10.5325 4.375 13.3571 8 13.3571C11.625 13.3571 15.25 10.5325 15.25 8.17857C15.25 5.82468 11.625 3 8 3Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction gw() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M14.1468 5.84804L13.8883 5.58948L15.21 4.26777C16.1863 3.29146 16.1863 1.70854 15.21 0.732233C14.2337 -0.244078 12.6508 -0.244078 11.6744 0.732233L10.3527 2.05394L10.0942 1.79538C9.50839 1.2096 8.55865 1.2096 7.97286 1.79538C7.38707 2.38117 7.38707 3.33092 7.97286 3.9167L8.26066 4.2045L2.12438 10.3408C2.02485 10.4403 1.9377 10.5515 1.8648 10.6719L0.326364 13.2129C-0.621051 14.7778 1.16487 16.5637 2.72972 15.6163L5.27078 14.0779C5.39118 14.005 5.50235 13.9178 5.60187 13.8183L11.7382 7.682L12.0255 7.96936C12.6113 8.55515 13.561 8.55515 14.1468 7.96936C14.7326 7.38357 14.7326 6.43383 14.1468 5.84804ZM9.32132 5.26516L10.6775 6.62134L4.54121 12.7576C4.527 12.7718 4.51112 12.7843 4.49391 12.7947L1.95286 14.3331C1.88025 14.3771 1.82762 14.3793 1.78992 14.3734C1.7446 14.3663 1.69213 14.3416 1.6466 14.2961C1.60107 14.2505 1.5764 14.198 1.56927 14.1527C1.56334 14.115 1.56556 14.0624 1.60952 13.9898L3.14796 11.4487C3.15837 11.4315 3.17082 11.4157 3.18504 11.4014L9.32132 5.26516Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}\nfunction mw() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"40\",\n      height: \"40\",\n      viewBox: \"0 0 40 40\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M8.01074 9.04831C8.01074 5.43178 10.9425 2.5 14.5591 2.5L25.7952 2.5C29.4118 2.5 32.3435 5.43178 32.3435 9.04831C32.3435 11.3383 31.1681 13.3537 29.3876 14.5242C31.1681 15.6947 32.3435 17.7102 32.3435 20.0001C32.3435 23.6167 29.4118 26.5485 25.7952 26.5485H25.653C23.9575 26.5485 22.4126 25.9041 21.2496 24.847V30.8806C21.2496 34.5453 18.2412 37.5 14.5944 37.5C10.9868 37.5 8.01074 34.5772 8.01074 30.9517C8.01074 28.6617 9.18619 26.6463 10.9666 25.476C9.18618 24.3055 8.01074 22.2901 8.01074 20.0001C8.01074 17.7102 9.1862 15.6947 10.9667 14.5242C9.18621 13.3537 8.01074 11.3383 8.01074 9.04831ZM14.5591 13.4517C12.1272 13.4517 10.1557 11.4802 10.1557 9.04831C10.1557 6.61641 12.1272 4.64497 14.5591 4.64497L19.1047 4.64497V13.4517H14.5591ZM19.1047 15.5966H14.5591C12.1272 15.5966 10.1557 17.5682 10.1557 20.0001C10.1557 22.4321 12.1272 24.4035 14.5591 24.4035H19.1047V15.5966ZM19.1047 26.5485H14.5591C12.1271 26.5485 10.1557 28.5198 10.1557 30.9517C10.1557 33.3746 12.1535 35.355 14.5944 35.355C17.0746 35.355 19.1047 33.3428 19.1047 30.8806V26.5485ZM25.7952 15.5966L25.653 15.5968C23.2211 15.5968 21.2496 17.5682 21.2496 20.0001C21.2496 22.4321 23.2211 24.4035 25.653 24.4035H25.7952C28.2271 24.4035 30.1986 22.4321 30.1986 20.0001C30.1986 17.5682 28.227 15.5967 25.7952 15.5966C25.7953 15.5966 25.7952 15.5966 25.7952 15.5966ZM25.7952 14.5242V13.4517H21.2496V4.64497H25.7952C28.2271 4.64497 30.1986 6.61641 30.1986 9.04831C30.1986 11.4802 28.2271 13.4517 25.7952 13.4517\",\n          fill: \"black\"\n        }\n      )\n    }\n  );\n}\nfunction vw() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      id: `logo_vector-${e}`,\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 300 371.14\",\n      width: \"100%\",\n      fill: \"none\",\n      children: [\n        /* @__PURE__ */ p(\n          \"polygon\",\n          {\n            opacity: \"0.72\",\n            fill: \"currentColor\",\n            points: \"186.21 371.14 186 371.14 86.14 271.29 143.14 214.07 300 371.14 186.21 371.14\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"polygon\",\n          {\n            opacity: \"0.72\",\n            fill: \"currentColor\",\n            points: \"186 171.21 186 171.21 85.93 271.07 143.14 328.07 300 171.21 186 171.21\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"polygon\",\n          {\n            opacity: \"0.72\",\n            fill: \"currentColor\",\n            points: \"186 0.21 185.79 0 0 185.57 57.21 242.79 299.79 0.21 186 0.21\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction yw({\n  strokeWidth: e = \"1\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 13 12\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M9.8999 1.5H2.8999C2.34762 1.5 1.8999 1.94772 1.8999 2.5V9.5C1.8999 10.0523 2.34762 10.5 2.8999 10.5H9.8999C10.4522 10.5 10.8999 10.0523 10.8999 9.5V2.5C10.8999 1.94772 10.4522 1.5 9.8999 1.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M6.3999 4V8\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction bw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"butt\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 18 18\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M6.6849 3.60254L4.17969 3.02441L3.02344 4.18066L3.60156 6.68587L1.28906 8.22754V9.76921L3.60156 11.3109L3.02344 13.816L4.17969 14.9723L6.6849 14.3942L8.22656 16.7067H9.76823L11.3099 14.3942L13.8151 14.9723L14.9713 13.816L14.3932 11.3109L16.7057 9.76921V8.22754L14.3932 6.68587L14.9713 4.18066L13.8151 3.02441L11.3099 3.60254L9.76823 1.29004H8.22656L6.6849 3.60254Z\",\n            stroke: \"black\",\n            strokeWidth: e,\n            strokeLinejoin: n,\n            strokeLinecap: t\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M11.2904 8.9987C11.2904 10.2644 10.2644 11.2904 8.9987 11.2904C7.73303 11.2904 6.70703 10.2644 6.70703 8.9987C6.70703 7.73303 7.73303 6.70703 8.9987 6.70703C10.2644 6.70703 11.2904 7.73303 11.2904 8.9987Z\",\n            stroke: \"black\",\n            strokeWidth: e,\n            strokeLinejoin: n,\n            strokeLinecap: t\n          }\n        )\n      ]\n    }\n  );\n}\nfunction xw() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M12.0001 0C5.3735 0 0 5.50847 0 12.3038C0 17.74 3.43839 22.3519 8.2064 23.9789C8.80613 24.0927 9.02631 23.7119 9.02631 23.387C9.02631 23.0936 9.01518 22.1244 9.01001 21.0963C5.67157 21.8405 4.96712 19.6446 4.96712 19.6446C4.42125 18.2224 3.63473 17.8443 3.63473 17.8443C2.54596 17.0806 3.7168 17.0963 3.7168 17.0963C4.92181 17.1831 5.55632 18.3642 5.55632 18.3642C6.6266 20.2452 8.36359 19.7014 9.04836 19.387C9.15607 18.5918 9.46706 18.049 9.81024 17.7418C7.14486 17.4307 4.34295 16.3757 4.34295 11.6612C4.34295 10.3179 4.81172 9.22032 5.57937 8.35868C5.45477 8.04878 5.04402 6.79737 5.69562 5.10261C5.69562 5.10261 6.70331 4.77193 8.9965 6.3638C9.95372 6.09119 10.9803 5.95447 12.0001 5.94979C13.0199 5.95447 14.0473 6.09119 15.0063 6.3638C17.2967 4.77193 18.303 5.10261 18.303 5.10261C18.9562 6.79737 18.5452 8.04878 18.4206 8.35868C19.1901 9.22032 19.6557 10.3179 19.6557 11.6612C19.6557 16.3869 16.8484 17.4274 14.1762 17.732C14.6067 18.1138 14.9902 18.8626 14.9902 20.0105C14.9902 21.6568 14.9763 22.9817 14.9763 23.387C14.9763 23.7144 15.1923 24.098 15.8006 23.9772C20.566 22.3485 24 17.7381 24 12.3038C24 5.50847 18.6273 0 12.0001 0ZM4.49443 17.527C4.468 17.5882 4.3742 17.6065 4.28876 17.5645C4.20172 17.5244 4.15283 17.4411 4.18105 17.3797C4.20688 17.3168 4.30088 17.2992 4.38772 17.3414C4.47495 17.3816 4.52463 17.4657 4.49443 17.527ZM5.0847 18.0671C5.02747 18.1215 4.91559 18.0962 4.83968 18.0102C4.76119 17.9244 4.74648 17.8097 4.80451 17.7545C4.86353 17.7001 4.97203 17.7256 5.05072 17.8114C5.12921 17.8981 5.14451 18.012 5.0847 18.0671ZM5.48965 18.758C5.41612 18.8104 5.2959 18.7613 5.22158 18.6518C5.14805 18.5424 5.14805 18.4112 5.22317 18.3587C5.29769 18.3061 5.41612 18.3534 5.49144 18.462C5.56476 18.5732 5.56476 18.7044 5.48965 18.758ZM6.1745 19.5582C6.10873 19.6326 5.96863 19.6126 5.86609 19.5111C5.76117 19.4119 5.73196 19.2711 5.79793 19.1968C5.8645 19.1222 6.00539 19.1432 6.10873 19.2438C6.21285 19.3428 6.24465 19.4846 6.1745 19.5582ZM7.05961 19.8283C7.0306 19.9247 6.89567 19.9685 6.75975 19.9276C6.62402 19.8854 6.5352 19.7725 6.56262 19.6751C6.59084 19.5781 6.72636 19.5325 6.86328 19.5763C6.9988 19.6183 7.08783 19.7303 7.05961 19.8283ZM8.0669 19.9429C8.07028 20.0444 7.95502 20.1285 7.81235 20.1304C7.66887 20.1336 7.55282 20.0515 7.55123 19.9517C7.55123 19.8492 7.6639 19.7659 7.80738 19.7634C7.95006 19.7606 8.0669 19.8421 8.0669 19.9429ZM9.05645 19.904C9.07354 20.0031 8.97438 20.1047 8.8327 20.1318C8.6934 20.1579 8.56443 20.0968 8.54674 19.9986C8.52946 19.8971 8.6304 19.7954 8.7695 19.7692C8.91139 19.7439 9.03837 19.8034 9.05645 19.904Z\",\n          fill: \"#161614\"\n        }\n      )\n    }\n  );\n}\nfunction ww({\n  strokeWidth: e = \"1.33333\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  const r = Cn();\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"rect\", { width: \"16\", height: \"16\", rx: \"8\", fill: \"currentColor\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M5.3335 5.33337L10.6668 10.6667\",\n            stroke: r.bg,\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M5.3335 10.6666L10.6668 5.33329\",\n            stroke: r.bg,\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction $w({\n  strokeWidth: e = \"1.125\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 10 13\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M7.90922 2.61607H5.00156M5.00156 2.61607H3.57422C2.26039 2.61607 1.19531 3.48552 1.19531 4.55804C1.19531 5.63055 2.26039 6.5 3.57422 6.5H5.00156M5.00156 2.61607V1.0625M5.00156 2.61607V6.5M5.00156 6.5H6.42891C7.74274 6.5 8.80781 7.36945 8.80781 8.44196C8.80781 9.51448 7.74274 10.3839 6.42891 10.3839H5.00156M5.00156 6.5V10.3839M5.00156 10.3839H1.61833M5.00156 10.3839V11.9375\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Cw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 10 18\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M5.00003 2.3291V0.84668M5.00003 15.6709V17.1533M8.53134 4.55273C7.82641 3.66654 6.50905 3.07031 5.00003 3.07031H4.54706C2.54571 3.07031 0.92334 4.25023 0.92334 5.70572V5.81886C0.92334 6.85997 1.73211 7.81163 3.01249 8.27722L6.98757 9.72275C8.26797 10.1883 9.07666 11.14 9.07666 12.1811C9.07666 13.699 7.3847 14.9296 5.29736 14.9296H5.00003C3.49101 14.9296 2.17365 14.3334 1.46872 13.4472\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Sw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M10.0005 3.3291V1.84668M10.0005 16.6709V18.1533M13.5318 5.55273C12.8269 4.66654 11.5095 4.07031 10.0005 4.07031H9.54754C7.5462 4.07031 5.92383 5.25023 5.92383 6.70572V6.81886C5.92383 7.85997 6.7326 8.81163 8.01298 9.27722L11.9881 10.7227C13.2685 11.1883 14.0771 12.14 14.0771 13.1811C14.0771 14.699 12.3852 15.9296 10.2978 15.9296H10.0005C8.4915 15.9296 7.17414 15.3334 6.46921 14.4472\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Mw() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\"g\", { id: \"dot-grid-1x3-horizontal, menu, drag, grab\", children: /* @__PURE__ */ q(\"g\", { id: \"Icon\", children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M4.00001 6.66663H1.33334V9.33329H4.00001V6.66663Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M9.33334 6.66663H6.66668V9.33329H9.33334V6.66663Z\",\n            fill: \"currentColor\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M14.6667 6.66663H12V9.33329H14.6667V6.66663Z\",\n            fill: \"currentColor\"\n          }\n        )\n      ] }) })\n    }\n  );\n}\nfunction Lw({\n  strokeWidth: e = \"1\",\n  strokeLinecap: t = \"butt\",\n  strokeLinejoin: n = \"miter\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M3.75 14C4.16421 14 4.5 14.3358 4.5 14.75V19.5H19.5V14.75C19.5 14.3358 19.8358 14 20.25 14C20.6642 14 21 14.3358 21 14.75V20.25C21 20.6642 20.6642 21 20.25 21H3.75C3.33579 21 3 20.6642 3 20.25V14.75C3 14.3358 3.33579 14 3.75 14Z\",\n            fill: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M12 15.75C12.1989 15.75 12.3897 15.671 12.5303 15.5303L16.0303 12.0303C16.3232 11.7374 16.3232 11.2626 16.0303 10.9697C15.7374 10.6768 15.2626 10.6768 14.9697 10.9697L12.75 13.1893V3.75C12.75 3.33579 12.4142 3 12 3C11.5858 3 11.25 3.33579 11.25 3.75V13.1893L9.03033 10.9697C8.73744 10.6768 8.26256 10.6768 7.96967 10.9697C7.67678 11.2626 7.67678 11.7374 7.96967 12.0303L11.4697 15.5303C11.6103 15.671 11.8011 15.75 12 15.75Z\",\n            fill: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Aw({\n  strokeWidth: e = \"3\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 40 40\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M35.0027 15.417C30.8238 18.5565 25.6293 20.417 20.0002 20.417C14.371 20.417 9.17645 18.5565 4.99773 15.417M4.5835 7.91699H35.4168V32.0837H4.5835V7.91699Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction kw({\n  strokeWidth: e = \"1.25\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 13 13\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M1.48828 6.5C1.48828 3.46243 3.95072 0.999999 6.98828 1C10.0258 1 12.4883 3.46243 12.4883 6.5C12.4883 9.53757 10.0258 12 6.98828 12C3.95072 12 1.48828 9.53757 1.48828 6.5Z\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M6.98828 4.14286L6.98828 6.5M6.98828 8.85707L6.98828 8.87549\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M6.98828 8.85707L6.98828 8.87549\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nvar _w = \"invert-fill-color\", Za = \"invert-stroke-color\";\nfunction Ew({\n  strokeWidth: e = \"1.14286\",\n  strokeLinecap: t = \"butt\",\n  strokeLinejoin: n = \"miter\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"circle\", { cx: \"8\", cy: \"8\", r: \"8\", fill: \"currentColor\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M4.57153 7.98591L6.65379 10.0682C6.65379 10.0682 9.08556 7.6364 11.0076 5.71436\",\n            className: Za,\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Tw({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"butt\",\n  strokeLinejoin: n = \"miter\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M6 10L8.5 12.5L13.5 7.5M19 10C19 14.9706 14.9706 19 10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Bw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"butt\",\n  strokeLinejoin: n = \"miter\"\n}) {\n  return /* @__PURE__ */ p(\"svg\", { viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: /* @__PURE__ */ p(\n    \"path\",\n    {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM11.0994 8.10001C11.0994 7.60295 11.5024 7.20001 11.9994 7.20001C12.4965 7.20001 12.8994 7.60296 12.8994 8.10001V11.1001L15.8998 11.1001C16.3969 11.1001 16.7998 11.503 16.7998 12.0001C16.7998 12.4971 16.3969 12.9001 15.8998 12.9001H12.8994V15.9C12.8994 16.3971 12.4965 16.8 11.9994 16.8C11.5024 16.8 11.0994 16.3971 11.0994 15.9V12.9001H8.09982C7.60276 12.9001 7.19982 12.4971 7.19982 12.0001C7.19982 11.503 7.60276 11.1001 8.09982 11.1001H11.0994V8.10001Z\",\n      fill: \"currentColor\",\n      className: Za,\n      strokeWidth: e,\n      strokeLinecap: t,\n      strokeLinejoin: n\n    }\n  ) });\n}\nfunction Iw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 21 21\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M10.5005 6.42187V10.5H14.5786M10.5005 20.0156C9.23785 20.0156 8.60652 20.0156 8.07651 19.9458C4.41653 19.464 1.53649 16.584 1.05464 12.924C0.984863 12.394 0.984863 11.7626 0.984863 10.5C0.984863 9.23736 0.984863 8.60604 1.05464 8.07602C1.53649 4.41604 4.41653 1.536 8.07651 1.05415C8.60652 0.984375 9.23785 0.984375 10.5005 0.984375C11.7631 0.984375 12.3945 0.984375 12.9245 1.05415C16.5845 1.536 19.4645 4.41604 19.9463 8.07602C20.0161 8.60604 20.0161 9.23736 20.0161 10.5C20.0161 11.7626 20.0161 12.394 19.9463 12.924C19.4645 16.584 16.5845 19.464 12.9245 19.9458C12.3945 20.0156 11.7631 20.0156 10.5005 20.0156Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Dw({\n  strokeWidth: e = \"1\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 8 8\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M0.5 0.5L7.5 7.5M0.5 7.5L7.5 0.5\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Rw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 14\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M3.85714 3.37502L0.75 7.00002L3.85714 10.625M12.1429 3.37502L15.25 7.00002L12.1429 10.625M9.55357 1.30359L6.44643 12.6964\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Pw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M13.25 6.75V1.25C13.25 0.97386 13.0261 0.75 12.75 0.75H1.25C0.97386 0.75 0.75 0.97386 0.75 1.25V12.75C0.75 13.0261 0.97386 13.25 1.25 13.25H6.75M7.25 6.75H18.75C19.0261 6.75 19.25 6.97386 19.25 7.25V18.75C19.25 19.0261 19.0261 19.25 18.75 19.25H7.25C6.97386 19.25 6.75 19.0261 6.75 18.75V7.25C6.75 6.97386 6.97386 6.75 7.25 6.75Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Ow({\n  strokeWidth: e = \"1.125\",\n  strokeLinecap: t = \"butt\",\n  strokeLinejoin: n = \"miter\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 13\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"path\", { d: \"M2.25 5.9375H9.375\", stroke: \"currentColor\", strokeWidth: \"1.125\" }),\n        /* @__PURE__ */ p(\n          \"rect\",\n          {\n            x: \"1.5\",\n            y: \"2.9375\",\n            width: \"9\",\n            height: \"7.125\",\n            rx: \"1\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n,\n            mask: \"url(#path-1-inside-1_865_26901)\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Hw({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 9\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M10.5004 1.84998L5.79662 6.63103C4.99697 7.44383 4.59714 7.85023 4.1003 7.85023C3.60346 7.85023 3.20363 7.44383 2.40398 6.63103L1.5 5.7122\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Uw({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 32 33\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"rect\", { y: \"0.5\", width: \"32\", height: \"32\", rx: \"16\", fill: \"currentColor\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8 16.4995L13 21.4995L24 10.4995\",\n            className: Za,\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Nw() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 28 28\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"circle\", { cx: \"14\", cy: \"14\", r: \"14\", fill: \"white\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8 13.9752L11.644 17.6192C11.644 17.6192 15.8995 13.3636 19.2631 10\",\n            stroke: \"#179257\",\n            strokeWidth: \"2\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Vw() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 28 28\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"circle\", { cx: \"14\", cy: \"14\", r: \"14\", fill: \"white\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8 13.9752L11.644 17.6192C11.644 17.6192 15.8995 13.3636 19.2631 10\",\n            stroke: \"#8B38DE\",\n            strokeWidth: \"2\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction zw() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 28 28\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"circle\", { cx: \"14\", cy: \"14\", r: \"14\", fill: \"white\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M8 13.9752L11.644 17.6192C11.644 17.6192 15.8995 13.3636 19.2631 10\",\n            stroke: \"#0048F7\",\n            strokeWidth: \"2\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Ww({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M3.3335 5.33337L8.00016 10L12.6668 5.33337\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nvar Fw = ({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) => /* @__PURE__ */ p(\n  \"svg\",\n  {\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /* @__PURE__ */ p(\n      \"path\",\n      {\n        d: \"M15 20L7 12L15 4\",\n        stroke: \"currentColor\",\n        strokeWidth: e,\n        strokeLinecap: t,\n        strokeLinejoin: n\n      }\n    )\n  }\n);\nfunction jw() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 9 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M1.5 1.33333L7.57742 7.41075C7.90283 7.73617 7.90283 8.26383 7.57742 8.58925L1.5 14.6667\",\n          stroke: \"currentColor\",\n          strokeWidth: \"1.5\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }\n      )\n    }\n  );\n}\nfunction qw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"square\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M20.2297 8.83298V17.6817M15.6892 17.6817V8.83298M3.77027 8.83298V17.6817M8.31081 17.6817V8.83298M20.5467 17.6817H3.4533C2.9647 17.6817 2.53092 17.9863 2.37642 18.4381L1.99803 19.5442C1.75302 20.2604 2.30012 21 3.07492 21H20.9251C21.6998 21 22.247 20.2604 22.002 19.5442L21.6236 18.4381C21.4691 17.9863 21.0353 17.6817 20.5467 17.6817ZM21.3649 8.83298H2.63514C2.00822 8.83298 1.5 8.33776 1.5 7.72689V7.21615C1.5 6.79885 1.74102 6.41707 2.12328 6.22889L11.4882 1.61883C11.81 1.46039 12.19 1.46039 12.5118 1.61883L21.8767 6.22889C22.259 6.41707 22.5 6.79885 22.5 7.21615V7.72689C22.5 8.33776 21.9918 8.83298 21.3649 8.83298Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Zw({\n  strokeWidth: e = \"1.125\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 9 13\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M2.52899 2.51568H1M2.52899 2.51568V6.30488M2.52899 2.51568H3.12195M2.52899 6.30488H6.25472M2.52899 6.30488V10.0941M6.25472 6.30488C7.61193 6.30488 8.42683 7.15312 8.42683 8.19948C8.42683 9.24584 7.61193 10.0941 6.25472 10.0941M6.25472 6.30488C7.61193 6.30488 8.42683 5.45664 8.42683 4.41028C8.42683 3.36392 7.61193 2.51568 6.25472 2.51568M6.25472 10.0941V11.875M6.25472 10.0941H3.12195M2.52899 10.0941H1M2.52899 10.0941H3.12195M6.25472 2.51568V1M6.25472 2.51568H3.12195M3.12195 1V2.51568M3.12195 10.0941V11.875\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Kw() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"rect\", { width: \"16\", height: \"16\", rx: \"2\", fill: \"#F7931A\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M6.02512 4.51426H4.66602M6.02512 4.51426V7.88244M6.02512 4.51426H6.55219M6.02512 7.88244H9.33688M6.02512 7.88244V11.2506M9.33688 7.88244C10.5433 7.88244 11.2676 8.63643 11.2676 9.56653C11.2676 10.4966 10.5433 11.2506 9.33688 11.2506M9.33688 7.88244C10.5433 7.88244 11.2676 7.12845 11.2676 6.19835C11.2676 5.26826 10.5433 4.51426 9.33688 4.51426M9.33688 11.2506V12.8337M9.33688 11.2506H6.55219M6.02512 11.2506H4.66602M6.02512 11.2506H6.55219M9.33688 4.51426V3.16699M9.33688 4.51426H6.55219M6.55219 3.16699V4.51426M6.55219 11.2506V12.8337\",\n            stroke: \"white\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Gw({ strokeWidth: e = \"1\" }) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 40 40\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          \"fill-rule\": \"evenodd\",\n          \"clip-rule\": \"evenodd\",\n          d: \"M9.59613 1.71666C10.4891 1.49342 11.394 2.03636 11.6172 2.92934L12.4506 6.26267C12.6738 7.15567 12.1309 8.06056 11.2379 8.28381C10.3449 8.50706 9.44003 7.96413 9.21678 7.07113L8.38345 3.73779C8.1602 2.84481 8.70313 1.93991 9.59613 1.71666ZM30.8912 9.10938C27.6345 5.85274 22.3545 5.85274 19.0979 9.10938L19.0902 9.11712L17.8377 10.3531C17.1827 10.9997 16.1274 10.9928 15.4808 10.3376C14.8342 9.68249 14.8412 8.62724 15.4963 7.98067L16.745 6.74826C21.3037 2.19397 28.6912 2.19534 33.2482 6.75234C37.8054 11.3094 37.8065 18.697 33.2522 23.2558L33.2482 23.2597L32.0199 24.5043C31.3734 25.1595 30.318 25.1663 29.663 24.5198C29.0079 23.8732 29.0009 22.818 29.6474 22.1628L30.8912 20.9027C34.1479 17.646 34.1479 12.366 30.8912 9.10938ZM1.71678 9.59601C1.94003 8.70302 2.84492 8.16009 3.73792 8.38332L7.07125 9.21666C7.96423 9.43991 8.50717 10.3448 8.28392 11.2378C8.06068 12.1308 7.15578 12.6737 6.2628 12.4505L2.92947 11.6171C2.03647 11.3939 1.49353 10.489 1.71678 9.59601ZM10.3377 15.4807C10.9929 16.1272 10.9998 17.1825 10.3532 17.8377L9.10952 19.0978C5.85288 22.3545 5.85287 27.6345 9.10948 30.8912C12.3661 34.1477 17.6462 34.1477 20.9027 30.8912L20.9105 30.8833L22.163 29.6473C22.818 29.0007 23.8734 29.0077 24.5199 29.6628C25.1665 30.318 25.1595 31.3732 24.5044 32.0198L23.2599 33.2482L23.2557 33.2522C18.697 37.8065 11.3095 37.8052 6.75247 33.2482C2.19543 28.691 2.1941 21.3035 6.74847 16.7448L7.98078 15.4962C8.62737 14.841 9.68262 14.8341 10.3377 15.4807ZM31.7169 28.7627C31.94 27.8697 32.8449 27.3267 33.7379 27.55L37.0712 28.3833C37.9642 28.6065 38.5072 29.5115 38.2839 30.4045C38.0607 31.2975 37.1559 31.8403 36.2629 31.6172L32.9295 30.7838C32.0365 30.5605 31.4935 29.6557 31.7169 28.7627ZM28.7629 31.7167C29.6559 31.4933 30.5607 32.0363 30.7839 32.9293L31.6172 36.2627C31.8405 37.1557 31.2975 38.0605 30.4045 38.2838C29.5115 38.507 28.6067 37.9642 28.3835 37.0712L27.5502 33.7378C27.3269 32.8448 27.8699 31.9398 28.7629 31.7167Z\",\n          fill: \"currentColor\",\n          stroke: \"currentColor\",\n          strokeWidth: e\n        }\n      )\n    }\n  );\n}\nfunction Yw({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M7.08337 16.6667H4.16671C3.70647 16.6667 3.33337 16.2936 3.33337 15.8333V5C3.33337 4.53977 3.70647 4.16667 4.16671 4.16667H15.8334C16.2936 4.16667 16.6667 4.53977 16.6667 5V7.08333M6.66671 4.16667V2.5M13.3334 4.16667V2.5M14.1667 12.5002V14.1666L15.4167 15.4168M12.5728 10.3182C14.6985 9.43767 17.1346 10.4473 18.0152 12.573C18.8957 14.6986 17.886 17.1346 15.7603 18.0152C13.6346 18.8957 11.1985 17.886 10.318 15.7603C9.43812 13.6354 10.4471 11.1987 12.5728 10.3182Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Xw() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"68\",\n      height: \"68\",\n      viewBox: \"0 0 68 68\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M23.125 28.8176C23.125 27.1752 24.4564 25.8438 26.0989 25.8438H26.6401C27.871 25.8438 29.0515 25.3548 29.9219 24.4844C30.7923 23.614 31.9728 23.125 33.2037 23.125H34.7963C36.0272 23.125 37.2077 23.614 38.0781 24.4844C38.9485 25.3548 40.129 25.8438 41.3599 25.8438H41.9011C43.5436 25.8438 44.875 27.1752 44.875 28.8176V39.9036C44.875 41.6437 44.875 42.5138 44.5363 43.1785C44.2384 43.7631 43.7631 44.2384 43.1785 44.5363C42.5138 44.875 41.6437 44.875 39.9036 44.875H28.0964C26.3563 44.875 25.4862 44.875 24.8215 44.5363C24.2369 44.2384 23.7616 43.7631 23.4637 43.1785C23.125 42.5138 23.125 41.6437 23.125 39.9036V28.8176Z\",\n            stroke: \"#999999\",\n            strokeWidth: \"2.25\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M38.6607 34.7459C38.6607 37.32 36.574 39.4066 34 39.4066C31.426 39.4066 29.3393 37.32 29.3393 34.7459C29.3393 32.1719 31.426 30.0852 34 30.0852C36.574 30.0852 38.6607 32.1719 38.6607 34.7459Z\",\n            stroke: \"#999999\",\n            strokeWidth: \"2.25\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M2 18V13.2C2 9.27963 2 7.31945 2.76295 5.82207C3.43407 4.50493 4.50493 3.43407 5.82207 2.76296C7.31945 2 9.27963 2 13.2 2H18\",\n            stroke: \"#999999\",\n            strokeWidth: \"3\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M50 2L54.8 2C58.7204 2 60.6806 2 62.1779 2.76296C63.4951 3.43407 64.5659 4.50493 65.237 5.82207C66 7.31945 66 9.27963 66 13.2L66 18\",\n            stroke: \"#999999\",\n            strokeWidth: \"3\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M66 50L66 54.8C66 58.7204 66 60.6806 65.237 62.1779C64.5659 63.4951 63.4951 64.5659 62.1779 65.237C60.6806 66 58.7204 66 54.8 66L50 66\",\n            stroke: \"#999999\",\n            strokeWidth: \"3\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M18 66L13.2 66C9.27963 66 7.31945 66 5.82207 65.237C4.50493 64.5659 3.43407 63.4951 2.76295 62.1779C2 60.6806 2 58.7204 2 54.8L2 50\",\n            stroke: \"#999999\",\n            strokeWidth: \"3\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction Jw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M7.5 3.33301L13.5774 9.41042C13.9028 9.73584 13.9028 10.2635 13.5774 10.5889L7.5 16.6663\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction Qw({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n} = {}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"22\",\n      height: \"18\",\n      viewBox: \"0 0 22 18\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M21 9L11.5 0.75V5.5C3 5.5 0.75 8.75 0.75 17.25C2.25 14.25 3 12.5 11.5 12.5V17.25L21 9Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction e$({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 18 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M16.4744 8.00005L1.52344 8.00005M1.52344 8.00005L7.52344 14.2858M1.52344 8.00005L7.52344 1.71434\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction t$({\n  strokeWidth: e = \"1.33333\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 12 10\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M1.01704 4.99993L10.9844 4.99993M10.9844 4.99993L6.98438 0.809448M10.9844 4.99993L6.98437 9.1904\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction n$({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 17 14\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M1 3.75904L3.88111 0.87793M3.88111 0.87793L6.76222 3.75904M3.88111 0.87793L3.88111 12.4024\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction r$({\n  strokeWidth: e = \"2.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 24 24\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M22.4167 17.4167V1.58333M22.4167 1.58333H6.58333M22.4167 1.58333L2 22\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction i$() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"40\",\n      height: \"40\",\n      viewBox: \"0 0 40 40\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          d: \"M20 1.25C30.3553 1.25 38.75 9.64468 38.75 20C38.75 30.3553 30.3553 38.75 20 38.75C9.64468 38.75 1.25 30.3553 1.25 20C1.25 9.64468 9.64468 1.25 20 1.25ZM15.4392 12.4122C14.8869 12.4122 14.4392 12.8599 14.4392 13.4122C14.4392 13.9644 14.8869 14.4122 15.4392 14.4122H24.1736L12.7051 25.8807C12.3146 26.2713 12.3146 26.9044 12.7051 27.2949C13.0956 27.6855 13.7288 27.6855 14.1193 27.2949L25.5879 15.8263V24.5608C25.5879 25.1131 26.0356 25.5608 26.5879 25.5608C27.1402 25.5608 27.5879 25.1131 27.5879 24.5608V13.4122C27.5879 12.8599 27.1402 12.4122 26.5879 12.4122H15.4392Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}\nfunction o$({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 17 14\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M1 9.52123L3.88111 12.4023M3.88111 12.4023L6.76222 9.52123M3.88111 12.4023L3.88111 0.8779M9.73778 9.52123L12.6189 12.4023M12.6189 12.4023L15.5 9.52123M12.6189 12.4023L12.6189 0.8779\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction a$({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 22 25\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M16.3846 1L21.0009 5.61631M21.0009 5.61631L16.3846 10.2326M21.0009 5.61631H2.53564\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M5.6164 23.0041L1.00009 18.3878M1.00009 18.3878L5.6164 13.7715M1.00009 18.3878L19.4653 18.3878\",\n            stroke: \"currentColor\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction s$({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 17 14\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M1 3.75904L3.88111 0.87793M3.88111 0.87793L6.76222 3.75904M3.88111 0.87793L3.88111 12.4024M9.73778 3.75904L12.6189 0.87793M12.6189 0.87793L15.5 3.75904M12.6189 0.87793L12.6189 12.4024\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction c$() {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"22\",\n      height: \"18\",\n      viewBox: \"0 0 22 18\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M1 8H0V10H1V8ZM21 10H22V8H21V10ZM11 16C7.13401 16 4 12.866 4 9H2C2 13.9706 6.02944 18 11 18V16ZM4 9C4 5.13401 7.13401 2 11 2V0C6.02944 0 2 4.02944 2 9H4ZM14 9C14 10.6569 12.6569 12 11 12V14C13.7614 14 16 11.7614 16 9H14ZM11 12C9.34315 12 8 10.6569 8 9H6C6 11.7614 8.23858 14 11 14V12ZM8 9C8 7.34315 9.34315 6 11 6V4C8.23858 4 6 6.23858 6 9H8ZM11 6C12.6569 6 14 7.34315 14 9H16C16 6.23858 13.7614 4 11 4V6ZM3 8H1V10H3V8ZM11 2C13.9361 2 16.4524 3.80802 17.4915 6.37522L19.3454 5.62478C18.011 2.32832 14.7786 0 11 0V2ZM17.5628 11.4413C16.5714 14.1051 14.0058 16 11 16V18C14.8681 18 18.1639 15.5602 19.4372 12.1389L17.5628 11.4413ZM15 10H21V8H15V10Z\",\n          fill: \"currentColor\"\n        }\n      )\n    }\n  );\n}\nfunction l$() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\n          \"rect\",\n          {\n            x: \"0.75\",\n            y: \"0.75\",\n            width: \"5.5\",\n            height: \"5.5\",\n            rx: \"1.25\",\n            stroke: \"currentColor\",\n            strokeWidth: \"1.5\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"rect\",\n          {\n            x: \"0.75\",\n            y: \"9.75\",\n            width: \"5.5\",\n            height: \"5.5\",\n            rx: \"1.25\",\n            stroke: \"currentColor\",\n            strokeWidth: \"1.5\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"rect\",\n          {\n            x: \"9.75\",\n            y: \"0.75\",\n            width: \"5.5\",\n            height: \"5.5\",\n            rx: \"1.25\",\n            stroke: \"currentColor\",\n            strokeWidth: \"1.5\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          \"rect\",\n          {\n            x: \"9.75\",\n            y: \"9.75\",\n            width: \"5.5\",\n            height: \"5.5\",\n            rx: \"1.25\",\n            stroke: \"currentColor\",\n            strokeWidth: \"1.5\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction d$({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 31 31\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"circle\", { cx: \"15\", cy: \"15\", r: \"15\", fill: \"currentColor\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            className: Za,\n            d: \"M21 18V9M21 9H12M21 9L9.5 20.5\",\n            strokeWidth: e,\n            strokeLinecap: t,\n            strokeLinejoin: n\n          }\n        )\n      ]\n    }\n  );\n}\nfunction f$() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 28 32\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"circle\", { cx: \"14\", cy: \"14.9639\", r: \"14\", fill: \"white\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M19.7144 18.998L19.4944 10.298L10.7944 10.098L10.8144 11.998L16.6144 11.958L8.73438 19.838L9.97438 21.078L17.8344 13.218L17.7944 18.978L19.7144 18.998Z\",\n            fill: \"#179257\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction u$() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 28 32\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"circle\", { cx: \"14\", cy: \"14.9639\", r: \"14\", fill: \"white\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M19.7144 18.998L19.4944 10.298L10.7944 10.098L10.8144 11.998L16.6144 11.958L8.73438 19.838L9.97438 21.078L17.8344 13.218L17.7944 18.978L19.7144 18.998Z\",\n            fill: \"#8B38DE\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction h$() {\n  return /* @__PURE__ */ q(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 28 32\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [\n        /* @__PURE__ */ p(\"circle\", { cx: \"14\", cy: \"14.9639\", r: \"14\", fill: \"white\" }),\n        /* @__PURE__ */ p(\n          \"path\",\n          {\n            d: \"M19.7144 18.998L19.4944 10.298L10.7944 10.098L10.8144 11.998L16.6144 11.958L8.73438 19.838L9.97438 21.078L17.8344 13.218L17.7944 18.978L19.7144 18.998Z\",\n            fill: \"#0048F7\"\n          }\n        )\n      ]\n    }\n  );\n}\nfunction p$({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 16 16\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M2.66699 3.3335V10.0002H13.3337M13.3337 10.0002L10.667 7.3335M13.3337 10.0002L10.667 12.6668\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction g$({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      width: \"100%\",\n      viewBox: \"0 0 17 14\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M1 9.52123L3.88111 12.4023M3.88111 12.4023L6.76222 9.52123M3.88111 12.4023L3.88111 0.8779M9.73778 9.52123\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction m$({\n  strokeWidth: e = \"2\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"28\",\n      height: \"28\",\n      viewBox: \"0 0 28 28\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M11.4485 18.5547L10.5 21.875L9.5515 18.5547C9.30635 17.697 8.84672 16.9159 8.21597 16.2852C7.58522 15.6544 6.80416 15.1948 5.9465 14.9497L2.625 14L5.94533 13.0515C6.803 12.8064 7.58405 12.3467 8.2148 11.716C8.84555 11.0852 9.30518 10.3042 9.55033 9.4465L10.5 6.125L11.4485 9.44533C11.6936 10.303 12.1533 11.0841 12.784 11.7148C13.4148 12.3455 14.1958 12.8052 15.0535 13.0503L18.375 14L15.0547 14.9485C14.197 15.1936 13.4159 15.6533 12.7852 16.284C12.1544 16.9148 11.6948 17.6958 11.4497 18.5535L11.4485 18.5547ZM21.3022 10.1675L21 11.375L20.6978 10.1675C20.5249 9.47519 20.167 8.84289 19.6625 8.3382C19.1581 7.83351 18.5259 7.47541 17.8337 7.30217L16.625 7L17.8337 6.69783C18.5259 6.52459 19.1581 6.16649 19.6625 5.6618C20.167 5.15711 20.5249 4.52481 20.6978 3.8325L21 2.625L21.3022 3.8325C21.4752 4.52496 21.8332 5.15735 22.3379 5.66205C22.8426 6.16675 23.475 6.52478 24.1675 6.69783L25.375 7L24.1675 7.30217C23.475 7.47522 22.8426 7.83325 22.3379 8.33795C21.8332 8.84265 21.4752 9.47504 21.3022 10.1675ZM19.7097 23.9948L19.25 25.375L18.7903 23.9948C18.6615 23.6082 18.4444 23.2569 18.1562 22.9688C17.868 22.6806 17.5168 22.4635 17.1302 22.3347L15.75 21.875L17.1302 21.4153C17.5168 21.2865 17.868 21.0694 18.1562 20.7812C18.4444 20.493 18.6615 20.1418 18.7903 19.7552L19.25 18.375L19.7097 19.7552C19.8385 20.1418 20.0556 20.493 20.3438 20.7812C20.6319 21.0694 20.9832 21.2865 21.3698 21.4153L22.75 21.875L21.3698 22.3347C20.9832 22.4635 20.6319 22.6806 20.3438 22.9688C20.0556 23.2569 19.8385 23.6082 19.7097 23.9948Z\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nfunction v$({\n  strokeWidth: e = \"1.5\",\n  strokeLinecap: t = \"round\",\n  strokeLinejoin: n = \"round\"\n}) {\n  return /* @__PURE__ */ p(\n    \"svg\",\n    {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"100%\",\n      viewBox: \"0 0 20 20\",\n      fill: \"none\",\n      children: /* @__PURE__ */ p(\n        \"path\",\n        {\n          d: \"M7.49989 12.5L12.4998 7.50004M6.24989 8.75003L4.99989 10.0001C3.61923 11.3808 3.61925 13.6193 4.99992 15V15C6.38064 16.3807 8.61924 16.3807 9.99993 14.9999L11.2498 13.7499M13.7498 11.25L14.9999 9.99994C16.3805 8.61924 16.3805 6.3807 14.9998 5.00001V5.00001C13.6191 3.6193 11.3805 3.61931 9.99984 5.00004L8.74987 6.25005\",\n          stroke: \"currentColor\",\n          strokeWidth: e,\n          strokeLinecap: t,\n          strokeLinejoin: n\n        }\n      )\n    }\n  );\n}\nvar C3 = {};\nWy(C3, {\n  AI: () => m$,\n  AnchorLink: () => v$,\n  ApiConnection: () => c$,\n  AppIcon: () => l$,\n  ArrowCircle: () => d$,\n  ArrowCircleTier1: () => f$,\n  ArrowCircleTier2: () => u$,\n  ArrowCircleTier3: () => h$,\n  ArrowCornerDownRight: () => p$,\n  ArrowDown: () => g$,\n  ArrowLeft: () => e$,\n  ArrowRight: () => t$,\n  ArrowUp: () => n$,\n  ArrowUpRight: () => r$,\n  ArrowUpRightCircleFill: () => i$,\n  ArrowsDown: () => o$,\n  ArrowsHorizontal: () => a$,\n  ArrowsUp: () => s$,\n  Bank: () => qw,\n  BitcoinB: () => Zw,\n  BitcoinBOnRoundedSquare: () => Kw,\n  BrokenChainLink: () => Gw,\n  CalendarClock: () => Yw,\n  CameraCapture: () => Xw,\n  CaretRight: () => Jw,\n  CentralArrowShareRight: () => Qw,\n  Checkmark: () => Hw,\n  CheckmarkCircle: () => Uw,\n  CheckmarkCircleTier1: () => Nw,\n  CheckmarkCircleTier2: () => Vw,\n  CheckmarkCircleTier3: () => zw,\n  Chevron: () => Ww,\n  ChevronLeft: () => Fw,\n  ChevronRight: () => jw,\n  CircleCheck: () => Ew,\n  CircleCheckOutline: () => Tw,\n  CirclePlus: () => Bw,\n  Clock: () => Iw,\n  Close: () => Dw,\n  Code: () => Rw,\n  Copy: () => Pw,\n  CreditCard: () => Ow,\n  DeleteIcon: () => ww,\n  Dollar: () => $w,\n  DollarManrope: () => Cw,\n  DollarManropeSmall: () => Sw,\n  DotGrid1x3Horizontal: () => Mw,\n  Download: () => Lw,\n  Envelope: () => Aw,\n  ExclamationPoint: () => kw,\n  Explorer: () => hw,\n  Eye: () => pw,\n  EyeDropper: () => gw,\n  Figma: () => mw,\n  FlutterTwoTone: () => vw,\n  FramedLetterI: () => yw,\n  Gear: () => bw,\n  Github: () => xw,\n  Globus: () => ow,\n  GoTwoTone: () => aw,\n  GraphQLTwoTone: () => sw,\n  HeartOutline: () => cw,\n  Home: () => lw,\n  Info: () => dw,\n  JavaScriptTwoTone: () => fw,\n  JavaTwoTone: () => uw,\n  KotlinTwoTone: () => Gx,\n  LightningOnRoundedSquare: () => Yx,\n  Limit: () => Xx,\n  LinkIcon: () => Jx,\n  LoadingCircleLines: () => Qx,\n  LoadingSpinner: () => ew,\n  Lock: () => tw,\n  Logo: () => iw,\n  LogoBolt: () => Vx,\n  LogoOnCircle: () => zx,\n  Logout: () => Wx,\n  MagicWand: () => Fx,\n  Minus: () => jx,\n  Monitor: () => qx,\n  NodeAdd: () => Zx,\n  NonagonCheckmark: () => Kx,\n  NotEye: () => Ix,\n  Notebook: () => Dx,\n  PaperPlane: () => Rx,\n  Pencil: () => Px,\n  Person: () => Ox,\n  PersonCircle: () => Hx,\n  PiggyBank: () => Ux,\n  Plus: () => Nx,\n  PythonTwoTone: () => Mx,\n  QRCodeIcon: () => Lx,\n  QuestionCircle: () => Ax,\n  QuestionCircleStrong: () => kx,\n  ReactTwoTone: () => _x,\n  ReceiptBill: () => Ex,\n  Recycling: () => Tx,\n  Remove: () => Bx,\n  Restart: () => vx,\n  Roadmap: () => yx,\n  RustTwoTone: () => bx,\n  Satoshi: () => xx,\n  SatoshiRounded: () => wx,\n  Search: () => $x,\n  SecurityKey: () => Cx,\n  Selector: () => Sx,\n  SemiCircleOverlap: () => lx,\n  Share: () => dx,\n  ShieldCheck: () => fx,\n  Sidebar: () => ux,\n  Sort: () => hx,\n  SparklesSoft: () => px,\n  StackedLines: () => gx,\n  SwiftTwoTone: () => mx,\n  TapSingle: () => tx,\n  Team: () => nx,\n  Terminal: () => rx,\n  Trash: () => ix,\n  Uma: () => ox,\n  UmaBridgeLoading: () => ax,\n  UmaBridgeLoadingTransparent: () => sx,\n  Upload: () => cx,\n  WalletSDKIcon: () => Jb,\n  WarningSign: () => Qb,\n  Zap: () => ex\n});\nvar y$ = ve({}, C3);\nfunction Ta(e) {\n  return typeof e == \"string\";\n}\nfunction b$(e, t = 5) {\n  const n = typeof t == \"number\" ? { maxChars: t, ellipsisPosition: \"middle\" } : t;\n  let r = e;\n  if (e.length > n.maxChars)\n    if (typeof n.ellipsisPosition == \"number\")\n      r = `${e.substr(\n        0,\n        n.ellipsisPosition\n      )}...${e.substr(e.length - n.ellipsisPosition, e.length)}`;\n    else if (n.ellipsisPosition === \"start\")\n      r = `...${e.substr(\n        e.length - n.maxChars,\n        e.length\n      )}`;\n    else if (n.ellipsisPosition === \"middle\") {\n      const i = Math.floor(n.maxChars / 2);\n      r = `${e.substr(0, i)}...${e.substr(\n        e.length - i,\n        e.length\n      )}`;\n    } else\n      r = `${e.substr(0, n.maxChars)}...`;\n  return r;\n}\nfunction vt({\n  className: e,\n  name: t,\n  width: n,\n  tutorialStep: r,\n  id: i,\n  mr: o = 0,\n  ml: a = 0,\n  color: s = void 0,\n  verticalAlign: c = \"middle\",\n  iconProps: l\n}) {\n  const d = y$[t], f = parseFloat((n / Qi).toFixed(2)), g = typeof o == \"number\" ? `${parseFloat((o / Qi).toFixed(2))}em` : o, b = typeof a == \"number\" ? `${parseFloat((a / Qi).toFixed(2))}em` : a, x = typeof c == \"string\" ? c : parseFloat((c / Qi).toFixed(2)), m = react__WEBPACK_IMPORTED_MODULE_0__.createElement(d, l, null);\n  return /* @__PURE__ */ p(\n    S3,\n    {\n      id: i,\n      className: e,\n      w: f,\n      mr: g,\n      ml: b,\n      verticalAlign: x,\n      fontColor: s,\n      \"data-tutorial-tip\": r == null ? void 0 : r.toString(),\n      children: m\n    }\n  );\n}\nvar S3 = G.span`\n  pointer-events: none;\n  display: inline-flex;\n  ${({ mr: e, ml: t, w: n }) => `\n    width: ${n}em;\n    /* ensure no shrink in flex containers: */\n    min-width: ${n}em;\n    ${e ? `margin-right: ${e};` : \"\"}\n    ${t ? `margin-left: ${t};` : \"\"}\n  `}\n\n  vertical-align: ${({ verticalAlign: e }) => Ta(e) ? e : `${e}em`};\n\n  ${({ theme: e, fontColor: t }) => {\n  const n = Us(e, t, \"inherit\");\n  return `\n    svg, path {\n      color: ${Us(e, t, \"inherit\")};\n\n      /* \n        Provide a way for an SVG to invert relative to a specified color for\n        dark mode support. Ideally we would just use filters, which works in\n        Chrome even if the color is not specified, but doesn't work at all for\n        SVG paths in Safari:\n        filter: invert(100%); -webkit-filter: invert(100%);\n\n        Instead we'll need a class for fills and a class for strokes. Icons\n        that need inverted colors should use these classes on their paths.\n      */\n\n      .${_w} {\n        fill: ${n ? e.hcNeutralFromBg(n) : \"currentColor\"};\n      }\n      .${Za} {\n        stroke: ${n ? e.hcNeutralFromBg(n) : \"currentColor\"};\n      }\n    }\n  `;\n}}\n`;\nfunction x$({\n  value: e,\n  icon: t,\n  id: n,\n  stopPropagation: r,\n  maxLines: i,\n  elide: o,\n  wordBreakAll: a = !1,\n  tag: s = \"span\",\n  iconSide: c = \"left\",\n  iconColor: l,\n  typography: d,\n  clipboardCallbacks: f\n}) {\n  const g = Cn(), { canWriteToClipboard: b, writeTextToClipboard: x } = Gb(f), m = !!(i && i > 1), C = o ? b$(e, o) : e, S = /* @__PURE__ */ p(\n    w$,\n    {\n      wordBreakAll: a,\n      typography: d,\n      addLineClamp: m,\n      maxLines: i,\n      children: C\n    }\n  ), T = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (J) => {\n      r && J.stopPropagation(), x(e);\n    },\n    [r, e, x]\n  );\n  function N(J) {\n    (J.key === \"Enter\" || J.key === \" \") && (r && J.stopPropagation(), x(e));\n  }\n  const W = {\n    as: s,\n    id: n,\n    addLineClamp: m,\n    maxLines: i\n  }, U = (d == null ? void 0 : d.type) || \"Body\", F = (d == null ? void 0 : d.size) || \"ExtraSmall\", j = Ny(\n    U,\n    F,\n    g\n  ), K = l || (d == null ? void 0 : d.color) || \"inherit\";\n  return b && e ? /* @__PURE__ */ q(\n    n0,\n    Ie(ve({\n      onClick: T,\n      role: \"button\",\n      tabIndex: 0,\n      onKeyDown: N\n    }, W), {\n      children: [\n        t && c === \"left\" ? /* @__PURE__ */ p(\n          vt,\n          {\n            name: \"Copy\",\n            width: j * 0.7,\n            mr: j * 0.3,\n            color: K\n          }\n        ) : null,\n        S,\n        t && c === \"right\" ? /* @__PURE__ */ p(\n          vt,\n          {\n            name: \"Copy\",\n            width: j * 0.7,\n            ml: j * 0.3,\n            color: K\n          }\n        ) : null\n      ]\n    })\n  ) : /* @__PURE__ */ p(n0, Ie(ve({}, W), { children: S }));\n}\nvar n0 = G.span`\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  align-items: center;\n  box-sizing: content-box;\n  cursor: pointer;\n\n  ${({ addLineClamp: e, maxLines: t }) => (\n  /* keep the icon on the same line when addLineClamp: */\n  e || t === 1 ? \"display: inline-flex;\" : \"\"\n)}\n\n  ${({ maxLines: e }) => e === 1 ? \"white-space: nowrap;\" : \"\"}\n`, w$ = G.span`\n  flex: 1;\n  overflow: hidden;\n  text-align: left;\n  text-overflow: ellipsis;\n  word-break: ${({ wordBreakAll: e }) => e ? \"break-all\" : \"normal\"};\n  vertical-align: middle;\n\n  ${({ addLineClamp: e, maxLines: t }) => e && t ? `\n        ${Xb(t).styles}\n        align-self: baseline;\n      ` : \"\"}\n\n  ${({ theme: e, typography: t }) => yn(\n  e,\n  (t == null ? void 0 : t.type) || \"Body\",\n  (t == null ? void 0 : t.size) || \"ExtraSmall\",\n  (t == null ? void 0 : t.color) || \"inherit\"\n)}\n`, $$ = {};\nfunction M3(e) {\n  return Array.isArray(e) ? e : [e];\n}\nvar C$ = typeof window < \"u\" && typeof window.document < \"u\", S$ = typeof process < \"u\" && process.versions != null && process.versions.node != null, M$ = S$ && $$.NODE_ENV === \"test\", L$ = class extends Error {\n  constructor(t, n, r) {\n    super(n);\n    we(this, \"code\");\n    we(this, \"message\");\n    we(this, \"extraInfo\");\n    this.code = t, this.message = n, this.extraInfo = r;\n  }\n}, r0 = L$;\nfunction A$() {\n  return Intl.NumberFormat().resolvedOptions().locale;\n}\nfunction Po(e, t = 0) {\n  const n = Math.pow(10, t), r = e * n * (1 + Number.EPSILON);\n  return Math.round(r) / n;\n}\nfunction ml(e) {\n  return typeof e == \"number\";\n}\nvar k$ = \"USD\", ee = {\n  FUTURE_VALUE: \"FUTURE_VALUE\",\n  BITCOIN: \"BITCOIN\",\n  SATOSHI: \"SATOSHI\",\n  MILLISATOSHI: \"MILLISATOSHI\",\n  NANOBITCOIN: \"NANOBITCOIN\",\n  MICROBITCOIN: \"MICROBITCOIN\",\n  MILLIBITCOIN: \"MILLIBITCOIN\",\n  USD: \"USD\",\n  MXN: \"MXN\",\n  Bitcoin: \"BITCOIN\",\n  Microbitcoin: \"MICROBITCOIN\",\n  Millibitcoin: \"MILLIBITCOIN\",\n  Millisatoshi: \"MILLISATOSHI\",\n  Nanobitcoin: \"NANOBITCOIN\",\n  Satoshi: \"SATOSHI\",\n  Usd: \"USD\",\n  Mxn: \"MXN\"\n}, i0 = {\n  [ee.BITCOIN]: (e, t = 1) => e / t,\n  [ee.MICROBITCOIN]: (e, t = 1) => e / t * 1e6,\n  [ee.MILLIBITCOIN]: (e, t = 1) => e / t * 1e3,\n  [ee.MILLISATOSHI]: (e, t = 1) => e / t * 1e11,\n  [ee.NANOBITCOIN]: (e, t = 1) => e / t * 1e9,\n  [ee.SATOSHI]: (e, t = 1) => e / t * 1e8,\n  /* Converting between two different fiat types is not currently supported */\n  [ee.USD]: (e) => e,\n  [ee.MXN]: (e) => e\n}, o0 = (e, t = 1) => Po(e * t), a0 = (e, t = 1) => Po(e / 1e6 * t), s0 = (e, t = 1) => Po(e / 1e3 * t), c0 = (e, t = 1) => Po(e / 1e11 * t), l0 = (e, t = 1) => Po(e / 1e9 * t), d0 = (e, t = 1) => Po(e / 1e8 * t), _$ = {\n  [ee.BITCOIN]: {\n    [ee.BITCOIN]: (e) => e,\n    [ee.MICROBITCOIN]: (e) => e * 1e6,\n    [ee.MILLIBITCOIN]: (e) => e * 1e3,\n    [ee.MILLISATOSHI]: (e) => e * 1e11,\n    [ee.NANOBITCOIN]: (e) => e * 1e9,\n    [ee.SATOSHI]: (e) => e * 1e8,\n    [ee.USD]: o0,\n    [ee.MXN]: o0\n  },\n  [ee.MICROBITCOIN]: {\n    [ee.BITCOIN]: (e) => e / 1e6,\n    [ee.MICROBITCOIN]: (e) => e,\n    [ee.MILLIBITCOIN]: (e) => e / 1e3,\n    [ee.MILLISATOSHI]: (e) => e * 1e5,\n    [ee.NANOBITCOIN]: (e) => e * 1e3,\n    [ee.SATOSHI]: (e) => e * 100,\n    [ee.USD]: a0,\n    [ee.MXN]: a0\n  },\n  [ee.MILLIBITCOIN]: {\n    [ee.BITCOIN]: (e) => e / 1e3,\n    [ee.MICROBITCOIN]: (e) => e * 1e3,\n    [ee.MILLIBITCOIN]: (e) => e,\n    [ee.MILLISATOSHI]: (e) => e * 1e8,\n    [ee.NANOBITCOIN]: (e) => e * 1e6,\n    [ee.SATOSHI]: (e) => e * 1e5,\n    [ee.USD]: s0,\n    [ee.MXN]: s0\n  },\n  [ee.MILLISATOSHI]: {\n    [ee.BITCOIN]: (e) => e / 1e11,\n    [ee.MICROBITCOIN]: (e) => e / 1e5,\n    [ee.MILLIBITCOIN]: (e) => e / 1e8,\n    [ee.MILLISATOSHI]: (e) => e,\n    [ee.NANOBITCOIN]: (e) => e / 100,\n    [ee.SATOSHI]: (e) => e / 1e3,\n    [ee.USD]: c0,\n    [ee.MXN]: c0\n  },\n  [ee.NANOBITCOIN]: {\n    [ee.BITCOIN]: (e) => e / 1e9,\n    [ee.MICROBITCOIN]: (e) => e / 1e3,\n    [ee.MILLIBITCOIN]: (e) => e / 1e6,\n    [ee.MILLISATOSHI]: (e) => e * 100,\n    [ee.NANOBITCOIN]: (e) => e,\n    [ee.SATOSHI]: (e) => e / 10,\n    [ee.USD]: l0,\n    [ee.MXN]: l0\n  },\n  [ee.SATOSHI]: {\n    [ee.BITCOIN]: (e) => e / 1e8,\n    [ee.MICROBITCOIN]: (e) => e / 100,\n    [ee.MILLIBITCOIN]: (e) => e / 1e5,\n    [ee.MILLISATOSHI]: (e) => e * 1e3,\n    [ee.NANOBITCOIN]: (e) => e * 10,\n    [ee.SATOSHI]: (e) => e,\n    [ee.USD]: d0,\n    [ee.MXN]: d0\n  },\n  [ee.USD]: i0,\n  [ee.MXN]: i0\n};\nfunction E$(e, t, n, r = 1) {\n  if (e === ee.FUTURE_VALUE || t === ee.FUTURE_VALUE)\n    throw new r0(\"CurrencyError\", \"Unsupported CurrencyUnit.\");\n  if (e === t)\n    return n;\n  const i = _$[e][t];\n  if (!i)\n    throw new r0(\n      \"CurrencyError\",\n      `Cannot convert from ${e} to ${t}`\n    );\n  return i(n, r);\n}\nfunction T$(e) {\n  return typeof e == \"object\" && e !== null && \"value\" in e && \"unit\" in e;\n}\nfunction Ss(e) {\n  return typeof e == \"object\" && e !== null && \"original_value\" in e && \"original_unit\" in e;\n}\nfunction B$(e) {\n  return typeof e == \"object\" && e !== null && \"preferred_currency_unit\" in e && \"preferred_currency_value_rounded\" in e;\n}\nfunction I$(e) {\n  return typeof e == \"object\" && e !== null && /* We can expect all SDK CurrencyAmount types to always have these exact properties: */\n  \"originalValue\" in e && \"originalUnit\" in e && \"preferredCurrencyUnit\" in e && \"preferredCurrencyValueRounded\" in e && \"preferredCurrencyValueApprox\" in e;\n}\nfunction cs(e) {\n  return typeof e == \"string\" ? Number(e) : e || 0;\n}\nfunction L3(e) {\n  let t = 0, n;\n  return I$(e) ? (t = e.originalValue, n = e.originalUnit) : B$(e) ? (t = cs(e.preferred_currency_value_rounded), n = e.preferred_currency_unit) : Ss(e) ? (t = cs(e.original_value), n = e.original_unit) : T$(e) && (t = cs(e.value), n = e.unit), {\n    value: cs(t),\n    unit: n || ee.SATOSHI\n  };\n}\nfunction Ms(e, t = 1) {\n  const { value: n, unit: r } = L3(e), i = E$, o = i(r, ee.SATOSHI, n, t), a = i(r, ee.BITCOIN, n, t), s = i(r, ee.MILLISATOSHI, n, t), c = i(r, ee.USD, n, t), l = i(r, ee.MXN, n, t), d = i(r, ee.MICROBITCOIN, n, t), f = i(r, ee.MILLIBITCOIN, n, t), g = i(r, ee.NANOBITCOIN, n, t), b = {\n    [ee.BITCOIN]: a,\n    [ee.SATOSHI]: o,\n    [ee.MILLISATOSHI]: s,\n    [ee.USD]: c,\n    [ee.MXN]: l,\n    [ee.MICROBITCOIN]: d,\n    [ee.MILLIBITCOIN]: f,\n    [ee.NANOBITCOIN]: g,\n    [ee.FUTURE_VALUE]: NaN,\n    formatted: {\n      [ee.BITCOIN]: Jn({\n        value: a,\n        unit: ee.BITCOIN\n      }),\n      [ee.SATOSHI]: Jn({\n        value: o,\n        unit: ee.SATOSHI\n      }),\n      [ee.MILLISATOSHI]: Jn({\n        value: s,\n        unit: ee.MILLISATOSHI\n      }),\n      [ee.MICROBITCOIN]: Jn({\n        value: d,\n        unit: ee.MICROBITCOIN\n      }),\n      [ee.MILLIBITCOIN]: Jn({\n        value: f,\n        unit: ee.MILLIBITCOIN\n      }),\n      [ee.NANOBITCOIN]: Jn({\n        value: g,\n        unit: ee.NANOBITCOIN\n      }),\n      [ee.USD]: Jn({\n        value: c,\n        unit: ee.USD\n      }),\n      [ee.MXN]: Jn({\n        value: l,\n        unit: ee.MXN\n      }),\n      [ee.FUTURE_VALUE]: \"-\"\n    }\n  };\n  return {\n    ...b,\n    btc: a,\n    sats: o,\n    msats: s,\n    isZero: s === 0,\n    isLessThan: (x) => ml(x) ? s < x : (Ss(x) && (x = Ms(x)), s < x.msats),\n    isGreaterThan: (x) => ml(x) ? s > x : (Ss(x) && (x = Ms(x)), s > x.msats),\n    isEqualTo: (x) => ml(x) ? s === x : (Ss(x) && (x = Ms(x)), s === x.msats),\n    formatted: {\n      ...b.formatted,\n      btc: b.formatted[ee.BITCOIN],\n      sats: b.formatted[ee.SATOSHI],\n      msats: b.formatted[ee.MILLISATOSHI]\n    },\n    type: \"CurrencyMap\"\n  };\n}\nvar D$ = (e) => typeof e == \"object\" && e !== null && \"type\" in e && typeof e.type == \"string\" && e.type === \"CurrencyMap\", R$ = {\n  /* undefined indicates to use default precision for unit defined below */\n  precision: void 0,\n  compact: !1,\n  showBtcSymbol: !1\n};\nfunction Jn(e, t) {\n  const { precision: n, compact: r, showBtcSymbol: i } = {\n    ...R$,\n    ...t\n  }, o = L3(e);\n  let { value: a } = o;\n  const { unit: s } = o;\n  s === ee.USD && (a = a / 100);\n  function c(f, g) {\n    let b = f;\n    return n === \"full\" ? b = g : typeof n == \"number\" ? b = n : r && (b = 1), b;\n  }\n  const l = i ? s === ee.BITCOIN ? \"\" : s === ee.SATOSHI ? \"\" : \"\" : \"\", d = A$();\n  switch (s) {\n    case ee.BITCOIN:\n      return `${l}${a.toLocaleString(d, {\n        notation: r ? \"compact\" : void 0,\n        maximumFractionDigits: c(4, 8)\n      })}`;\n    case ee.SATOSHI:\n      return `${l}${a.toLocaleString(d, {\n        notation: r ? \"compact\" : void 0,\n        maximumFractionDigits: c(0, 3)\n      })}`;\n    case ee.MILLISATOSHI:\n    case ee.MICROBITCOIN:\n    case ee.MILLIBITCOIN:\n    case ee.NANOBITCOIN:\n    default:\n      return `${l}${a.toLocaleString(d, {\n        notation: r ? \"compact\" : void 0,\n        maximumFractionDigits: c(0, 0)\n      })}`;\n    case ee.USD:\n      return a.toLocaleString(d, {\n        style: \"currency\",\n        currency: k$,\n        notation: r ? \"compact\" : void 0,\n        maximumFractionDigits: c(2, 2)\n      });\n  }\n}\nfunction P$(e) {\n  return O$(e);\n}\nfunction O$(e) {\n  try {\n    return localStorage.getItem(e) === \"1\";\n  } catch {\n    return !1;\n  }\n}\nvar H$ = typeof global == \"object\" && global && global.Object === Object && global, U$ = H$, N$ = typeof self == \"object\" && self && self.Object === Object && self, V$ = U$ || N$ || Function(\"return this\")(), z$ = V$, W$ = z$.Symbol, Ns = W$;\nNs && Ns.toStringTag;\nNs && Ns.toStringTag;\n/*! Bundled license information:\n\nlodash-es/lodash.js:\n  (**\n   * @license\n   * Lodash (Custom Build) <https://lodash.com/>\n   * Build: `lodash modularize exports=\"es\" -o ./`\n   * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n   * Released under MIT license <https://lodash.com/license>\n   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n   *)\n*/\nvar A3 = {};\nconst F$ = \"elliptic\", j$ = \"6.5.7\", q$ = \"EC cryptography\", Z$ = \"lib/elliptic.js\", K$ = [\n  \"lib\"\n], G$ = {\n  lint: \"eslint lib test\",\n  \"lint:fix\": \"npm run lint -- --fix\",\n  unit: \"istanbul test _mocha --reporter=spec test/index.js\",\n  test: \"npm run lint && npm run unit\",\n  version: \"grunt dist && git add dist/\"\n}, Y$ = {\n  type: \"git\",\n  url: \"git@github.com:indutny/elliptic\"\n}, X$ = [\n  \"EC\",\n  \"Elliptic\",\n  \"curve\",\n  \"Cryptography\"\n], J$ = \"Fedor Indutny <fedor@indutny.com>\", Q$ = \"MIT\", eC = {\n  url: \"https://github.com/indutny/elliptic/issues\"\n}, tC = \"https://github.com/indutny/elliptic\", nC = {\n  brfs: \"^2.0.2\",\n  coveralls: \"^3.1.0\",\n  eslint: \"^7.6.0\",\n  grunt: \"^1.2.1\",\n  \"grunt-browserify\": \"^5.3.0\",\n  \"grunt-cli\": \"^1.3.2\",\n  \"grunt-contrib-connect\": \"^3.0.0\",\n  \"grunt-contrib-copy\": \"^1.0.0\",\n  \"grunt-contrib-uglify\": \"^5.0.0\",\n  \"grunt-mocha-istanbul\": \"^5.0.2\",\n  \"grunt-saucelabs\": \"^9.0.1\",\n  istanbul: \"^0.4.5\",\n  mocha: \"^8.0.1\"\n}, rC = {\n  \"bn.js\": \"^4.11.9\",\n  brorand: \"^1.1.0\",\n  \"hash.js\": \"^1.0.0\",\n  \"hmac-drbg\": \"^1.0.1\",\n  inherits: \"^2.0.4\",\n  \"minimalistic-assert\": \"^1.0.1\",\n  \"minimalistic-crypto-utils\": \"^1.0.1\"\n}, iC = {\n  name: F$,\n  version: j$,\n  description: q$,\n  main: Z$,\n  files: K$,\n  scripts: G$,\n  repository: Y$,\n  keywords: X$,\n  author: J$,\n  license: Q$,\n  bugs: eC,\n  homepage: tC,\n  devDependencies: nC,\n  dependencies: rC\n};\nvar Sn = {}, Nd = { exports: {} };\nconst oC = {}, aC = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: oC\n}, Symbol.toStringTag, { value: \"Module\" })), k3 = /* @__PURE__ */ u9(aC);\nNd.exports;\n(function(e) {\n  (function(t, n) {\n    function r(_, u) {\n      if (!_) throw new Error(u || \"Assertion failed\");\n    }\n    function i(_, u) {\n      _.super_ = u;\n      var v = function() {\n      };\n      v.prototype = u.prototype, _.prototype = new v(), _.prototype.constructor = _;\n    }\n    function o(_, u, v) {\n      if (o.isBN(_))\n        return _;\n      this.negative = 0, this.words = null, this.length = 0, this.red = null, _ !== null && ((u === \"le\" || u === \"be\") && (v = u, u = 10), this._init(_ || 0, u || 10, v || \"be\"));\n    }\n    typeof t == \"object\" ? t.exports = o : n.BN = o, o.BN = o, o.wordSize = 26;\n    var a;\n    try {\n      typeof window < \"u\" && typeof window.Buffer < \"u\" ? a = window.Buffer : a = k3.Buffer;\n    } catch {\n    }\n    o.isBN = function(u) {\n      return u instanceof o ? !0 : u !== null && typeof u == \"object\" && u.constructor.wordSize === o.wordSize && Array.isArray(u.words);\n    }, o.max = function(u, v) {\n      return u.cmp(v) > 0 ? u : v;\n    }, o.min = function(u, v) {\n      return u.cmp(v) < 0 ? u : v;\n    }, o.prototype._init = function(u, v, w) {\n      if (typeof u == \"number\")\n        return this._initNumber(u, v, w);\n      if (typeof u == \"object\")\n        return this._initArray(u, v, w);\n      v === \"hex\" && (v = 16), r(v === (v | 0) && v >= 2 && v <= 36), u = u.toString().replace(/\\s+/g, \"\");\n      var y = 0;\n      u[0] === \"-\" && (y++, this.negative = 1), y < u.length && (v === 16 ? this._parseHex(u, y, w) : (this._parseBase(u, v, y), w === \"le\" && this._initArray(this.toArray(), v, w)));\n    }, o.prototype._initNumber = function(u, v, w) {\n      u < 0 && (this.negative = 1, u = -u), u < 67108864 ? (this.words = [u & 67108863], this.length = 1) : u < 4503599627370496 ? (this.words = [\n        u & 67108863,\n        u / 67108864 & 67108863\n      ], this.length = 2) : (r(u < 9007199254740992), this.words = [\n        u & 67108863,\n        u / 67108864 & 67108863,\n        1\n      ], this.length = 3), w === \"le\" && this._initArray(this.toArray(), v, w);\n    }, o.prototype._initArray = function(u, v, w) {\n      if (r(typeof u.length == \"number\"), u.length <= 0)\n        return this.words = [0], this.length = 1, this;\n      this.length = Math.ceil(u.length / 3), this.words = new Array(this.length);\n      for (var y = 0; y < this.length; y++)\n        this.words[y] = 0;\n      var $, A, H = 0;\n      if (w === \"be\")\n        for (y = u.length - 1, $ = 0; y >= 0; y -= 3)\n          A = u[y] | u[y - 1] << 8 | u[y - 2] << 16, this.words[$] |= A << H & 67108863, this.words[$ + 1] = A >>> 26 - H & 67108863, H += 24, H >= 26 && (H -= 26, $++);\n      else if (w === \"le\")\n        for (y = 0, $ = 0; y < u.length; y += 3)\n          A = u[y] | u[y + 1] << 8 | u[y + 2] << 16, this.words[$] |= A << H & 67108863, this.words[$ + 1] = A >>> 26 - H & 67108863, H += 24, H >= 26 && (H -= 26, $++);\n      return this.strip();\n    };\n    function s(_, u) {\n      var v = _.charCodeAt(u);\n      return v >= 65 && v <= 70 ? v - 55 : v >= 97 && v <= 102 ? v - 87 : v - 48 & 15;\n    }\n    function c(_, u, v) {\n      var w = s(_, v);\n      return v - 1 >= u && (w |= s(_, v - 1) << 4), w;\n    }\n    o.prototype._parseHex = function(u, v, w) {\n      this.length = Math.ceil((u.length - v) / 6), this.words = new Array(this.length);\n      for (var y = 0; y < this.length; y++)\n        this.words[y] = 0;\n      var $ = 0, A = 0, H;\n      if (w === \"be\")\n        for (y = u.length - 1; y >= v; y -= 2)\n          H = c(u, v, y) << $, this.words[A] |= H & 67108863, $ >= 18 ? ($ -= 18, A += 1, this.words[A] |= H >>> 26) : $ += 8;\n      else {\n        var M = u.length - v;\n        for (y = M % 2 === 0 ? v + 1 : v; y < u.length; y += 2)\n          H = c(u, v, y) << $, this.words[A] |= H & 67108863, $ >= 18 ? ($ -= 18, A += 1, this.words[A] |= H >>> 26) : $ += 8;\n      }\n      this.strip();\n    };\n    function l(_, u, v, w) {\n      for (var y = 0, $ = Math.min(_.length, v), A = u; A < $; A++) {\n        var H = _.charCodeAt(A) - 48;\n        y *= w, H >= 49 ? y += H - 49 + 10 : H >= 17 ? y += H - 17 + 10 : y += H;\n      }\n      return y;\n    }\n    o.prototype._parseBase = function(u, v, w) {\n      this.words = [0], this.length = 1;\n      for (var y = 0, $ = 1; $ <= 67108863; $ *= v)\n        y++;\n      y--, $ = $ / v | 0;\n      for (var A = u.length - w, H = A % y, M = Math.min(A, A - H) + w, h = 0, L = w; L < M; L += y)\n        h = l(u, L, L + y, v), this.imuln($), this.words[0] + h < 67108864 ? this.words[0] += h : this._iaddn(h);\n      if (H !== 0) {\n        var Y = 1;\n        for (h = l(u, L, u.length, v), L = 0; L < H; L++)\n          Y *= v;\n        this.imuln(Y), this.words[0] + h < 67108864 ? this.words[0] += h : this._iaddn(h);\n      }\n      this.strip();\n    }, o.prototype.copy = function(u) {\n      u.words = new Array(this.length);\n      for (var v = 0; v < this.length; v++)\n        u.words[v] = this.words[v];\n      u.length = this.length, u.negative = this.negative, u.red = this.red;\n    }, o.prototype.clone = function() {\n      var u = new o(null);\n      return this.copy(u), u;\n    }, o.prototype._expand = function(u) {\n      for (; this.length < u; )\n        this.words[this.length++] = 0;\n      return this;\n    }, o.prototype.strip = function() {\n      for (; this.length > 1 && this.words[this.length - 1] === 0; )\n        this.length--;\n      return this._normSign();\n    }, o.prototype._normSign = function() {\n      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;\n    }, o.prototype.inspect = function() {\n      return (this.red ? \"<BN-R: \" : \"<BN: \") + this.toString(16) + \">\";\n    };\n    var d = [\n      \"\",\n      \"0\",\n      \"00\",\n      \"000\",\n      \"0000\",\n      \"00000\",\n      \"000000\",\n      \"0000000\",\n      \"00000000\",\n      \"000000000\",\n      \"0000000000\",\n      \"00000000000\",\n      \"000000000000\",\n      \"0000000000000\",\n      \"00000000000000\",\n      \"000000000000000\",\n      \"0000000000000000\",\n      \"00000000000000000\",\n      \"000000000000000000\",\n      \"0000000000000000000\",\n      \"00000000000000000000\",\n      \"000000000000000000000\",\n      \"0000000000000000000000\",\n      \"00000000000000000000000\",\n      \"000000000000000000000000\",\n      \"0000000000000000000000000\"\n    ], f = [\n      0,\n      0,\n      25,\n      16,\n      12,\n      11,\n      10,\n      9,\n      8,\n      8,\n      7,\n      7,\n      7,\n      7,\n      6,\n      6,\n      6,\n      6,\n      6,\n      6,\n      6,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5,\n      5\n    ], g = [\n      0,\n      0,\n      33554432,\n      43046721,\n      16777216,\n      48828125,\n      60466176,\n      40353607,\n      16777216,\n      43046721,\n      1e7,\n      19487171,\n      35831808,\n      62748517,\n      7529536,\n      11390625,\n      16777216,\n      24137569,\n      34012224,\n      47045881,\n      64e6,\n      4084101,\n      5153632,\n      6436343,\n      7962624,\n      9765625,\n      11881376,\n      14348907,\n      17210368,\n      20511149,\n      243e5,\n      28629151,\n      33554432,\n      39135393,\n      45435424,\n      52521875,\n      60466176\n    ];\n    o.prototype.toString = function(u, v) {\n      u = u || 10, v = v | 0 || 1;\n      var w;\n      if (u === 16 || u === \"hex\") {\n        w = \"\";\n        for (var y = 0, $ = 0, A = 0; A < this.length; A++) {\n          var H = this.words[A], M = ((H << y | $) & 16777215).toString(16);\n          $ = H >>> 24 - y & 16777215, $ !== 0 || A !== this.length - 1 ? w = d[6 - M.length] + M + w : w = M + w, y += 2, y >= 26 && (y -= 26, A--);\n        }\n        for ($ !== 0 && (w = $.toString(16) + w); w.length % v !== 0; )\n          w = \"0\" + w;\n        return this.negative !== 0 && (w = \"-\" + w), w;\n      }\n      if (u === (u | 0) && u >= 2 && u <= 36) {\n        var h = f[u], L = g[u];\n        w = \"\";\n        var Y = this.clone();\n        for (Y.negative = 0; !Y.isZero(); ) {\n          var ne = Y.modn(L).toString(u);\n          Y = Y.idivn(L), Y.isZero() ? w = ne + w : w = d[h - ne.length] + ne + w;\n        }\n        for (this.isZero() && (w = \"0\" + w); w.length % v !== 0; )\n          w = \"0\" + w;\n        return this.negative !== 0 && (w = \"-\" + w), w;\n      }\n      r(!1, \"Base should be between 2 and 36\");\n    }, o.prototype.toNumber = function() {\n      var u = this.words[0];\n      return this.length === 2 ? u += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? u += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(!1, \"Number can only safely store up to 53 bits\"), this.negative !== 0 ? -u : u;\n    }, o.prototype.toJSON = function() {\n      return this.toString(16);\n    }, o.prototype.toBuffer = function(u, v) {\n      return r(typeof a < \"u\"), this.toArrayLike(a, u, v);\n    }, o.prototype.toArray = function(u, v) {\n      return this.toArrayLike(Array, u, v);\n    }, o.prototype.toArrayLike = function(u, v, w) {\n      var y = this.byteLength(), $ = w || Math.max(1, y);\n      r(y <= $, \"byte array longer than desired length\"), r($ > 0, \"Requested array length <= 0\"), this.strip();\n      var A = v === \"le\", H = new u($), M, h, L = this.clone();\n      if (A) {\n        for (h = 0; !L.isZero(); h++)\n          M = L.andln(255), L.iushrn(8), H[h] = M;\n        for (; h < $; h++)\n          H[h] = 0;\n      } else {\n        for (h = 0; h < $ - y; h++)\n          H[h] = 0;\n        for (h = 0; !L.isZero(); h++)\n          M = L.andln(255), L.iushrn(8), H[$ - h - 1] = M;\n      }\n      return H;\n    }, Math.clz32 ? o.prototype._countBits = function(u) {\n      return 32 - Math.clz32(u);\n    } : o.prototype._countBits = function(u) {\n      var v = u, w = 0;\n      return v >= 4096 && (w += 13, v >>>= 13), v >= 64 && (w += 7, v >>>= 7), v >= 8 && (w += 4, v >>>= 4), v >= 2 && (w += 2, v >>>= 2), w + v;\n    }, o.prototype._zeroBits = function(u) {\n      if (u === 0) return 26;\n      var v = u, w = 0;\n      return v & 8191 || (w += 13, v >>>= 13), v & 127 || (w += 7, v >>>= 7), v & 15 || (w += 4, v >>>= 4), v & 3 || (w += 2, v >>>= 2), v & 1 || w++, w;\n    }, o.prototype.bitLength = function() {\n      var u = this.words[this.length - 1], v = this._countBits(u);\n      return (this.length - 1) * 26 + v;\n    };\n    function b(_) {\n      for (var u = new Array(_.bitLength()), v = 0; v < u.length; v++) {\n        var w = v / 26 | 0, y = v % 26;\n        u[v] = (_.words[w] & 1 << y) >>> y;\n      }\n      return u;\n    }\n    o.prototype.zeroBits = function() {\n      if (this.isZero()) return 0;\n      for (var u = 0, v = 0; v < this.length; v++) {\n        var w = this._zeroBits(this.words[v]);\n        if (u += w, w !== 26) break;\n      }\n      return u;\n    }, o.prototype.byteLength = function() {\n      return Math.ceil(this.bitLength() / 8);\n    }, o.prototype.toTwos = function(u) {\n      return this.negative !== 0 ? this.abs().inotn(u).iaddn(1) : this.clone();\n    }, o.prototype.fromTwos = function(u) {\n      return this.testn(u - 1) ? this.notn(u).iaddn(1).ineg() : this.clone();\n    }, o.prototype.isNeg = function() {\n      return this.negative !== 0;\n    }, o.prototype.neg = function() {\n      return this.clone().ineg();\n    }, o.prototype.ineg = function() {\n      return this.isZero() || (this.negative ^= 1), this;\n    }, o.prototype.iuor = function(u) {\n      for (; this.length < u.length; )\n        this.words[this.length++] = 0;\n      for (var v = 0; v < u.length; v++)\n        this.words[v] = this.words[v] | u.words[v];\n      return this.strip();\n    }, o.prototype.ior = function(u) {\n      return r((this.negative | u.negative) === 0), this.iuor(u);\n    }, o.prototype.or = function(u) {\n      return this.length > u.length ? this.clone().ior(u) : u.clone().ior(this);\n    }, o.prototype.uor = function(u) {\n      return this.length > u.length ? this.clone().iuor(u) : u.clone().iuor(this);\n    }, o.prototype.iuand = function(u) {\n      var v;\n      this.length > u.length ? v = u : v = this;\n      for (var w = 0; w < v.length; w++)\n        this.words[w] = this.words[w] & u.words[w];\n      return this.length = v.length, this.strip();\n    }, o.prototype.iand = function(u) {\n      return r((this.negative | u.negative) === 0), this.iuand(u);\n    }, o.prototype.and = function(u) {\n      return this.length > u.length ? this.clone().iand(u) : u.clone().iand(this);\n    }, o.prototype.uand = function(u) {\n      return this.length > u.length ? this.clone().iuand(u) : u.clone().iuand(this);\n    }, o.prototype.iuxor = function(u) {\n      var v, w;\n      this.length > u.length ? (v = this, w = u) : (v = u, w = this);\n      for (var y = 0; y < w.length; y++)\n        this.words[y] = v.words[y] ^ w.words[y];\n      if (this !== v)\n        for (; y < v.length; y++)\n          this.words[y] = v.words[y];\n      return this.length = v.length, this.strip();\n    }, o.prototype.ixor = function(u) {\n      return r((this.negative | u.negative) === 0), this.iuxor(u);\n    }, o.prototype.xor = function(u) {\n      return this.length > u.length ? this.clone().ixor(u) : u.clone().ixor(this);\n    }, o.prototype.uxor = function(u) {\n      return this.length > u.length ? this.clone().iuxor(u) : u.clone().iuxor(this);\n    }, o.prototype.inotn = function(u) {\n      r(typeof u == \"number\" && u >= 0);\n      var v = Math.ceil(u / 26) | 0, w = u % 26;\n      this._expand(v), w > 0 && v--;\n      for (var y = 0; y < v; y++)\n        this.words[y] = ~this.words[y] & 67108863;\n      return w > 0 && (this.words[y] = ~this.words[y] & 67108863 >> 26 - w), this.strip();\n    }, o.prototype.notn = function(u) {\n      return this.clone().inotn(u);\n    }, o.prototype.setn = function(u, v) {\n      r(typeof u == \"number\" && u >= 0);\n      var w = u / 26 | 0, y = u % 26;\n      return this._expand(w + 1), v ? this.words[w] = this.words[w] | 1 << y : this.words[w] = this.words[w] & ~(1 << y), this.strip();\n    }, o.prototype.iadd = function(u) {\n      var v;\n      if (this.negative !== 0 && u.negative === 0)\n        return this.negative = 0, v = this.isub(u), this.negative ^= 1, this._normSign();\n      if (this.negative === 0 && u.negative !== 0)\n        return u.negative = 0, v = this.isub(u), u.negative = 1, v._normSign();\n      var w, y;\n      this.length > u.length ? (w = this, y = u) : (w = u, y = this);\n      for (var $ = 0, A = 0; A < y.length; A++)\n        v = (w.words[A] | 0) + (y.words[A] | 0) + $, this.words[A] = v & 67108863, $ = v >>> 26;\n      for (; $ !== 0 && A < w.length; A++)\n        v = (w.words[A] | 0) + $, this.words[A] = v & 67108863, $ = v >>> 26;\n      if (this.length = w.length, $ !== 0)\n        this.words[this.length] = $, this.length++;\n      else if (w !== this)\n        for (; A < w.length; A++)\n          this.words[A] = w.words[A];\n      return this;\n    }, o.prototype.add = function(u) {\n      var v;\n      return u.negative !== 0 && this.negative === 0 ? (u.negative = 0, v = this.sub(u), u.negative ^= 1, v) : u.negative === 0 && this.negative !== 0 ? (this.negative = 0, v = u.sub(this), this.negative = 1, v) : this.length > u.length ? this.clone().iadd(u) : u.clone().iadd(this);\n    }, o.prototype.isub = function(u) {\n      if (u.negative !== 0) {\n        u.negative = 0;\n        var v = this.iadd(u);\n        return u.negative = 1, v._normSign();\n      } else if (this.negative !== 0)\n        return this.negative = 0, this.iadd(u), this.negative = 1, this._normSign();\n      var w = this.cmp(u);\n      if (w === 0)\n        return this.negative = 0, this.length = 1, this.words[0] = 0, this;\n      var y, $;\n      w > 0 ? (y = this, $ = u) : (y = u, $ = this);\n      for (var A = 0, H = 0; H < $.length; H++)\n        v = (y.words[H] | 0) - ($.words[H] | 0) + A, A = v >> 26, this.words[H] = v & 67108863;\n      for (; A !== 0 && H < y.length; H++)\n        v = (y.words[H] | 0) + A, A = v >> 26, this.words[H] = v & 67108863;\n      if (A === 0 && H < y.length && y !== this)\n        for (; H < y.length; H++)\n          this.words[H] = y.words[H];\n      return this.length = Math.max(this.length, H), y !== this && (this.negative = 1), this.strip();\n    }, o.prototype.sub = function(u) {\n      return this.clone().isub(u);\n    };\n    function x(_, u, v) {\n      v.negative = u.negative ^ _.negative;\n      var w = _.length + u.length | 0;\n      v.length = w, w = w - 1 | 0;\n      var y = _.words[0] | 0, $ = u.words[0] | 0, A = y * $, H = A & 67108863, M = A / 67108864 | 0;\n      v.words[0] = H;\n      for (var h = 1; h < w; h++) {\n        for (var L = M >>> 26, Y = M & 67108863, ne = Math.min(h, u.length - 1), ie = Math.max(0, h - _.length + 1); ie <= ne; ie++) {\n          var se = h - ie | 0;\n          y = _.words[se] | 0, $ = u.words[ie] | 0, A = y * $ + Y, L += A / 67108864 | 0, Y = A & 67108863;\n        }\n        v.words[h] = Y | 0, M = L | 0;\n      }\n      return M !== 0 ? v.words[h] = M | 0 : v.length--, v.strip();\n    }\n    var m = function(u, v, w) {\n      var y = u.words, $ = v.words, A = w.words, H = 0, M, h, L, Y = y[0] | 0, ne = Y & 8191, ie = Y >>> 13, se = y[1] | 0, ye = se & 8191, ge = se >>> 13, _e = y[2] | 0, me = _e & 8191, de = _e >>> 13, Ge = y[3] | 0, Me = Ge & 8191, te = Ge >>> 13, Lt = y[4] | 0, Se = Lt & 8191, De = Lt >>> 13, Et = y[5] | 0, be = Et & 8191, pe = Et >>> 13, At = y[6] | 0, qe = At & 8191, Re = At >>> 13, Qt = y[7] | 0, yt = Qt & 8191, at = Qt >>> 13, cn = y[8] | 0, st = cn & 8191, We = cn >>> 13, On = y[9] | 0, ct = On & 8191, tt = On >>> 13, Mn = $[0] | 0, Fe = Mn & 8191, ke = Mn >>> 13, $r = $[1] | 0, mt = $r & 8191, lt = $r >>> 13, Gn = $[2] | 0, dt = Gn & 8191, Xe = Gn >>> 13, Ln = $[3] | 0, Ze = Ln & 8191, ft = Ln >>> 13, $t = $[4] | 0, He = $t & 8191, ce = $t >>> 13, Te = $[5] | 0, Ue = Te & 8191, Je = Te >>> 13, ae = $[6] | 0, le = ae & 8191, ue = ae >>> 13, Ct = $[7] | 0, Be = Ct & 8191, Ke = Ct >>> 13, an = $[8] | 0, Pe = an & 8191, ze = an >>> 13, V = $[9] | 0, Q = V & 8191, oe = V >>> 13;\n      w.negative = u.negative ^ v.negative, w.length = 19, M = Math.imul(ne, Fe), h = Math.imul(ne, ke), h = h + Math.imul(ie, Fe) | 0, L = Math.imul(ie, ke);\n      var xe = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (xe >>> 26) | 0, xe &= 67108863, M = Math.imul(ye, Fe), h = Math.imul(ye, ke), h = h + Math.imul(ge, Fe) | 0, L = Math.imul(ge, ke), M = M + Math.imul(ne, mt) | 0, h = h + Math.imul(ne, lt) | 0, h = h + Math.imul(ie, mt) | 0, L = L + Math.imul(ie, lt) | 0;\n      var Oe = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (Oe >>> 26) | 0, Oe &= 67108863, M = Math.imul(me, Fe), h = Math.imul(me, ke), h = h + Math.imul(de, Fe) | 0, L = Math.imul(de, ke), M = M + Math.imul(ye, mt) | 0, h = h + Math.imul(ye, lt) | 0, h = h + Math.imul(ge, mt) | 0, L = L + Math.imul(ge, lt) | 0, M = M + Math.imul(ne, dt) | 0, h = h + Math.imul(ne, Xe) | 0, h = h + Math.imul(ie, dt) | 0, L = L + Math.imul(ie, Xe) | 0;\n      var je = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, M = Math.imul(Me, Fe), h = Math.imul(Me, ke), h = h + Math.imul(te, Fe) | 0, L = Math.imul(te, ke), M = M + Math.imul(me, mt) | 0, h = h + Math.imul(me, lt) | 0, h = h + Math.imul(de, mt) | 0, L = L + Math.imul(de, lt) | 0, M = M + Math.imul(ye, dt) | 0, h = h + Math.imul(ye, Xe) | 0, h = h + Math.imul(ge, dt) | 0, L = L + Math.imul(ge, Xe) | 0, M = M + Math.imul(ne, Ze) | 0, h = h + Math.imul(ne, ft) | 0, h = h + Math.imul(ie, Ze) | 0, L = L + Math.imul(ie, ft) | 0;\n      var Ee = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (Ee >>> 26) | 0, Ee &= 67108863, M = Math.imul(Se, Fe), h = Math.imul(Se, ke), h = h + Math.imul(De, Fe) | 0, L = Math.imul(De, ke), M = M + Math.imul(Me, mt) | 0, h = h + Math.imul(Me, lt) | 0, h = h + Math.imul(te, mt) | 0, L = L + Math.imul(te, lt) | 0, M = M + Math.imul(me, dt) | 0, h = h + Math.imul(me, Xe) | 0, h = h + Math.imul(de, dt) | 0, L = L + Math.imul(de, Xe) | 0, M = M + Math.imul(ye, Ze) | 0, h = h + Math.imul(ye, ft) | 0, h = h + Math.imul(ge, Ze) | 0, L = L + Math.imul(ge, ft) | 0, M = M + Math.imul(ne, He) | 0, h = h + Math.imul(ne, ce) | 0, h = h + Math.imul(ie, He) | 0, L = L + Math.imul(ie, ce) | 0;\n      var fe = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (fe >>> 26) | 0, fe &= 67108863, M = Math.imul(be, Fe), h = Math.imul(be, ke), h = h + Math.imul(pe, Fe) | 0, L = Math.imul(pe, ke), M = M + Math.imul(Se, mt) | 0, h = h + Math.imul(Se, lt) | 0, h = h + Math.imul(De, mt) | 0, L = L + Math.imul(De, lt) | 0, M = M + Math.imul(Me, dt) | 0, h = h + Math.imul(Me, Xe) | 0, h = h + Math.imul(te, dt) | 0, L = L + Math.imul(te, Xe) | 0, M = M + Math.imul(me, Ze) | 0, h = h + Math.imul(me, ft) | 0, h = h + Math.imul(de, Ze) | 0, L = L + Math.imul(de, ft) | 0, M = M + Math.imul(ye, He) | 0, h = h + Math.imul(ye, ce) | 0, h = h + Math.imul(ge, He) | 0, L = L + Math.imul(ge, ce) | 0, M = M + Math.imul(ne, Ue) | 0, h = h + Math.imul(ne, Je) | 0, h = h + Math.imul(ie, Ue) | 0, L = L + Math.imul(ie, Je) | 0;\n      var ut = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (ut >>> 26) | 0, ut &= 67108863, M = Math.imul(qe, Fe), h = Math.imul(qe, ke), h = h + Math.imul(Re, Fe) | 0, L = Math.imul(Re, ke), M = M + Math.imul(be, mt) | 0, h = h + Math.imul(be, lt) | 0, h = h + Math.imul(pe, mt) | 0, L = L + Math.imul(pe, lt) | 0, M = M + Math.imul(Se, dt) | 0, h = h + Math.imul(Se, Xe) | 0, h = h + Math.imul(De, dt) | 0, L = L + Math.imul(De, Xe) | 0, M = M + Math.imul(Me, Ze) | 0, h = h + Math.imul(Me, ft) | 0, h = h + Math.imul(te, Ze) | 0, L = L + Math.imul(te, ft) | 0, M = M + Math.imul(me, He) | 0, h = h + Math.imul(me, ce) | 0, h = h + Math.imul(de, He) | 0, L = L + Math.imul(de, ce) | 0, M = M + Math.imul(ye, Ue) | 0, h = h + Math.imul(ye, Je) | 0, h = h + Math.imul(ge, Ue) | 0, L = L + Math.imul(ge, Je) | 0, M = M + Math.imul(ne, le) | 0, h = h + Math.imul(ne, ue) | 0, h = h + Math.imul(ie, le) | 0, L = L + Math.imul(ie, ue) | 0;\n      var ht = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (ht >>> 26) | 0, ht &= 67108863, M = Math.imul(yt, Fe), h = Math.imul(yt, ke), h = h + Math.imul(at, Fe) | 0, L = Math.imul(at, ke), M = M + Math.imul(qe, mt) | 0, h = h + Math.imul(qe, lt) | 0, h = h + Math.imul(Re, mt) | 0, L = L + Math.imul(Re, lt) | 0, M = M + Math.imul(be, dt) | 0, h = h + Math.imul(be, Xe) | 0, h = h + Math.imul(pe, dt) | 0, L = L + Math.imul(pe, Xe) | 0, M = M + Math.imul(Se, Ze) | 0, h = h + Math.imul(Se, ft) | 0, h = h + Math.imul(De, Ze) | 0, L = L + Math.imul(De, ft) | 0, M = M + Math.imul(Me, He) | 0, h = h + Math.imul(Me, ce) | 0, h = h + Math.imul(te, He) | 0, L = L + Math.imul(te, ce) | 0, M = M + Math.imul(me, Ue) | 0, h = h + Math.imul(me, Je) | 0, h = h + Math.imul(de, Ue) | 0, L = L + Math.imul(de, Je) | 0, M = M + Math.imul(ye, le) | 0, h = h + Math.imul(ye, ue) | 0, h = h + Math.imul(ge, le) | 0, L = L + Math.imul(ge, ue) | 0, M = M + Math.imul(ne, Be) | 0, h = h + Math.imul(ne, Ke) | 0, h = h + Math.imul(ie, Be) | 0, L = L + Math.imul(ie, Ke) | 0;\n      var nt = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (nt >>> 26) | 0, nt &= 67108863, M = Math.imul(st, Fe), h = Math.imul(st, ke), h = h + Math.imul(We, Fe) | 0, L = Math.imul(We, ke), M = M + Math.imul(yt, mt) | 0, h = h + Math.imul(yt, lt) | 0, h = h + Math.imul(at, mt) | 0, L = L + Math.imul(at, lt) | 0, M = M + Math.imul(qe, dt) | 0, h = h + Math.imul(qe, Xe) | 0, h = h + Math.imul(Re, dt) | 0, L = L + Math.imul(Re, Xe) | 0, M = M + Math.imul(be, Ze) | 0, h = h + Math.imul(be, ft) | 0, h = h + Math.imul(pe, Ze) | 0, L = L + Math.imul(pe, ft) | 0, M = M + Math.imul(Se, He) | 0, h = h + Math.imul(Se, ce) | 0, h = h + Math.imul(De, He) | 0, L = L + Math.imul(De, ce) | 0, M = M + Math.imul(Me, Ue) | 0, h = h + Math.imul(Me, Je) | 0, h = h + Math.imul(te, Ue) | 0, L = L + Math.imul(te, Je) | 0, M = M + Math.imul(me, le) | 0, h = h + Math.imul(me, ue) | 0, h = h + Math.imul(de, le) | 0, L = L + Math.imul(de, ue) | 0, M = M + Math.imul(ye, Be) | 0, h = h + Math.imul(ye, Ke) | 0, h = h + Math.imul(ge, Be) | 0, L = L + Math.imul(ge, Ke) | 0, M = M + Math.imul(ne, Pe) | 0, h = h + Math.imul(ne, ze) | 0, h = h + Math.imul(ie, Pe) | 0, L = L + Math.imul(ie, ze) | 0;\n      var Ut = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, M = Math.imul(ct, Fe), h = Math.imul(ct, ke), h = h + Math.imul(tt, Fe) | 0, L = Math.imul(tt, ke), M = M + Math.imul(st, mt) | 0, h = h + Math.imul(st, lt) | 0, h = h + Math.imul(We, mt) | 0, L = L + Math.imul(We, lt) | 0, M = M + Math.imul(yt, dt) | 0, h = h + Math.imul(yt, Xe) | 0, h = h + Math.imul(at, dt) | 0, L = L + Math.imul(at, Xe) | 0, M = M + Math.imul(qe, Ze) | 0, h = h + Math.imul(qe, ft) | 0, h = h + Math.imul(Re, Ze) | 0, L = L + Math.imul(Re, ft) | 0, M = M + Math.imul(be, He) | 0, h = h + Math.imul(be, ce) | 0, h = h + Math.imul(pe, He) | 0, L = L + Math.imul(pe, ce) | 0, M = M + Math.imul(Se, Ue) | 0, h = h + Math.imul(Se, Je) | 0, h = h + Math.imul(De, Ue) | 0, L = L + Math.imul(De, Je) | 0, M = M + Math.imul(Me, le) | 0, h = h + Math.imul(Me, ue) | 0, h = h + Math.imul(te, le) | 0, L = L + Math.imul(te, ue) | 0, M = M + Math.imul(me, Be) | 0, h = h + Math.imul(me, Ke) | 0, h = h + Math.imul(de, Be) | 0, L = L + Math.imul(de, Ke) | 0, M = M + Math.imul(ye, Pe) | 0, h = h + Math.imul(ye, ze) | 0, h = h + Math.imul(ge, Pe) | 0, L = L + Math.imul(ge, ze) | 0, M = M + Math.imul(ne, Q) | 0, h = h + Math.imul(ne, oe) | 0, h = h + Math.imul(ie, Q) | 0, L = L + Math.imul(ie, oe) | 0;\n      var ln = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (ln >>> 26) | 0, ln &= 67108863, M = Math.imul(ct, mt), h = Math.imul(ct, lt), h = h + Math.imul(tt, mt) | 0, L = Math.imul(tt, lt), M = M + Math.imul(st, dt) | 0, h = h + Math.imul(st, Xe) | 0, h = h + Math.imul(We, dt) | 0, L = L + Math.imul(We, Xe) | 0, M = M + Math.imul(yt, Ze) | 0, h = h + Math.imul(yt, ft) | 0, h = h + Math.imul(at, Ze) | 0, L = L + Math.imul(at, ft) | 0, M = M + Math.imul(qe, He) | 0, h = h + Math.imul(qe, ce) | 0, h = h + Math.imul(Re, He) | 0, L = L + Math.imul(Re, ce) | 0, M = M + Math.imul(be, Ue) | 0, h = h + Math.imul(be, Je) | 0, h = h + Math.imul(pe, Ue) | 0, L = L + Math.imul(pe, Je) | 0, M = M + Math.imul(Se, le) | 0, h = h + Math.imul(Se, ue) | 0, h = h + Math.imul(De, le) | 0, L = L + Math.imul(De, ue) | 0, M = M + Math.imul(Me, Be) | 0, h = h + Math.imul(Me, Ke) | 0, h = h + Math.imul(te, Be) | 0, L = L + Math.imul(te, Ke) | 0, M = M + Math.imul(me, Pe) | 0, h = h + Math.imul(me, ze) | 0, h = h + Math.imul(de, Pe) | 0, L = L + Math.imul(de, ze) | 0, M = M + Math.imul(ye, Q) | 0, h = h + Math.imul(ye, oe) | 0, h = h + Math.imul(ge, Q) | 0, L = L + Math.imul(ge, oe) | 0;\n      var Hn = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (Hn >>> 26) | 0, Hn &= 67108863, M = Math.imul(ct, dt), h = Math.imul(ct, Xe), h = h + Math.imul(tt, dt) | 0, L = Math.imul(tt, Xe), M = M + Math.imul(st, Ze) | 0, h = h + Math.imul(st, ft) | 0, h = h + Math.imul(We, Ze) | 0, L = L + Math.imul(We, ft) | 0, M = M + Math.imul(yt, He) | 0, h = h + Math.imul(yt, ce) | 0, h = h + Math.imul(at, He) | 0, L = L + Math.imul(at, ce) | 0, M = M + Math.imul(qe, Ue) | 0, h = h + Math.imul(qe, Je) | 0, h = h + Math.imul(Re, Ue) | 0, L = L + Math.imul(Re, Je) | 0, M = M + Math.imul(be, le) | 0, h = h + Math.imul(be, ue) | 0, h = h + Math.imul(pe, le) | 0, L = L + Math.imul(pe, ue) | 0, M = M + Math.imul(Se, Be) | 0, h = h + Math.imul(Se, Ke) | 0, h = h + Math.imul(De, Be) | 0, L = L + Math.imul(De, Ke) | 0, M = M + Math.imul(Me, Pe) | 0, h = h + Math.imul(Me, ze) | 0, h = h + Math.imul(te, Pe) | 0, L = L + Math.imul(te, ze) | 0, M = M + Math.imul(me, Q) | 0, h = h + Math.imul(me, oe) | 0, h = h + Math.imul(de, Q) | 0, L = L + Math.imul(de, oe) | 0;\n      var Nt = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, M = Math.imul(ct, Ze), h = Math.imul(ct, ft), h = h + Math.imul(tt, Ze) | 0, L = Math.imul(tt, ft), M = M + Math.imul(st, He) | 0, h = h + Math.imul(st, ce) | 0, h = h + Math.imul(We, He) | 0, L = L + Math.imul(We, ce) | 0, M = M + Math.imul(yt, Ue) | 0, h = h + Math.imul(yt, Je) | 0, h = h + Math.imul(at, Ue) | 0, L = L + Math.imul(at, Je) | 0, M = M + Math.imul(qe, le) | 0, h = h + Math.imul(qe, ue) | 0, h = h + Math.imul(Re, le) | 0, L = L + Math.imul(Re, ue) | 0, M = M + Math.imul(be, Be) | 0, h = h + Math.imul(be, Ke) | 0, h = h + Math.imul(pe, Be) | 0, L = L + Math.imul(pe, Ke) | 0, M = M + Math.imul(Se, Pe) | 0, h = h + Math.imul(Se, ze) | 0, h = h + Math.imul(De, Pe) | 0, L = L + Math.imul(De, ze) | 0, M = M + Math.imul(Me, Q) | 0, h = h + Math.imul(Me, oe) | 0, h = h + Math.imul(te, Q) | 0, L = L + Math.imul(te, oe) | 0;\n      var yi = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (yi >>> 26) | 0, yi &= 67108863, M = Math.imul(ct, He), h = Math.imul(ct, ce), h = h + Math.imul(tt, He) | 0, L = Math.imul(tt, ce), M = M + Math.imul(st, Ue) | 0, h = h + Math.imul(st, Je) | 0, h = h + Math.imul(We, Ue) | 0, L = L + Math.imul(We, Je) | 0, M = M + Math.imul(yt, le) | 0, h = h + Math.imul(yt, ue) | 0, h = h + Math.imul(at, le) | 0, L = L + Math.imul(at, ue) | 0, M = M + Math.imul(qe, Be) | 0, h = h + Math.imul(qe, Ke) | 0, h = h + Math.imul(Re, Be) | 0, L = L + Math.imul(Re, Ke) | 0, M = M + Math.imul(be, Pe) | 0, h = h + Math.imul(be, ze) | 0, h = h + Math.imul(pe, Pe) | 0, L = L + Math.imul(pe, ze) | 0, M = M + Math.imul(Se, Q) | 0, h = h + Math.imul(Se, oe) | 0, h = h + Math.imul(De, Q) | 0, L = L + Math.imul(De, oe) | 0;\n      var Jo = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (Jo >>> 26) | 0, Jo &= 67108863, M = Math.imul(ct, Ue), h = Math.imul(ct, Je), h = h + Math.imul(tt, Ue) | 0, L = Math.imul(tt, Je), M = M + Math.imul(st, le) | 0, h = h + Math.imul(st, ue) | 0, h = h + Math.imul(We, le) | 0, L = L + Math.imul(We, ue) | 0, M = M + Math.imul(yt, Be) | 0, h = h + Math.imul(yt, Ke) | 0, h = h + Math.imul(at, Be) | 0, L = L + Math.imul(at, Ke) | 0, M = M + Math.imul(qe, Pe) | 0, h = h + Math.imul(qe, ze) | 0, h = h + Math.imul(Re, Pe) | 0, L = L + Math.imul(Re, ze) | 0, M = M + Math.imul(be, Q) | 0, h = h + Math.imul(be, oe) | 0, h = h + Math.imul(pe, Q) | 0, L = L + Math.imul(pe, oe) | 0;\n      var Qo = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (Qo >>> 26) | 0, Qo &= 67108863, M = Math.imul(ct, le), h = Math.imul(ct, ue), h = h + Math.imul(tt, le) | 0, L = Math.imul(tt, ue), M = M + Math.imul(st, Be) | 0, h = h + Math.imul(st, Ke) | 0, h = h + Math.imul(We, Be) | 0, L = L + Math.imul(We, Ke) | 0, M = M + Math.imul(yt, Pe) | 0, h = h + Math.imul(yt, ze) | 0, h = h + Math.imul(at, Pe) | 0, L = L + Math.imul(at, ze) | 0, M = M + Math.imul(qe, Q) | 0, h = h + Math.imul(qe, oe) | 0, h = h + Math.imul(Re, Q) | 0, L = L + Math.imul(Re, oe) | 0;\n      var ll = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (ll >>> 26) | 0, ll &= 67108863, M = Math.imul(ct, Be), h = Math.imul(ct, Ke), h = h + Math.imul(tt, Be) | 0, L = Math.imul(tt, Ke), M = M + Math.imul(st, Pe) | 0, h = h + Math.imul(st, ze) | 0, h = h + Math.imul(We, Pe) | 0, L = L + Math.imul(We, ze) | 0, M = M + Math.imul(yt, Q) | 0, h = h + Math.imul(yt, oe) | 0, h = h + Math.imul(at, Q) | 0, L = L + Math.imul(at, oe) | 0;\n      var dl = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (dl >>> 26) | 0, dl &= 67108863, M = Math.imul(ct, Pe), h = Math.imul(ct, ze), h = h + Math.imul(tt, Pe) | 0, L = Math.imul(tt, ze), M = M + Math.imul(st, Q) | 0, h = h + Math.imul(st, oe) | 0, h = h + Math.imul(We, Q) | 0, L = L + Math.imul(We, oe) | 0;\n      var fl = (H + M | 0) + ((h & 8191) << 13) | 0;\n      H = (L + (h >>> 13) | 0) + (fl >>> 26) | 0, fl &= 67108863, M = Math.imul(ct, Q), h = Math.imul(ct, oe), h = h + Math.imul(tt, Q) | 0, L = Math.imul(tt, oe);\n      var ul = (H + M | 0) + ((h & 8191) << 13) | 0;\n      return H = (L + (h >>> 13) | 0) + (ul >>> 26) | 0, ul &= 67108863, A[0] = xe, A[1] = Oe, A[2] = je, A[3] = Ee, A[4] = fe, A[5] = ut, A[6] = ht, A[7] = nt, A[8] = Ut, A[9] = ln, A[10] = Hn, A[11] = Nt, A[12] = yi, A[13] = Jo, A[14] = Qo, A[15] = ll, A[16] = dl, A[17] = fl, A[18] = ul, H !== 0 && (A[19] = H, w.length++), w;\n    };\n    Math.imul || (m = x);\n    function C(_, u, v) {\n      v.negative = u.negative ^ _.negative, v.length = _.length + u.length;\n      for (var w = 0, y = 0, $ = 0; $ < v.length - 1; $++) {\n        var A = y;\n        y = 0;\n        for (var H = w & 67108863, M = Math.min($, u.length - 1), h = Math.max(0, $ - _.length + 1); h <= M; h++) {\n          var L = $ - h, Y = _.words[L] | 0, ne = u.words[h] | 0, ie = Y * ne, se = ie & 67108863;\n          A = A + (ie / 67108864 | 0) | 0, se = se + H | 0, H = se & 67108863, A = A + (se >>> 26) | 0, y += A >>> 26, A &= 67108863;\n        }\n        v.words[$] = H, w = A, A = y;\n      }\n      return w !== 0 ? v.words[$] = w : v.length--, v.strip();\n    }\n    function S(_, u, v) {\n      var w = new T();\n      return w.mulp(_, u, v);\n    }\n    o.prototype.mulTo = function(u, v) {\n      var w, y = this.length + u.length;\n      return this.length === 10 && u.length === 10 ? w = m(this, u, v) : y < 63 ? w = x(this, u, v) : y < 1024 ? w = C(this, u, v) : w = S(this, u, v), w;\n    };\n    function T(_, u) {\n      this.x = _, this.y = u;\n    }\n    T.prototype.makeRBT = function(u) {\n      for (var v = new Array(u), w = o.prototype._countBits(u) - 1, y = 0; y < u; y++)\n        v[y] = this.revBin(y, w, u);\n      return v;\n    }, T.prototype.revBin = function(u, v, w) {\n      if (u === 0 || u === w - 1) return u;\n      for (var y = 0, $ = 0; $ < v; $++)\n        y |= (u & 1) << v - $ - 1, u >>= 1;\n      return y;\n    }, T.prototype.permute = function(u, v, w, y, $, A) {\n      for (var H = 0; H < A; H++)\n        y[H] = v[u[H]], $[H] = w[u[H]];\n    }, T.prototype.transform = function(u, v, w, y, $, A) {\n      this.permute(A, u, v, w, y, $);\n      for (var H = 1; H < $; H <<= 1)\n        for (var M = H << 1, h = Math.cos(2 * Math.PI / M), L = Math.sin(2 * Math.PI / M), Y = 0; Y < $; Y += M)\n          for (var ne = h, ie = L, se = 0; se < H; se++) {\n            var ye = w[Y + se], ge = y[Y + se], _e = w[Y + se + H], me = y[Y + se + H], de = ne * _e - ie * me;\n            me = ne * me + ie * _e, _e = de, w[Y + se] = ye + _e, y[Y + se] = ge + me, w[Y + se + H] = ye - _e, y[Y + se + H] = ge - me, se !== M && (de = h * ne - L * ie, ie = h * ie + L * ne, ne = de);\n          }\n    }, T.prototype.guessLen13b = function(u, v) {\n      var w = Math.max(v, u) | 1, y = w & 1, $ = 0;\n      for (w = w / 2 | 0; w; w = w >>> 1)\n        $++;\n      return 1 << $ + 1 + y;\n    }, T.prototype.conjugate = function(u, v, w) {\n      if (!(w <= 1))\n        for (var y = 0; y < w / 2; y++) {\n          var $ = u[y];\n          u[y] = u[w - y - 1], u[w - y - 1] = $, $ = v[y], v[y] = -v[w - y - 1], v[w - y - 1] = -$;\n        }\n    }, T.prototype.normalize13b = function(u, v) {\n      for (var w = 0, y = 0; y < v / 2; y++) {\n        var $ = Math.round(u[2 * y + 1] / v) * 8192 + Math.round(u[2 * y] / v) + w;\n        u[y] = $ & 67108863, $ < 67108864 ? w = 0 : w = $ / 67108864 | 0;\n      }\n      return u;\n    }, T.prototype.convert13b = function(u, v, w, y) {\n      for (var $ = 0, A = 0; A < v; A++)\n        $ = $ + (u[A] | 0), w[2 * A] = $ & 8191, $ = $ >>> 13, w[2 * A + 1] = $ & 8191, $ = $ >>> 13;\n      for (A = 2 * v; A < y; ++A)\n        w[A] = 0;\n      r($ === 0), r(($ & -8192) === 0);\n    }, T.prototype.stub = function(u) {\n      for (var v = new Array(u), w = 0; w < u; w++)\n        v[w] = 0;\n      return v;\n    }, T.prototype.mulp = function(u, v, w) {\n      var y = 2 * this.guessLen13b(u.length, v.length), $ = this.makeRBT(y), A = this.stub(y), H = new Array(y), M = new Array(y), h = new Array(y), L = new Array(y), Y = new Array(y), ne = new Array(y), ie = w.words;\n      ie.length = y, this.convert13b(u.words, u.length, H, y), this.convert13b(v.words, v.length, L, y), this.transform(H, A, M, h, y, $), this.transform(L, A, Y, ne, y, $);\n      for (var se = 0; se < y; se++) {\n        var ye = M[se] * Y[se] - h[se] * ne[se];\n        h[se] = M[se] * ne[se] + h[se] * Y[se], M[se] = ye;\n      }\n      return this.conjugate(M, h, y), this.transform(M, h, ie, A, y, $), this.conjugate(ie, A, y), this.normalize13b(ie, y), w.negative = u.negative ^ v.negative, w.length = u.length + v.length, w.strip();\n    }, o.prototype.mul = function(u) {\n      var v = new o(null);\n      return v.words = new Array(this.length + u.length), this.mulTo(u, v);\n    }, o.prototype.mulf = function(u) {\n      var v = new o(null);\n      return v.words = new Array(this.length + u.length), S(this, u, v);\n    }, o.prototype.imul = function(u) {\n      return this.clone().mulTo(u, this);\n    }, o.prototype.imuln = function(u) {\n      r(typeof u == \"number\"), r(u < 67108864);\n      for (var v = 0, w = 0; w < this.length; w++) {\n        var y = (this.words[w] | 0) * u, $ = (y & 67108863) + (v & 67108863);\n        v >>= 26, v += y / 67108864 | 0, v += $ >>> 26, this.words[w] = $ & 67108863;\n      }\n      return v !== 0 && (this.words[w] = v, this.length++), this;\n    }, o.prototype.muln = function(u) {\n      return this.clone().imuln(u);\n    }, o.prototype.sqr = function() {\n      return this.mul(this);\n    }, o.prototype.isqr = function() {\n      return this.imul(this.clone());\n    }, o.prototype.pow = function(u) {\n      var v = b(u);\n      if (v.length === 0) return new o(1);\n      for (var w = this, y = 0; y < v.length && v[y] === 0; y++, w = w.sqr())\n        ;\n      if (++y < v.length)\n        for (var $ = w.sqr(); y < v.length; y++, $ = $.sqr())\n          v[y] !== 0 && (w = w.mul($));\n      return w;\n    }, o.prototype.iushln = function(u) {\n      r(typeof u == \"number\" && u >= 0);\n      var v = u % 26, w = (u - v) / 26, y = 67108863 >>> 26 - v << 26 - v, $;\n      if (v !== 0) {\n        var A = 0;\n        for ($ = 0; $ < this.length; $++) {\n          var H = this.words[$] & y, M = (this.words[$] | 0) - H << v;\n          this.words[$] = M | A, A = H >>> 26 - v;\n        }\n        A && (this.words[$] = A, this.length++);\n      }\n      if (w !== 0) {\n        for ($ = this.length - 1; $ >= 0; $--)\n          this.words[$ + w] = this.words[$];\n        for ($ = 0; $ < w; $++)\n          this.words[$] = 0;\n        this.length += w;\n      }\n      return this.strip();\n    }, o.prototype.ishln = function(u) {\n      return r(this.negative === 0), this.iushln(u);\n    }, o.prototype.iushrn = function(u, v, w) {\n      r(typeof u == \"number\" && u >= 0);\n      var y;\n      v ? y = (v - v % 26) / 26 : y = 0;\n      var $ = u % 26, A = Math.min((u - $) / 26, this.length), H = 67108863 ^ 67108863 >>> $ << $, M = w;\n      if (y -= A, y = Math.max(0, y), M) {\n        for (var h = 0; h < A; h++)\n          M.words[h] = this.words[h];\n        M.length = A;\n      }\n      if (A !== 0) if (this.length > A)\n        for (this.length -= A, h = 0; h < this.length; h++)\n          this.words[h] = this.words[h + A];\n      else\n        this.words[0] = 0, this.length = 1;\n      var L = 0;\n      for (h = this.length - 1; h >= 0 && (L !== 0 || h >= y); h--) {\n        var Y = this.words[h] | 0;\n        this.words[h] = L << 26 - $ | Y >>> $, L = Y & H;\n      }\n      return M && L !== 0 && (M.words[M.length++] = L), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();\n    }, o.prototype.ishrn = function(u, v, w) {\n      return r(this.negative === 0), this.iushrn(u, v, w);\n    }, o.prototype.shln = function(u) {\n      return this.clone().ishln(u);\n    }, o.prototype.ushln = function(u) {\n      return this.clone().iushln(u);\n    }, o.prototype.shrn = function(u) {\n      return this.clone().ishrn(u);\n    }, o.prototype.ushrn = function(u) {\n      return this.clone().iushrn(u);\n    }, o.prototype.testn = function(u) {\n      r(typeof u == \"number\" && u >= 0);\n      var v = u % 26, w = (u - v) / 26, y = 1 << v;\n      if (this.length <= w) return !1;\n      var $ = this.words[w];\n      return !!($ & y);\n    }, o.prototype.imaskn = function(u) {\n      r(typeof u == \"number\" && u >= 0);\n      var v = u % 26, w = (u - v) / 26;\n      if (r(this.negative === 0, \"imaskn works only with positive numbers\"), this.length <= w)\n        return this;\n      if (v !== 0 && w++, this.length = Math.min(w, this.length), v !== 0) {\n        var y = 67108863 ^ 67108863 >>> v << v;\n        this.words[this.length - 1] &= y;\n      }\n      return this.strip();\n    }, o.prototype.maskn = function(u) {\n      return this.clone().imaskn(u);\n    }, o.prototype.iaddn = function(u) {\n      return r(typeof u == \"number\"), r(u < 67108864), u < 0 ? this.isubn(-u) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < u ? (this.words[0] = u - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(u), this.negative = 1, this) : this._iaddn(u);\n    }, o.prototype._iaddn = function(u) {\n      this.words[0] += u;\n      for (var v = 0; v < this.length && this.words[v] >= 67108864; v++)\n        this.words[v] -= 67108864, v === this.length - 1 ? this.words[v + 1] = 1 : this.words[v + 1]++;\n      return this.length = Math.max(this.length, v + 1), this;\n    }, o.prototype.isubn = function(u) {\n      if (r(typeof u == \"number\"), r(u < 67108864), u < 0) return this.iaddn(-u);\n      if (this.negative !== 0)\n        return this.negative = 0, this.iaddn(u), this.negative = 1, this;\n      if (this.words[0] -= u, this.length === 1 && this.words[0] < 0)\n        this.words[0] = -this.words[0], this.negative = 1;\n      else\n        for (var v = 0; v < this.length && this.words[v] < 0; v++)\n          this.words[v] += 67108864, this.words[v + 1] -= 1;\n      return this.strip();\n    }, o.prototype.addn = function(u) {\n      return this.clone().iaddn(u);\n    }, o.prototype.subn = function(u) {\n      return this.clone().isubn(u);\n    }, o.prototype.iabs = function() {\n      return this.negative = 0, this;\n    }, o.prototype.abs = function() {\n      return this.clone().iabs();\n    }, o.prototype._ishlnsubmul = function(u, v, w) {\n      var y = u.length + w, $;\n      this._expand(y);\n      var A, H = 0;\n      for ($ = 0; $ < u.length; $++) {\n        A = (this.words[$ + w] | 0) + H;\n        var M = (u.words[$] | 0) * v;\n        A -= M & 67108863, H = (A >> 26) - (M / 67108864 | 0), this.words[$ + w] = A & 67108863;\n      }\n      for (; $ < this.length - w; $++)\n        A = (this.words[$ + w] | 0) + H, H = A >> 26, this.words[$ + w] = A & 67108863;\n      if (H === 0) return this.strip();\n      for (r(H === -1), H = 0, $ = 0; $ < this.length; $++)\n        A = -(this.words[$] | 0) + H, H = A >> 26, this.words[$] = A & 67108863;\n      return this.negative = 1, this.strip();\n    }, o.prototype._wordDiv = function(u, v) {\n      var w = this.length - u.length, y = this.clone(), $ = u, A = $.words[$.length - 1] | 0, H = this._countBits(A);\n      w = 26 - H, w !== 0 && ($ = $.ushln(w), y.iushln(w), A = $.words[$.length - 1] | 0);\n      var M = y.length - $.length, h;\n      if (v !== \"mod\") {\n        h = new o(null), h.length = M + 1, h.words = new Array(h.length);\n        for (var L = 0; L < h.length; L++)\n          h.words[L] = 0;\n      }\n      var Y = y.clone()._ishlnsubmul($, 1, M);\n      Y.negative === 0 && (y = Y, h && (h.words[M] = 1));\n      for (var ne = M - 1; ne >= 0; ne--) {\n        var ie = (y.words[$.length + ne] | 0) * 67108864 + (y.words[$.length + ne - 1] | 0);\n        for (ie = Math.min(ie / A | 0, 67108863), y._ishlnsubmul($, ie, ne); y.negative !== 0; )\n          ie--, y.negative = 0, y._ishlnsubmul($, 1, ne), y.isZero() || (y.negative ^= 1);\n        h && (h.words[ne] = ie);\n      }\n      return h && h.strip(), y.strip(), v !== \"div\" && w !== 0 && y.iushrn(w), {\n        div: h || null,\n        mod: y\n      };\n    }, o.prototype.divmod = function(u, v, w) {\n      if (r(!u.isZero()), this.isZero())\n        return {\n          div: new o(0),\n          mod: new o(0)\n        };\n      var y, $, A;\n      return this.negative !== 0 && u.negative === 0 ? (A = this.neg().divmod(u, v), v !== \"mod\" && (y = A.div.neg()), v !== \"div\" && ($ = A.mod.neg(), w && $.negative !== 0 && $.iadd(u)), {\n        div: y,\n        mod: $\n      }) : this.negative === 0 && u.negative !== 0 ? (A = this.divmod(u.neg(), v), v !== \"mod\" && (y = A.div.neg()), {\n        div: y,\n        mod: A.mod\n      }) : this.negative & u.negative ? (A = this.neg().divmod(u.neg(), v), v !== \"div\" && ($ = A.mod.neg(), w && $.negative !== 0 && $.isub(u)), {\n        div: A.div,\n        mod: $\n      }) : u.length > this.length || this.cmp(u) < 0 ? {\n        div: new o(0),\n        mod: this\n      } : u.length === 1 ? v === \"div\" ? {\n        div: this.divn(u.words[0]),\n        mod: null\n      } : v === \"mod\" ? {\n        div: null,\n        mod: new o(this.modn(u.words[0]))\n      } : {\n        div: this.divn(u.words[0]),\n        mod: new o(this.modn(u.words[0]))\n      } : this._wordDiv(u, v);\n    }, o.prototype.div = function(u) {\n      return this.divmod(u, \"div\", !1).div;\n    }, o.prototype.mod = function(u) {\n      return this.divmod(u, \"mod\", !1).mod;\n    }, o.prototype.umod = function(u) {\n      return this.divmod(u, \"mod\", !0).mod;\n    }, o.prototype.divRound = function(u) {\n      var v = this.divmod(u);\n      if (v.mod.isZero()) return v.div;\n      var w = v.div.negative !== 0 ? v.mod.isub(u) : v.mod, y = u.ushrn(1), $ = u.andln(1), A = w.cmp(y);\n      return A < 0 || $ === 1 && A === 0 ? v.div : v.div.negative !== 0 ? v.div.isubn(1) : v.div.iaddn(1);\n    }, o.prototype.modn = function(u) {\n      r(u <= 67108863);\n      for (var v = (1 << 26) % u, w = 0, y = this.length - 1; y >= 0; y--)\n        w = (v * w + (this.words[y] | 0)) % u;\n      return w;\n    }, o.prototype.idivn = function(u) {\n      r(u <= 67108863);\n      for (var v = 0, w = this.length - 1; w >= 0; w--) {\n        var y = (this.words[w] | 0) + v * 67108864;\n        this.words[w] = y / u | 0, v = y % u;\n      }\n      return this.strip();\n    }, o.prototype.divn = function(u) {\n      return this.clone().idivn(u);\n    }, o.prototype.egcd = function(u) {\n      r(u.negative === 0), r(!u.isZero());\n      var v = this, w = u.clone();\n      v.negative !== 0 ? v = v.umod(u) : v = v.clone();\n      for (var y = new o(1), $ = new o(0), A = new o(0), H = new o(1), M = 0; v.isEven() && w.isEven(); )\n        v.iushrn(1), w.iushrn(1), ++M;\n      for (var h = w.clone(), L = v.clone(); !v.isZero(); ) {\n        for (var Y = 0, ne = 1; !(v.words[0] & ne) && Y < 26; ++Y, ne <<= 1) ;\n        if (Y > 0)\n          for (v.iushrn(Y); Y-- > 0; )\n            (y.isOdd() || $.isOdd()) && (y.iadd(h), $.isub(L)), y.iushrn(1), $.iushrn(1);\n        for (var ie = 0, se = 1; !(w.words[0] & se) && ie < 26; ++ie, se <<= 1) ;\n        if (ie > 0)\n          for (w.iushrn(ie); ie-- > 0; )\n            (A.isOdd() || H.isOdd()) && (A.iadd(h), H.isub(L)), A.iushrn(1), H.iushrn(1);\n        v.cmp(w) >= 0 ? (v.isub(w), y.isub(A), $.isub(H)) : (w.isub(v), A.isub(y), H.isub($));\n      }\n      return {\n        a: A,\n        b: H,\n        gcd: w.iushln(M)\n      };\n    }, o.prototype._invmp = function(u) {\n      r(u.negative === 0), r(!u.isZero());\n      var v = this, w = u.clone();\n      v.negative !== 0 ? v = v.umod(u) : v = v.clone();\n      for (var y = new o(1), $ = new o(0), A = w.clone(); v.cmpn(1) > 0 && w.cmpn(1) > 0; ) {\n        for (var H = 0, M = 1; !(v.words[0] & M) && H < 26; ++H, M <<= 1) ;\n        if (H > 0)\n          for (v.iushrn(H); H-- > 0; )\n            y.isOdd() && y.iadd(A), y.iushrn(1);\n        for (var h = 0, L = 1; !(w.words[0] & L) && h < 26; ++h, L <<= 1) ;\n        if (h > 0)\n          for (w.iushrn(h); h-- > 0; )\n            $.isOdd() && $.iadd(A), $.iushrn(1);\n        v.cmp(w) >= 0 ? (v.isub(w), y.isub($)) : (w.isub(v), $.isub(y));\n      }\n      var Y;\n      return v.cmpn(1) === 0 ? Y = y : Y = $, Y.cmpn(0) < 0 && Y.iadd(u), Y;\n    }, o.prototype.gcd = function(u) {\n      if (this.isZero()) return u.abs();\n      if (u.isZero()) return this.abs();\n      var v = this.clone(), w = u.clone();\n      v.negative = 0, w.negative = 0;\n      for (var y = 0; v.isEven() && w.isEven(); y++)\n        v.iushrn(1), w.iushrn(1);\n      do {\n        for (; v.isEven(); )\n          v.iushrn(1);\n        for (; w.isEven(); )\n          w.iushrn(1);\n        var $ = v.cmp(w);\n        if ($ < 0) {\n          var A = v;\n          v = w, w = A;\n        } else if ($ === 0 || w.cmpn(1) === 0)\n          break;\n        v.isub(w);\n      } while (!0);\n      return w.iushln(y);\n    }, o.prototype.invm = function(u) {\n      return this.egcd(u).a.umod(u);\n    }, o.prototype.isEven = function() {\n      return (this.words[0] & 1) === 0;\n    }, o.prototype.isOdd = function() {\n      return (this.words[0] & 1) === 1;\n    }, o.prototype.andln = function(u) {\n      return this.words[0] & u;\n    }, o.prototype.bincn = function(u) {\n      r(typeof u == \"number\");\n      var v = u % 26, w = (u - v) / 26, y = 1 << v;\n      if (this.length <= w)\n        return this._expand(w + 1), this.words[w] |= y, this;\n      for (var $ = y, A = w; $ !== 0 && A < this.length; A++) {\n        var H = this.words[A] | 0;\n        H += $, $ = H >>> 26, H &= 67108863, this.words[A] = H;\n      }\n      return $ !== 0 && (this.words[A] = $, this.length++), this;\n    }, o.prototype.isZero = function() {\n      return this.length === 1 && this.words[0] === 0;\n    }, o.prototype.cmpn = function(u) {\n      var v = u < 0;\n      if (this.negative !== 0 && !v) return -1;\n      if (this.negative === 0 && v) return 1;\n      this.strip();\n      var w;\n      if (this.length > 1)\n        w = 1;\n      else {\n        v && (u = -u), r(u <= 67108863, \"Number is too big\");\n        var y = this.words[0] | 0;\n        w = y === u ? 0 : y < u ? -1 : 1;\n      }\n      return this.negative !== 0 ? -w | 0 : w;\n    }, o.prototype.cmp = function(u) {\n      if (this.negative !== 0 && u.negative === 0) return -1;\n      if (this.negative === 0 && u.negative !== 0) return 1;\n      var v = this.ucmp(u);\n      return this.negative !== 0 ? -v | 0 : v;\n    }, o.prototype.ucmp = function(u) {\n      if (this.length > u.length) return 1;\n      if (this.length < u.length) return -1;\n      for (var v = 0, w = this.length - 1; w >= 0; w--) {\n        var y = this.words[w] | 0, $ = u.words[w] | 0;\n        if (y !== $) {\n          y < $ ? v = -1 : y > $ && (v = 1);\n          break;\n        }\n      }\n      return v;\n    }, o.prototype.gtn = function(u) {\n      return this.cmpn(u) === 1;\n    }, o.prototype.gt = function(u) {\n      return this.cmp(u) === 1;\n    }, o.prototype.gten = function(u) {\n      return this.cmpn(u) >= 0;\n    }, o.prototype.gte = function(u) {\n      return this.cmp(u) >= 0;\n    }, o.prototype.ltn = function(u) {\n      return this.cmpn(u) === -1;\n    }, o.prototype.lt = function(u) {\n      return this.cmp(u) === -1;\n    }, o.prototype.lten = function(u) {\n      return this.cmpn(u) <= 0;\n    }, o.prototype.lte = function(u) {\n      return this.cmp(u) <= 0;\n    }, o.prototype.eqn = function(u) {\n      return this.cmpn(u) === 0;\n    }, o.prototype.eq = function(u) {\n      return this.cmp(u) === 0;\n    }, o.red = function(u) {\n      return new J(u);\n    }, o.prototype.toRed = function(u) {\n      return r(!this.red, \"Already a number in reduction context\"), r(this.negative === 0, \"red works only with positives\"), u.convertTo(this)._forceRed(u);\n    }, o.prototype.fromRed = function() {\n      return r(this.red, \"fromRed works only with numbers in reduction context\"), this.red.convertFrom(this);\n    }, o.prototype._forceRed = function(u) {\n      return this.red = u, this;\n    }, o.prototype.forceRed = function(u) {\n      return r(!this.red, \"Already a number in reduction context\"), this._forceRed(u);\n    }, o.prototype.redAdd = function(u) {\n      return r(this.red, \"redAdd works only with red numbers\"), this.red.add(this, u);\n    }, o.prototype.redIAdd = function(u) {\n      return r(this.red, \"redIAdd works only with red numbers\"), this.red.iadd(this, u);\n    }, o.prototype.redSub = function(u) {\n      return r(this.red, \"redSub works only with red numbers\"), this.red.sub(this, u);\n    }, o.prototype.redISub = function(u) {\n      return r(this.red, \"redISub works only with red numbers\"), this.red.isub(this, u);\n    }, o.prototype.redShl = function(u) {\n      return r(this.red, \"redShl works only with red numbers\"), this.red.shl(this, u);\n    }, o.prototype.redMul = function(u) {\n      return r(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, u), this.red.mul(this, u);\n    }, o.prototype.redIMul = function(u) {\n      return r(this.red, \"redMul works only with red numbers\"), this.red._verify2(this, u), this.red.imul(this, u);\n    }, o.prototype.redSqr = function() {\n      return r(this.red, \"redSqr works only with red numbers\"), this.red._verify1(this), this.red.sqr(this);\n    }, o.prototype.redISqr = function() {\n      return r(this.red, \"redISqr works only with red numbers\"), this.red._verify1(this), this.red.isqr(this);\n    }, o.prototype.redSqrt = function() {\n      return r(this.red, \"redSqrt works only with red numbers\"), this.red._verify1(this), this.red.sqrt(this);\n    }, o.prototype.redInvm = function() {\n      return r(this.red, \"redInvm works only with red numbers\"), this.red._verify1(this), this.red.invm(this);\n    }, o.prototype.redNeg = function() {\n      return r(this.red, \"redNeg works only with red numbers\"), this.red._verify1(this), this.red.neg(this);\n    }, o.prototype.redPow = function(u) {\n      return r(this.red && !u.red, \"redPow(normalNum)\"), this.red._verify1(this), this.red.pow(this, u);\n    };\n    var N = {\n      k256: null,\n      p224: null,\n      p192: null,\n      p25519: null\n    };\n    function W(_, u) {\n      this.name = _, this.p = new o(u, 16), this.n = this.p.bitLength(), this.k = new o(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();\n    }\n    W.prototype._tmp = function() {\n      var u = new o(null);\n      return u.words = new Array(Math.ceil(this.n / 13)), u;\n    }, W.prototype.ireduce = function(u) {\n      var v = u, w;\n      do\n        this.split(v, this.tmp), v = this.imulK(v), v = v.iadd(this.tmp), w = v.bitLength();\n      while (w > this.n);\n      var y = w < this.n ? -1 : v.ucmp(this.p);\n      return y === 0 ? (v.words[0] = 0, v.length = 1) : y > 0 ? v.isub(this.p) : v.strip !== void 0 ? v.strip() : v._strip(), v;\n    }, W.prototype.split = function(u, v) {\n      u.iushrn(this.n, 0, v);\n    }, W.prototype.imulK = function(u) {\n      return u.imul(this.k);\n    };\n    function U() {\n      W.call(\n        this,\n        \"k256\",\n        \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\"\n      );\n    }\n    i(U, W), U.prototype.split = function(u, v) {\n      for (var w = 4194303, y = Math.min(u.length, 9), $ = 0; $ < y; $++)\n        v.words[$] = u.words[$];\n      if (v.length = y, u.length <= 9) {\n        u.words[0] = 0, u.length = 1;\n        return;\n      }\n      var A = u.words[9];\n      for (v.words[v.length++] = A & w, $ = 10; $ < u.length; $++) {\n        var H = u.words[$] | 0;\n        u.words[$ - 10] = (H & w) << 4 | A >>> 22, A = H;\n      }\n      A >>>= 22, u.words[$ - 10] = A, A === 0 && u.length > 10 ? u.length -= 10 : u.length -= 9;\n    }, U.prototype.imulK = function(u) {\n      u.words[u.length] = 0, u.words[u.length + 1] = 0, u.length += 2;\n      for (var v = 0, w = 0; w < u.length; w++) {\n        var y = u.words[w] | 0;\n        v += y * 977, u.words[w] = v & 67108863, v = y * 64 + (v / 67108864 | 0);\n      }\n      return u.words[u.length - 1] === 0 && (u.length--, u.words[u.length - 1] === 0 && u.length--), u;\n    };\n    function F() {\n      W.call(\n        this,\n        \"p224\",\n        \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\"\n      );\n    }\n    i(F, W);\n    function j() {\n      W.call(\n        this,\n        \"p192\",\n        \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\"\n      );\n    }\n    i(j, W);\n    function K() {\n      W.call(\n        this,\n        \"25519\",\n        \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\"\n      );\n    }\n    i(K, W), K.prototype.imulK = function(u) {\n      for (var v = 0, w = 0; w < u.length; w++) {\n        var y = (u.words[w] | 0) * 19 + v, $ = y & 67108863;\n        y >>>= 26, u.words[w] = $, v = y;\n      }\n      return v !== 0 && (u.words[u.length++] = v), u;\n    }, o._prime = function(u) {\n      if (N[u]) return N[u];\n      var v;\n      if (u === \"k256\")\n        v = new U();\n      else if (u === \"p224\")\n        v = new F();\n      else if (u === \"p192\")\n        v = new j();\n      else if (u === \"p25519\")\n        v = new K();\n      else\n        throw new Error(\"Unknown prime \" + u);\n      return N[u] = v, v;\n    };\n    function J(_) {\n      if (typeof _ == \"string\") {\n        var u = o._prime(_);\n        this.m = u.p, this.prime = u;\n      } else\n        r(_.gtn(1), \"modulus must be greater than 1\"), this.m = _, this.prime = null;\n    }\n    J.prototype._verify1 = function(u) {\n      r(u.negative === 0, \"red works only with positives\"), r(u.red, \"red works only with red numbers\");\n    }, J.prototype._verify2 = function(u, v) {\n      r((u.negative | v.negative) === 0, \"red works only with positives\"), r(\n        u.red && u.red === v.red,\n        \"red works only with red numbers\"\n      );\n    }, J.prototype.imod = function(u) {\n      return this.prime ? this.prime.ireduce(u)._forceRed(this) : u.umod(this.m)._forceRed(this);\n    }, J.prototype.neg = function(u) {\n      return u.isZero() ? u.clone() : this.m.sub(u)._forceRed(this);\n    }, J.prototype.add = function(u, v) {\n      this._verify2(u, v);\n      var w = u.add(v);\n      return w.cmp(this.m) >= 0 && w.isub(this.m), w._forceRed(this);\n    }, J.prototype.iadd = function(u, v) {\n      this._verify2(u, v);\n      var w = u.iadd(v);\n      return w.cmp(this.m) >= 0 && w.isub(this.m), w;\n    }, J.prototype.sub = function(u, v) {\n      this._verify2(u, v);\n      var w = u.sub(v);\n      return w.cmpn(0) < 0 && w.iadd(this.m), w._forceRed(this);\n    }, J.prototype.isub = function(u, v) {\n      this._verify2(u, v);\n      var w = u.isub(v);\n      return w.cmpn(0) < 0 && w.iadd(this.m), w;\n    }, J.prototype.shl = function(u, v) {\n      return this._verify1(u), this.imod(u.ushln(v));\n    }, J.prototype.imul = function(u, v) {\n      return this._verify2(u, v), this.imod(u.imul(v));\n    }, J.prototype.mul = function(u, v) {\n      return this._verify2(u, v), this.imod(u.mul(v));\n    }, J.prototype.isqr = function(u) {\n      return this.imul(u, u.clone());\n    }, J.prototype.sqr = function(u) {\n      return this.mul(u, u);\n    }, J.prototype.sqrt = function(u) {\n      if (u.isZero()) return u.clone();\n      var v = this.m.andln(3);\n      if (r(v % 2 === 1), v === 3) {\n        var w = this.m.add(new o(1)).iushrn(2);\n        return this.pow(u, w);\n      }\n      for (var y = this.m.subn(1), $ = 0; !y.isZero() && y.andln(1) === 0; )\n        $++, y.iushrn(1);\n      r(!y.isZero());\n      var A = new o(1).toRed(this), H = A.redNeg(), M = this.m.subn(1).iushrn(1), h = this.m.bitLength();\n      for (h = new o(2 * h * h).toRed(this); this.pow(h, M).cmp(H) !== 0; )\n        h.redIAdd(H);\n      for (var L = this.pow(h, y), Y = this.pow(u, y.addn(1).iushrn(1)), ne = this.pow(u, y), ie = $; ne.cmp(A) !== 0; ) {\n        for (var se = ne, ye = 0; se.cmp(A) !== 0; ye++)\n          se = se.redSqr();\n        r(ye < ie);\n        var ge = this.pow(L, new o(1).iushln(ie - ye - 1));\n        Y = Y.redMul(ge), L = ge.redSqr(), ne = ne.redMul(L), ie = ye;\n      }\n      return Y;\n    }, J.prototype.invm = function(u) {\n      var v = u._invmp(this.m);\n      return v.negative !== 0 ? (v.negative = 0, this.imod(v).redNeg()) : this.imod(v);\n    }, J.prototype.pow = function(u, v) {\n      if (v.isZero()) return new o(1).toRed(this);\n      if (v.cmpn(1) === 0) return u.clone();\n      var w = 4, y = new Array(1 << w);\n      y[0] = new o(1).toRed(this), y[1] = u;\n      for (var $ = 2; $ < y.length; $++)\n        y[$] = this.mul(y[$ - 1], u);\n      var A = y[0], H = 0, M = 0, h = v.bitLength() % 26;\n      for (h === 0 && (h = 26), $ = v.length - 1; $ >= 0; $--) {\n        for (var L = v.words[$], Y = h - 1; Y >= 0; Y--) {\n          var ne = L >> Y & 1;\n          if (A !== y[0] && (A = this.sqr(A)), ne === 0 && H === 0) {\n            M = 0;\n            continue;\n          }\n          H <<= 1, H |= ne, M++, !(M !== w && ($ !== 0 || Y !== 0)) && (A = this.mul(A, y[H]), M = 0, H = 0);\n        }\n        h = 26;\n      }\n      return A;\n    }, J.prototype.convertTo = function(u) {\n      var v = u.umod(this.m);\n      return v === u ? v.clone() : v;\n    }, J.prototype.convertFrom = function(u) {\n      var v = u.clone();\n      return v.red = null, v;\n    }, o.mont = function(u) {\n      return new X(u);\n    };\n    function X(_) {\n      J.call(this, _), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new o(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);\n    }\n    i(X, J), X.prototype.convertTo = function(u) {\n      return this.imod(u.ushln(this.shift));\n    }, X.prototype.convertFrom = function(u) {\n      var v = this.imod(u.mul(this.rinv));\n      return v.red = null, v;\n    }, X.prototype.imul = function(u, v) {\n      if (u.isZero() || v.isZero())\n        return u.words[0] = 0, u.length = 1, u;\n      var w = u.imul(v), y = w.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), $ = w.isub(y).iushrn(this.shift), A = $;\n      return $.cmp(this.m) >= 0 ? A = $.isub(this.m) : $.cmpn(0) < 0 && (A = $.iadd(this.m)), A._forceRed(this);\n    }, X.prototype.mul = function(u, v) {\n      if (u.isZero() || v.isZero()) return new o(0)._forceRed(this);\n      var w = u.mul(v), y = w.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), $ = w.isub(y).iushrn(this.shift), A = $;\n      return $.cmp(this.m) >= 0 ? A = $.isub(this.m) : $.cmpn(0) < 0 && (A = $.iadd(this.m)), A._forceRed(this);\n    }, X.prototype.invm = function(u) {\n      var v = this.imod(u._invmp(this.m).mul(this.r2));\n      return v._forceRed(this);\n    };\n  })(e, xd);\n})(Nd);\nvar Nr = Nd.exports, Ki = _3;\nfunction _3(e, t) {\n  if (!e)\n    throw new Error(t || \"Assertion failed\");\n}\n_3.equal = function(t, n, r) {\n  if (t != n)\n    throw new Error(r || \"Assertion failed: \" + t + \" != \" + n);\n};\nvar Vd = {};\n(function(e) {\n  var t = e;\n  function n(o, a) {\n    if (Array.isArray(o))\n      return o.slice();\n    if (!o)\n      return [];\n    var s = [];\n    if (typeof o != \"string\") {\n      for (var c = 0; c < o.length; c++)\n        s[c] = o[c] | 0;\n      return s;\n    }\n    if (a === \"hex\") {\n      o = o.replace(/[^a-z0-9]+/ig, \"\"), o.length % 2 !== 0 && (o = \"0\" + o);\n      for (var c = 0; c < o.length; c += 2)\n        s.push(parseInt(o[c] + o[c + 1], 16));\n    } else\n      for (var c = 0; c < o.length; c++) {\n        var l = o.charCodeAt(c), d = l >> 8, f = l & 255;\n        d ? s.push(d, f) : s.push(f);\n      }\n    return s;\n  }\n  t.toArray = n;\n  function r(o) {\n    return o.length === 1 ? \"0\" + o : o;\n  }\n  t.zero2 = r;\n  function i(o) {\n    for (var a = \"\", s = 0; s < o.length; s++)\n      a += r(o[s].toString(16));\n    return a;\n  }\n  t.toHex = i, t.encode = function(a, s) {\n    return s === \"hex\" ? i(a) : a;\n  };\n})(Vd);\n(function(e) {\n  var t = e, n = Nr, r = Ki, i = Vd;\n  t.assert = r, t.toArray = i.toArray, t.zero2 = i.zero2, t.toHex = i.toHex, t.encode = i.encode;\n  function o(d, f, g) {\n    var b = new Array(Math.max(d.bitLength(), g) + 1), x;\n    for (x = 0; x < b.length; x += 1)\n      b[x] = 0;\n    var m = 1 << f + 1, C = d.clone();\n    for (x = 0; x < b.length; x++) {\n      var S, T = C.andln(m - 1);\n      C.isOdd() ? (T > (m >> 1) - 1 ? S = (m >> 1) - T : S = T, C.isubn(S)) : S = 0, b[x] = S, C.iushrn(1);\n    }\n    return b;\n  }\n  t.getNAF = o;\n  function a(d, f) {\n    var g = [\n      [],\n      []\n    ];\n    d = d.clone(), f = f.clone();\n    for (var b = 0, x = 0, m; d.cmpn(-b) > 0 || f.cmpn(-x) > 0; ) {\n      var C = d.andln(3) + b & 3, S = f.andln(3) + x & 3;\n      C === 3 && (C = -1), S === 3 && (S = -1);\n      var T;\n      C & 1 ? (m = d.andln(7) + b & 7, (m === 3 || m === 5) && S === 2 ? T = -C : T = C) : T = 0, g[0].push(T);\n      var N;\n      S & 1 ? (m = f.andln(7) + x & 7, (m === 3 || m === 5) && C === 2 ? N = -S : N = S) : N = 0, g[1].push(N), 2 * b === T + 1 && (b = 1 - b), 2 * x === N + 1 && (x = 1 - x), d.iushrn(1), f.iushrn(1);\n    }\n    return g;\n  }\n  t.getJSF = a;\n  function s(d, f, g) {\n    var b = \"_\" + f;\n    d.prototype[f] = function() {\n      return this[b] !== void 0 ? this[b] : this[b] = g.call(this);\n    };\n  }\n  t.cachedProperty = s;\n  function c(d) {\n    return typeof d == \"string\" ? t.toArray(d, \"hex\") : d;\n  }\n  t.parseBytes = c;\n  function l(d) {\n    return new n(d, \"hex\", \"le\");\n  }\n  t.intFromLE = l;\n})(Sn);\nvar zd = { exports: {} }, vl;\nzd.exports = function(t) {\n  return vl || (vl = new Jr(null)), vl.generate(t);\n};\nfunction Jr(e) {\n  this.rand = e;\n}\nzd.exports.Rand = Jr;\nJr.prototype.generate = function(t) {\n  return this._rand(t);\n};\nJr.prototype._rand = function(t) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(t);\n  for (var n = new Uint8Array(t), r = 0; r < n.length; r++)\n    n[r] = this.rand.getByte();\n  return n;\n};\nif (typeof self == \"object\")\n  self.crypto && self.crypto.getRandomValues ? Jr.prototype._rand = function(t) {\n    var n = new Uint8Array(t);\n    return self.crypto.getRandomValues(n), n;\n  } : self.msCrypto && self.msCrypto.getRandomValues ? Jr.prototype._rand = function(t) {\n    var n = new Uint8Array(t);\n    return self.msCrypto.getRandomValues(n), n;\n  } : typeof window == \"object\" && (Jr.prototype._rand = function() {\n    throw new Error(\"Not implemented yet\");\n  });\nelse\n  try {\n    var f0 = k3;\n    if (typeof f0.randomBytes != \"function\")\n      throw new Error(\"Not supported\");\n    Jr.prototype._rand = function(t) {\n      return f0.randomBytes(t);\n    };\n  } catch {\n  }\nvar E3 = zd.exports, Wd = {}, bi = Nr, Ka = Sn, Vs = Ka.getNAF, sC = Ka.getJSF, zs = Ka.assert;\nfunction ui(e, t) {\n  this.type = e, this.p = new bi(t.p, 16), this.red = t.prime ? bi.red(t.prime) : bi.mont(this.p), this.zero = new bi(0).toRed(this.red), this.one = new bi(1).toRed(this.red), this.two = new bi(2).toRed(this.red), this.n = t.n && new bi(t.n, 16), this.g = t.g && this.pointFromJSON(t.g, t.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;\n  var n = this.n && this.p.div(this.n);\n  !n || n.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));\n}\nvar yc = ui;\nui.prototype.point = function() {\n  throw new Error(\"Not implemented\");\n};\nui.prototype.validate = function() {\n  throw new Error(\"Not implemented\");\n};\nui.prototype._fixedNafMul = function(t, n) {\n  zs(t.precomputed);\n  var r = t._getDoubles(), i = Vs(n, 1, this._bitLength), o = (1 << r.step + 1) - (r.step % 2 === 0 ? 2 : 1);\n  o /= 3;\n  var a = [], s, c;\n  for (s = 0; s < i.length; s += r.step) {\n    c = 0;\n    for (var l = s + r.step - 1; l >= s; l--)\n      c = (c << 1) + i[l];\n    a.push(c);\n  }\n  for (var d = this.jpoint(null, null, null), f = this.jpoint(null, null, null), g = o; g > 0; g--) {\n    for (s = 0; s < a.length; s++)\n      c = a[s], c === g ? f = f.mixedAdd(r.points[s]) : c === -g && (f = f.mixedAdd(r.points[s].neg()));\n    d = d.add(f);\n  }\n  return d.toP();\n};\nui.prototype._wnafMul = function(t, n) {\n  var r = 4, i = t._getNAFPoints(r);\n  r = i.wnd;\n  for (var o = i.points, a = Vs(n, r, this._bitLength), s = this.jpoint(null, null, null), c = a.length - 1; c >= 0; c--) {\n    for (var l = 0; c >= 0 && a[c] === 0; c--)\n      l++;\n    if (c >= 0 && l++, s = s.dblp(l), c < 0)\n      break;\n    var d = a[c];\n    zs(d !== 0), t.type === \"affine\" ? d > 0 ? s = s.mixedAdd(o[d - 1 >> 1]) : s = s.mixedAdd(o[-d - 1 >> 1].neg()) : d > 0 ? s = s.add(o[d - 1 >> 1]) : s = s.add(o[-d - 1 >> 1].neg());\n  }\n  return t.type === \"affine\" ? s.toP() : s;\n};\nui.prototype._wnafMulAdd = function(t, n, r, i, o) {\n  var a = this._wnafT1, s = this._wnafT2, c = this._wnafT3, l = 0, d, f, g;\n  for (d = 0; d < i; d++) {\n    g = n[d];\n    var b = g._getNAFPoints(t);\n    a[d] = b.wnd, s[d] = b.points;\n  }\n  for (d = i - 1; d >= 1; d -= 2) {\n    var x = d - 1, m = d;\n    if (a[x] !== 1 || a[m] !== 1) {\n      c[x] = Vs(r[x], a[x], this._bitLength), c[m] = Vs(r[m], a[m], this._bitLength), l = Math.max(c[x].length, l), l = Math.max(c[m].length, l);\n      continue;\n    }\n    var C = [\n      n[x],\n      /* 1 */\n      null,\n      /* 3 */\n      null,\n      /* 5 */\n      n[m]\n      /* 7 */\n    ];\n    n[x].y.cmp(n[m].y) === 0 ? (C[1] = n[x].add(n[m]), C[2] = n[x].toJ().mixedAdd(n[m].neg())) : n[x].y.cmp(n[m].y.redNeg()) === 0 ? (C[1] = n[x].toJ().mixedAdd(n[m]), C[2] = n[x].add(n[m].neg())) : (C[1] = n[x].toJ().mixedAdd(n[m]), C[2] = n[x].toJ().mixedAdd(n[m].neg()));\n    var S = [\n      -3,\n      /* -1 -1 */\n      -1,\n      /* -1 0 */\n      -5,\n      /* -1 1 */\n      -7,\n      /* 0 -1 */\n      0,\n      /* 0 0 */\n      7,\n      /* 0 1 */\n      5,\n      /* 1 -1 */\n      1,\n      /* 1 0 */\n      3\n      /* 1 1 */\n    ], T = sC(r[x], r[m]);\n    for (l = Math.max(T[0].length, l), c[x] = new Array(l), c[m] = new Array(l), f = 0; f < l; f++) {\n      var N = T[0][f] | 0, W = T[1][f] | 0;\n      c[x][f] = S[(N + 1) * 3 + (W + 1)], c[m][f] = 0, s[x] = C;\n    }\n  }\n  var U = this.jpoint(null, null, null), F = this._wnafT4;\n  for (d = l; d >= 0; d--) {\n    for (var j = 0; d >= 0; ) {\n      var K = !0;\n      for (f = 0; f < i; f++)\n        F[f] = c[f][d] | 0, F[f] !== 0 && (K = !1);\n      if (!K)\n        break;\n      j++, d--;\n    }\n    if (d >= 0 && j++, U = U.dblp(j), d < 0)\n      break;\n    for (f = 0; f < i; f++) {\n      var J = F[f];\n      J !== 0 && (J > 0 ? g = s[f][J - 1 >> 1] : J < 0 && (g = s[f][-J - 1 >> 1].neg()), g.type === \"affine\" ? U = U.mixedAdd(g) : U = U.add(g));\n    }\n  }\n  for (d = 0; d < i; d++)\n    s[d] = null;\n  return o ? U : U.toP();\n};\nfunction Dn(e, t) {\n  this.curve = e, this.type = t, this.precomputed = null;\n}\nui.BasePoint = Dn;\nDn.prototype.eq = function() {\n  throw new Error(\"Not implemented\");\n};\nDn.prototype.validate = function() {\n  return this.curve.validate(this);\n};\nui.prototype.decodePoint = function(t, n) {\n  t = Ka.toArray(t, n);\n  var r = this.p.byteLength();\n  if ((t[0] === 4 || t[0] === 6 || t[0] === 7) && t.length - 1 === 2 * r) {\n    t[0] === 6 ? zs(t[t.length - 1] % 2 === 0) : t[0] === 7 && zs(t[t.length - 1] % 2 === 1);\n    var i = this.point(\n      t.slice(1, 1 + r),\n      t.slice(1 + r, 1 + 2 * r)\n    );\n    return i;\n  } else if ((t[0] === 2 || t[0] === 3) && t.length - 1 === r)\n    return this.pointFromX(t.slice(1, 1 + r), t[0] === 3);\n  throw new Error(\"Unknown point format\");\n};\nDn.prototype.encodeCompressed = function(t) {\n  return this.encode(t, !0);\n};\nDn.prototype._encode = function(t) {\n  var n = this.curve.p.byteLength(), r = this.getX().toArray(\"be\", n);\n  return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray(\"be\", n));\n};\nDn.prototype.encode = function(t, n) {\n  return Ka.encode(this._encode(n), t);\n};\nDn.prototype.precompute = function(t) {\n  if (this.precomputed)\n    return this;\n  var n = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  return n.naf = this._getNAFPoints(8), n.doubles = this._getDoubles(4, t), n.beta = this._getBeta(), this.precomputed = n, this;\n};\nDn.prototype._hasDoubles = function(t) {\n  if (!this.precomputed)\n    return !1;\n  var n = this.precomputed.doubles;\n  return n ? n.points.length >= Math.ceil((t.bitLength() + 1) / n.step) : !1;\n};\nDn.prototype._getDoubles = function(t, n) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n  for (var r = [this], i = this, o = 0; o < n; o += t) {\n    for (var a = 0; a < t; a++)\n      i = i.dbl();\n    r.push(i);\n  }\n  return {\n    step: t,\n    points: r\n  };\n};\nDn.prototype._getNAFPoints = function(t) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n  for (var n = [this], r = (1 << t) - 1, i = r === 1 ? null : this.dbl(), o = 1; o < r; o++)\n    n[o] = n[o - 1].add(i);\n  return {\n    wnd: t,\n    points: n\n  };\n};\nDn.prototype._getBeta = function() {\n  return null;\n};\nDn.prototype.dblp = function(t) {\n  for (var n = this, r = 0; r < t; r++)\n    n = n.dbl();\n  return n;\n};\nvar C1 = { exports: {} };\ntypeof Object.create == \"function\" ? C1.exports = function(t, n) {\n  n && (t.super_ = n, t.prototype = Object.create(n.prototype, {\n    constructor: {\n      value: t,\n      enumerable: !1,\n      writable: !0,\n      configurable: !0\n    }\n  }));\n} : C1.exports = function(t, n) {\n  if (n) {\n    t.super_ = n;\n    var r = function() {\n    };\n    r.prototype = n.prototype, t.prototype = new r(), t.prototype.constructor = t;\n  }\n};\nvar bc = C1.exports, cC = Sn, _t = Nr, Fd = bc, Oo = yc, lC = cC.assert;\nfunction Rn(e) {\n  Oo.call(this, \"short\", e), this.a = new _t(e.a, 16).toRed(this.red), this.b = new _t(e.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(e), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);\n}\nFd(Rn, Oo);\nvar dC = Rn;\nRn.prototype._getEndomorphism = function(t) {\n  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {\n    var n, r;\n    if (t.beta)\n      n = new _t(t.beta, 16).toRed(this.red);\n    else {\n      var i = this._getEndoRoots(this.p);\n      n = i[0].cmp(i[1]) < 0 ? i[0] : i[1], n = n.toRed(this.red);\n    }\n    if (t.lambda)\n      r = new _t(t.lambda, 16);\n    else {\n      var o = this._getEndoRoots(this.n);\n      this.g.mul(o[0]).x.cmp(this.g.x.redMul(n)) === 0 ? r = o[0] : (r = o[1], lC(this.g.mul(r).x.cmp(this.g.x.redMul(n)) === 0));\n    }\n    var a;\n    return t.basis ? a = t.basis.map(function(s) {\n      return {\n        a: new _t(s.a, 16),\n        b: new _t(s.b, 16)\n      };\n    }) : a = this._getEndoBasis(r), {\n      beta: n,\n      lambda: r,\n      basis: a\n    };\n  }\n};\nRn.prototype._getEndoRoots = function(t) {\n  var n = t === this.p ? this.red : _t.mont(t), r = new _t(2).toRed(n).redInvm(), i = r.redNeg(), o = new _t(3).toRed(n).redNeg().redSqrt().redMul(r), a = i.redAdd(o).fromRed(), s = i.redSub(o).fromRed();\n  return [a, s];\n};\nRn.prototype._getEndoBasis = function(t) {\n  for (var n = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), r = t, i = this.n.clone(), o = new _t(1), a = new _t(0), s = new _t(0), c = new _t(1), l, d, f, g, b, x, m, C = 0, S, T; r.cmpn(0) !== 0; ) {\n    var N = i.div(r);\n    S = i.sub(N.mul(r)), T = s.sub(N.mul(o));\n    var W = c.sub(N.mul(a));\n    if (!f && S.cmp(n) < 0)\n      l = m.neg(), d = o, f = S.neg(), g = T;\n    else if (f && ++C === 2)\n      break;\n    m = S, i = r, r = S, s = o, o = T, c = a, a = W;\n  }\n  b = S.neg(), x = T;\n  var U = f.sqr().add(g.sqr()), F = b.sqr().add(x.sqr());\n  return F.cmp(U) >= 0 && (b = l, x = d), f.negative && (f = f.neg(), g = g.neg()), b.negative && (b = b.neg(), x = x.neg()), [\n    { a: f, b: g },\n    { a: b, b: x }\n  ];\n};\nRn.prototype._endoSplit = function(t) {\n  var n = this.endo.basis, r = n[0], i = n[1], o = i.b.mul(t).divRound(this.n), a = r.b.neg().mul(t).divRound(this.n), s = o.mul(r.a), c = a.mul(i.a), l = o.mul(r.b), d = a.mul(i.b), f = t.sub(s).sub(c), g = l.add(d).neg();\n  return { k1: f, k2: g };\n};\nRn.prototype.pointFromX = function(t, n) {\n  t = new _t(t, 16), t.red || (t = t.toRed(this.red));\n  var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), i = r.redSqrt();\n  if (i.redSqr().redSub(r).cmp(this.zero) !== 0)\n    throw new Error(\"invalid point\");\n  var o = i.fromRed().isOdd();\n  return (n && !o || !n && o) && (i = i.redNeg()), this.point(t, i);\n};\nRn.prototype.validate = function(t) {\n  if (t.inf)\n    return !0;\n  var n = t.x, r = t.y, i = this.a.redMul(n), o = n.redSqr().redMul(n).redIAdd(i).redIAdd(this.b);\n  return r.redSqr().redISub(o).cmpn(0) === 0;\n};\nRn.prototype._endoWnafMulAdd = function(t, n, r) {\n  for (var i = this._endoWnafT1, o = this._endoWnafT2, a = 0; a < t.length; a++) {\n    var s = this._endoSplit(n[a]), c = t[a], l = c._getBeta();\n    s.k1.negative && (s.k1.ineg(), c = c.neg(!0)), s.k2.negative && (s.k2.ineg(), l = l.neg(!0)), i[a * 2] = c, i[a * 2 + 1] = l, o[a * 2] = s.k1, o[a * 2 + 1] = s.k2;\n  }\n  for (var d = this._wnafMulAdd(1, i, o, a * 2, r), f = 0; f < a * 2; f++)\n    i[f] = null, o[f] = null;\n  return d;\n};\nfunction qt(e, t, n, r) {\n  Oo.BasePoint.call(this, e, \"affine\"), t === null && n === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new _t(t, 16), this.y = new _t(n, 16), r && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);\n}\nFd(qt, Oo.BasePoint);\nRn.prototype.point = function(t, n, r) {\n  return new qt(this, t, n, r);\n};\nRn.prototype.pointFromJSON = function(t, n) {\n  return qt.fromJSON(this, t, n);\n};\nqt.prototype._getBeta = function() {\n  if (this.curve.endo) {\n    var t = this.precomputed;\n    if (t && t.beta)\n      return t.beta;\n    var n = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n    if (t) {\n      var r = this.curve, i = function(o) {\n        return r.point(o.x.redMul(r.endo.beta), o.y);\n      };\n      t.beta = n, n.precomputed = {\n        beta: null,\n        naf: t.naf && {\n          wnd: t.naf.wnd,\n          points: t.naf.points.map(i)\n        },\n        doubles: t.doubles && {\n          step: t.doubles.step,\n          points: t.doubles.points.map(i)\n        }\n      };\n    }\n    return n;\n  }\n};\nqt.prototype.toJSON = function() {\n  return this.precomputed ? [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }] : [this.x, this.y];\n};\nqt.fromJSON = function(t, n, r) {\n  typeof n == \"string\" && (n = JSON.parse(n));\n  var i = t.point(n[0], n[1], r);\n  if (!n[2])\n    return i;\n  function o(s) {\n    return t.point(s[0], s[1], r);\n  }\n  var a = n[2];\n  return i.precomputed = {\n    beta: null,\n    doubles: a.doubles && {\n      step: a.doubles.step,\n      points: [i].concat(a.doubles.points.map(o))\n    },\n    naf: a.naf && {\n      wnd: a.naf.wnd,\n      points: [i].concat(a.naf.points.map(o))\n    }\n  }, i;\n};\nqt.prototype.inspect = function() {\n  return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \">\";\n};\nqt.prototype.isInfinity = function() {\n  return this.inf;\n};\nqt.prototype.add = function(t) {\n  if (this.inf)\n    return t;\n  if (t.inf)\n    return this;\n  if (this.eq(t))\n    return this.dbl();\n  if (this.neg().eq(t))\n    return this.curve.point(null, null);\n  if (this.x.cmp(t.x) === 0)\n    return this.curve.point(null, null);\n  var n = this.y.redSub(t.y);\n  n.cmpn(0) !== 0 && (n = n.redMul(this.x.redSub(t.x).redInvm()));\n  var r = n.redSqr().redISub(this.x).redISub(t.x), i = n.redMul(this.x.redSub(r)).redISub(this.y);\n  return this.curve.point(r, i);\n};\nqt.prototype.dbl = function() {\n  if (this.inf)\n    return this;\n  var t = this.y.redAdd(this.y);\n  if (t.cmpn(0) === 0)\n    return this.curve.point(null, null);\n  var n = this.curve.a, r = this.x.redSqr(), i = t.redInvm(), o = r.redAdd(r).redIAdd(r).redIAdd(n).redMul(i), a = o.redSqr().redISub(this.x.redAdd(this.x)), s = o.redMul(this.x.redSub(a)).redISub(this.y);\n  return this.curve.point(a, s);\n};\nqt.prototype.getX = function() {\n  return this.x.fromRed();\n};\nqt.prototype.getY = function() {\n  return this.y.fromRed();\n};\nqt.prototype.mul = function(t) {\n  return t = new _t(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t);\n};\nqt.prototype.mulAdd = function(t, n, r) {\n  var i = [this, n], o = [t, r];\n  return this.curve.endo ? this.curve._endoWnafMulAdd(i, o) : this.curve._wnafMulAdd(1, i, o, 2);\n};\nqt.prototype.jmulAdd = function(t, n, r) {\n  var i = [this, n], o = [t, r];\n  return this.curve.endo ? this.curve._endoWnafMulAdd(i, o, !0) : this.curve._wnafMulAdd(1, i, o, 2, !0);\n};\nqt.prototype.eq = function(t) {\n  return this === t || this.inf === t.inf && (this.inf || this.x.cmp(t.x) === 0 && this.y.cmp(t.y) === 0);\n};\nqt.prototype.neg = function(t) {\n  if (this.inf)\n    return this;\n  var n = this.curve.point(this.x, this.y.redNeg());\n  if (t && this.precomputed) {\n    var r = this.precomputed, i = function(o) {\n      return o.neg();\n    };\n    n.precomputed = {\n      naf: r.naf && {\n        wnd: r.naf.wnd,\n        points: r.naf.points.map(i)\n      },\n      doubles: r.doubles && {\n        step: r.doubles.step,\n        points: r.doubles.points.map(i)\n      }\n    };\n  }\n  return n;\n};\nqt.prototype.toJ = function() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n  var t = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return t;\n};\nfunction Jt(e, t, n, r) {\n  Oo.BasePoint.call(this, e, \"jacobian\"), t === null && n === null && r === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new _t(0)) : (this.x = new _t(t, 16), this.y = new _t(n, 16), this.z = new _t(r, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;\n}\nFd(Jt, Oo.BasePoint);\nRn.prototype.jpoint = function(t, n, r) {\n  return new Jt(this, t, n, r);\n};\nJt.prototype.toP = function() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n  var t = this.z.redInvm(), n = t.redSqr(), r = this.x.redMul(n), i = this.y.redMul(n).redMul(t);\n  return this.curve.point(r, i);\n};\nJt.prototype.neg = function() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\nJt.prototype.add = function(t) {\n  if (this.isInfinity())\n    return t;\n  if (t.isInfinity())\n    return this;\n  var n = t.z.redSqr(), r = this.z.redSqr(), i = this.x.redMul(n), o = t.x.redMul(r), a = this.y.redMul(n.redMul(t.z)), s = t.y.redMul(r.redMul(this.z)), c = i.redSub(o), l = a.redSub(s);\n  if (c.cmpn(0) === 0)\n    return l.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n  var d = c.redSqr(), f = d.redMul(c), g = i.redMul(d), b = l.redSqr().redIAdd(f).redISub(g).redISub(g), x = l.redMul(g.redISub(b)).redISub(a.redMul(f)), m = this.z.redMul(t.z).redMul(c);\n  return this.curve.jpoint(b, x, m);\n};\nJt.prototype.mixedAdd = function(t) {\n  if (this.isInfinity())\n    return t.toJ();\n  if (t.isInfinity())\n    return this;\n  var n = this.z.redSqr(), r = this.x, i = t.x.redMul(n), o = this.y, a = t.y.redMul(n).redMul(this.z), s = r.redSub(i), c = o.redSub(a);\n  if (s.cmpn(0) === 0)\n    return c.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();\n  var l = s.redSqr(), d = l.redMul(s), f = r.redMul(l), g = c.redSqr().redIAdd(d).redISub(f).redISub(f), b = c.redMul(f.redISub(g)).redISub(o.redMul(d)), x = this.z.redMul(s);\n  return this.curve.jpoint(g, b, x);\n};\nJt.prototype.dblp = function(t) {\n  if (t === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!t)\n    return this.dbl();\n  var n;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (n = 0; n < t; n++)\n      r = r.dbl();\n    return r;\n  }\n  var i = this.curve.a, o = this.curve.tinv, a = this.x, s = this.y, c = this.z, l = c.redSqr().redSqr(), d = s.redAdd(s);\n  for (n = 0; n < t; n++) {\n    var f = a.redSqr(), g = d.redSqr(), b = g.redSqr(), x = f.redAdd(f).redIAdd(f).redIAdd(i.redMul(l)), m = a.redMul(g), C = x.redSqr().redISub(m.redAdd(m)), S = m.redISub(C), T = x.redMul(S);\n    T = T.redIAdd(T).redISub(b);\n    var N = d.redMul(c);\n    n + 1 < t && (l = l.redMul(b)), a = C, c = N, d = T;\n  }\n  return this.curve.jpoint(a, d.redMul(o), c);\n};\nJt.prototype.dbl = function() {\n  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();\n};\nJt.prototype._zeroDbl = function() {\n  var t, n, r;\n  if (this.zOne) {\n    var i = this.x.redSqr(), o = this.y.redSqr(), a = o.redSqr(), s = this.x.redAdd(o).redSqr().redISub(i).redISub(a);\n    s = s.redIAdd(s);\n    var c = i.redAdd(i).redIAdd(i), l = c.redSqr().redISub(s).redISub(s), d = a.redIAdd(a);\n    d = d.redIAdd(d), d = d.redIAdd(d), t = l, n = c.redMul(s.redISub(l)).redISub(d), r = this.y.redAdd(this.y);\n  } else {\n    var f = this.x.redSqr(), g = this.y.redSqr(), b = g.redSqr(), x = this.x.redAdd(g).redSqr().redISub(f).redISub(b);\n    x = x.redIAdd(x);\n    var m = f.redAdd(f).redIAdd(f), C = m.redSqr(), S = b.redIAdd(b);\n    S = S.redIAdd(S), S = S.redIAdd(S), t = C.redISub(x).redISub(x), n = m.redMul(x.redISub(t)).redISub(S), r = this.y.redMul(this.z), r = r.redIAdd(r);\n  }\n  return this.curve.jpoint(t, n, r);\n};\nJt.prototype._threeDbl = function() {\n  var t, n, r;\n  if (this.zOne) {\n    var i = this.x.redSqr(), o = this.y.redSqr(), a = o.redSqr(), s = this.x.redAdd(o).redSqr().redISub(i).redISub(a);\n    s = s.redIAdd(s);\n    var c = i.redAdd(i).redIAdd(i).redIAdd(this.curve.a), l = c.redSqr().redISub(s).redISub(s);\n    t = l;\n    var d = a.redIAdd(a);\n    d = d.redIAdd(d), d = d.redIAdd(d), n = c.redMul(s.redISub(l)).redISub(d), r = this.y.redAdd(this.y);\n  } else {\n    var f = this.z.redSqr(), g = this.y.redSqr(), b = this.x.redMul(g), x = this.x.redSub(f).redMul(this.x.redAdd(f));\n    x = x.redAdd(x).redIAdd(x);\n    var m = b.redIAdd(b);\n    m = m.redIAdd(m);\n    var C = m.redAdd(m);\n    t = x.redSqr().redISub(C), r = this.y.redAdd(this.z).redSqr().redISub(g).redISub(f);\n    var S = g.redSqr();\n    S = S.redIAdd(S), S = S.redIAdd(S), S = S.redIAdd(S), n = x.redMul(m.redISub(t)).redISub(S);\n  }\n  return this.curve.jpoint(t, n, r);\n};\nJt.prototype._dbl = function() {\n  var t = this.curve.a, n = this.x, r = this.y, i = this.z, o = i.redSqr().redSqr(), a = n.redSqr(), s = r.redSqr(), c = a.redAdd(a).redIAdd(a).redIAdd(t.redMul(o)), l = n.redAdd(n);\n  l = l.redIAdd(l);\n  var d = l.redMul(s), f = c.redSqr().redISub(d.redAdd(d)), g = d.redISub(f), b = s.redSqr();\n  b = b.redIAdd(b), b = b.redIAdd(b), b = b.redIAdd(b);\n  var x = c.redMul(g).redISub(b), m = r.redAdd(r).redMul(i);\n  return this.curve.jpoint(f, x, m);\n};\nJt.prototype.trpl = function() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n  var t = this.x.redSqr(), n = this.y.redSqr(), r = this.z.redSqr(), i = n.redSqr(), o = t.redAdd(t).redIAdd(t), a = o.redSqr(), s = this.x.redAdd(n).redSqr().redISub(t).redISub(i);\n  s = s.redIAdd(s), s = s.redAdd(s).redIAdd(s), s = s.redISub(a);\n  var c = s.redSqr(), l = i.redIAdd(i);\n  l = l.redIAdd(l), l = l.redIAdd(l), l = l.redIAdd(l);\n  var d = o.redIAdd(s).redSqr().redISub(a).redISub(c).redISub(l), f = n.redMul(d);\n  f = f.redIAdd(f), f = f.redIAdd(f);\n  var g = this.x.redMul(c).redISub(f);\n  g = g.redIAdd(g), g = g.redIAdd(g);\n  var b = this.y.redMul(d.redMul(l.redISub(d)).redISub(s.redMul(c)));\n  b = b.redIAdd(b), b = b.redIAdd(b), b = b.redIAdd(b);\n  var x = this.z.redAdd(s).redSqr().redISub(r).redISub(c);\n  return this.curve.jpoint(g, b, x);\n};\nJt.prototype.mul = function(t, n) {\n  return t = new _t(t, n), this.curve._wnafMul(this, t);\n};\nJt.prototype.eq = function(t) {\n  if (t.type === \"affine\")\n    return this.eq(t.toJ());\n  if (this === t)\n    return !0;\n  var n = this.z.redSqr(), r = t.z.redSqr();\n  if (this.x.redMul(r).redISub(t.x.redMul(n)).cmpn(0) !== 0)\n    return !1;\n  var i = n.redMul(this.z), o = r.redMul(t.z);\n  return this.y.redMul(o).redISub(t.y.redMul(i)).cmpn(0) === 0;\n};\nJt.prototype.eqXToP = function(t) {\n  var n = this.z.redSqr(), r = t.toRed(this.curve.red).redMul(n);\n  if (this.x.cmp(r) === 0)\n    return !0;\n  for (var i = t.clone(), o = this.curve.redN.redMul(n); ; ) {\n    if (i.iadd(this.curve.n), i.cmp(this.curve.p) >= 0)\n      return !1;\n    if (r.redIAdd(o), this.x.cmp(r) === 0)\n      return !0;\n  }\n};\nJt.prototype.inspect = function() {\n  return this.isInfinity() ? \"<EC JPoint Infinity>\" : \"<EC JPoint x: \" + this.x.toString(16, 2) + \" y: \" + this.y.toString(16, 2) + \" z: \" + this.z.toString(16, 2) + \">\";\n};\nJt.prototype.isInfinity = function() {\n  return this.z.cmpn(0) === 0;\n};\nvar eo = Nr, T3 = bc, xc = yc, fC = Sn;\nfunction Ho(e) {\n  xc.call(this, \"mont\", e), this.a = new eo(e.a, 16).toRed(this.red), this.b = new eo(e.b, 16).toRed(this.red), this.i4 = new eo(4).toRed(this.red).redInvm(), this.two = new eo(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\nT3(Ho, xc);\nvar uC = Ho;\nHo.prototype.validate = function(t) {\n  var n = t.normalize().x, r = n.redSqr(), i = r.redMul(n).redAdd(r.redMul(this.a)).redAdd(n), o = i.redSqrt();\n  return o.redSqr().cmp(i) === 0;\n};\nfunction jt(e, t, n) {\n  xc.BasePoint.call(this, e, \"projective\"), t === null && n === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new eo(t, 16), this.z = new eo(n, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));\n}\nT3(jt, xc.BasePoint);\nHo.prototype.decodePoint = function(t, n) {\n  return this.point(fC.toArray(t, n), 1);\n};\nHo.prototype.point = function(t, n) {\n  return new jt(this, t, n);\n};\nHo.prototype.pointFromJSON = function(t) {\n  return jt.fromJSON(this, t);\n};\njt.prototype.precompute = function() {\n};\njt.prototype._encode = function() {\n  return this.getX().toArray(\"be\", this.curve.p.byteLength());\n};\njt.fromJSON = function(t, n) {\n  return new jt(t, n[0], n[1] || t.one);\n};\njt.prototype.inspect = function() {\n  return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" z: \" + this.z.fromRed().toString(16, 2) + \">\";\n};\njt.prototype.isInfinity = function() {\n  return this.z.cmpn(0) === 0;\n};\njt.prototype.dbl = function() {\n  var t = this.x.redAdd(this.z), n = t.redSqr(), r = this.x.redSub(this.z), i = r.redSqr(), o = n.redSub(i), a = n.redMul(i), s = o.redMul(i.redAdd(this.curve.a24.redMul(o)));\n  return this.curve.point(a, s);\n};\njt.prototype.add = function() {\n  throw new Error(\"Not supported on Montgomery curve\");\n};\njt.prototype.diffAdd = function(t, n) {\n  var r = this.x.redAdd(this.z), i = this.x.redSub(this.z), o = t.x.redAdd(t.z), a = t.x.redSub(t.z), s = a.redMul(r), c = o.redMul(i), l = n.z.redMul(s.redAdd(c).redSqr()), d = n.x.redMul(s.redISub(c).redSqr());\n  return this.curve.point(l, d);\n};\njt.prototype.mul = function(t) {\n  for (var n = t.clone(), r = this, i = this.curve.point(null, null), o = this, a = []; n.cmpn(0) !== 0; n.iushrn(1))\n    a.push(n.andln(1));\n  for (var s = a.length - 1; s >= 0; s--)\n    a[s] === 0 ? (r = r.diffAdd(i, o), i = i.dbl()) : (i = r.diffAdd(i, o), r = r.dbl());\n  return i;\n};\njt.prototype.mulAdd = function() {\n  throw new Error(\"Not supported on Montgomery curve\");\n};\njt.prototype.jumlAdd = function() {\n  throw new Error(\"Not supported on Montgomery curve\");\n};\njt.prototype.eq = function(t) {\n  return this.getX().cmp(t.getX()) === 0;\n};\njt.prototype.normalize = function() {\n  return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;\n};\njt.prototype.getX = function() {\n  return this.normalize(), this.x.fromRed();\n};\nvar hC = Sn, kr = Nr, B3 = bc, wc = yc, pC = hC.assert;\nfunction br(e) {\n  this.twisted = (e.a | 0) !== 1, this.mOneA = this.twisted && (e.a | 0) === -1, this.extended = this.mOneA, wc.call(this, \"edwards\", e), this.a = new kr(e.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new kr(e.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new kr(e.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), pC(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (e.c | 0) === 1;\n}\nB3(br, wc);\nvar gC = br;\nbr.prototype._mulA = function(t) {\n  return this.mOneA ? t.redNeg() : this.a.redMul(t);\n};\nbr.prototype._mulC = function(t) {\n  return this.oneC ? t : this.c.redMul(t);\n};\nbr.prototype.jpoint = function(t, n, r, i) {\n  return this.point(t, n, r, i);\n};\nbr.prototype.pointFromX = function(t, n) {\n  t = new kr(t, 16), t.red || (t = t.toRed(this.red));\n  var r = t.redSqr(), i = this.c2.redSub(this.a.redMul(r)), o = this.one.redSub(this.c2.redMul(this.d).redMul(r)), a = i.redMul(o.redInvm()), s = a.redSqrt();\n  if (s.redSqr().redSub(a).cmp(this.zero) !== 0)\n    throw new Error(\"invalid point\");\n  var c = s.fromRed().isOdd();\n  return (n && !c || !n && c) && (s = s.redNeg()), this.point(t, s);\n};\nbr.prototype.pointFromY = function(t, n) {\n  t = new kr(t, 16), t.red || (t = t.toRed(this.red));\n  var r = t.redSqr(), i = r.redSub(this.c2), o = r.redMul(this.d).redMul(this.c2).redSub(this.a), a = i.redMul(o.redInvm());\n  if (a.cmp(this.zero) === 0) {\n    if (n)\n      throw new Error(\"invalid point\");\n    return this.point(this.zero, t);\n  }\n  var s = a.redSqrt();\n  if (s.redSqr().redSub(a).cmp(this.zero) !== 0)\n    throw new Error(\"invalid point\");\n  return s.fromRed().isOdd() !== n && (s = s.redNeg()), this.point(s, t);\n};\nbr.prototype.validate = function(t) {\n  if (t.isInfinity())\n    return !0;\n  t.normalize();\n  var n = t.x.redSqr(), r = t.y.redSqr(), i = n.redMul(this.a).redAdd(r), o = this.c2.redMul(this.one.redAdd(this.d.redMul(n).redMul(r)));\n  return i.cmp(o) === 0;\n};\nfunction wt(e, t, n, r, i) {\n  wc.BasePoint.call(this, e, \"projective\"), t === null && n === null && r === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new kr(t, 16), this.y = new kr(n, 16), this.z = r ? new kr(r, 16) : this.curve.one, this.t = i && new kr(i, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));\n}\nB3(wt, wc.BasePoint);\nbr.prototype.pointFromJSON = function(t) {\n  return wt.fromJSON(this, t);\n};\nbr.prototype.point = function(t, n, r, i) {\n  return new wt(this, t, n, r, i);\n};\nwt.fromJSON = function(t, n) {\n  return new wt(t, n[0], n[1], n[2]);\n};\nwt.prototype.inspect = function() {\n  return this.isInfinity() ? \"<EC Point Infinity>\" : \"<EC Point x: \" + this.x.fromRed().toString(16, 2) + \" y: \" + this.y.fromRed().toString(16, 2) + \" z: \" + this.z.fromRed().toString(16, 2) + \">\";\n};\nwt.prototype.isInfinity = function() {\n  return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);\n};\nwt.prototype._extDbl = function() {\n  var t = this.x.redSqr(), n = this.y.redSqr(), r = this.z.redSqr();\n  r = r.redIAdd(r);\n  var i = this.curve._mulA(t), o = this.x.redAdd(this.y).redSqr().redISub(t).redISub(n), a = i.redAdd(n), s = a.redSub(r), c = i.redSub(n), l = o.redMul(s), d = a.redMul(c), f = o.redMul(c), g = s.redMul(a);\n  return this.curve.point(l, d, g, f);\n};\nwt.prototype._projDbl = function() {\n  var t = this.x.redAdd(this.y).redSqr(), n = this.x.redSqr(), r = this.y.redSqr(), i, o, a, s, c, l;\n  if (this.curve.twisted) {\n    s = this.curve._mulA(n);\n    var d = s.redAdd(r);\n    this.zOne ? (i = t.redSub(n).redSub(r).redMul(d.redSub(this.curve.two)), o = d.redMul(s.redSub(r)), a = d.redSqr().redSub(d).redSub(d)) : (c = this.z.redSqr(), l = d.redSub(c).redISub(c), i = t.redSub(n).redISub(r).redMul(l), o = d.redMul(s.redSub(r)), a = d.redMul(l));\n  } else\n    s = n.redAdd(r), c = this.curve._mulC(this.z).redSqr(), l = s.redSub(c).redSub(c), i = this.curve._mulC(t.redISub(s)).redMul(l), o = this.curve._mulC(s).redMul(n.redISub(r)), a = s.redMul(l);\n  return this.curve.point(i, o, a);\n};\nwt.prototype.dbl = function() {\n  return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();\n};\nwt.prototype._extAdd = function(t) {\n  var n = this.y.redSub(this.x).redMul(t.y.redSub(t.x)), r = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)), i = this.t.redMul(this.curve.dd).redMul(t.t), o = this.z.redMul(t.z.redAdd(t.z)), a = r.redSub(n), s = o.redSub(i), c = o.redAdd(i), l = r.redAdd(n), d = a.redMul(s), f = c.redMul(l), g = a.redMul(l), b = s.redMul(c);\n  return this.curve.point(d, f, b, g);\n};\nwt.prototype._projAdd = function(t) {\n  var n = this.z.redMul(t.z), r = n.redSqr(), i = this.x.redMul(t.x), o = this.y.redMul(t.y), a = this.curve.d.redMul(i).redMul(o), s = r.redSub(a), c = r.redAdd(a), l = this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(i).redISub(o), d = n.redMul(s).redMul(l), f, g;\n  return this.curve.twisted ? (f = n.redMul(c).redMul(o.redSub(this.curve._mulA(i))), g = s.redMul(c)) : (f = n.redMul(c).redMul(o.redSub(i)), g = this.curve._mulC(s).redMul(c)), this.curve.point(d, f, g);\n};\nwt.prototype.add = function(t) {\n  return this.isInfinity() ? t : t.isInfinity() ? this : this.curve.extended ? this._extAdd(t) : this._projAdd(t);\n};\nwt.prototype.mul = function(t) {\n  return this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve._wnafMul(this, t);\n};\nwt.prototype.mulAdd = function(t, n, r) {\n  return this.curve._wnafMulAdd(1, [this, n], [t, r], 2, !1);\n};\nwt.prototype.jmulAdd = function(t, n, r) {\n  return this.curve._wnafMulAdd(1, [this, n], [t, r], 2, !0);\n};\nwt.prototype.normalize = function() {\n  if (this.zOne)\n    return this;\n  var t = this.z.redInvm();\n  return this.x = this.x.redMul(t), this.y = this.y.redMul(t), this.t && (this.t = this.t.redMul(t)), this.z = this.curve.one, this.zOne = !0, this;\n};\nwt.prototype.neg = function() {\n  return this.curve.point(\n    this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg()\n  );\n};\nwt.prototype.getX = function() {\n  return this.normalize(), this.x.fromRed();\n};\nwt.prototype.getY = function() {\n  return this.normalize(), this.y.fromRed();\n};\nwt.prototype.eq = function(t) {\n  return this === t || this.getX().cmp(t.getX()) === 0 && this.getY().cmp(t.getY()) === 0;\n};\nwt.prototype.eqXToP = function(t) {\n  var n = t.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(n) === 0)\n    return !0;\n  for (var r = t.clone(), i = this.curve.redN.redMul(this.z); ; ) {\n    if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0)\n      return !1;\n    if (n.redIAdd(i), this.x.cmp(n) === 0)\n      return !0;\n  }\n};\nwt.prototype.toP = wt.prototype.normalize;\nwt.prototype.mixedAdd = wt.prototype.add;\n(function(e) {\n  var t = e;\n  t.base = yc, t.short = dC, t.mont = uC, t.edwards = gC;\n})(Wd);\nvar $c = {}, Cc = {}, Ve = {}, mC = Ki, vC = bc;\nVe.inherits = vC;\nfunction yC(e, t) {\n  return (e.charCodeAt(t) & 64512) !== 55296 || t < 0 || t + 1 >= e.length ? !1 : (e.charCodeAt(t + 1) & 64512) === 56320;\n}\nfunction bC(e, t) {\n  if (Array.isArray(e))\n    return e.slice();\n  if (!e)\n    return [];\n  var n = [];\n  if (typeof e == \"string\")\n    if (t) {\n      if (t === \"hex\")\n        for (e = e.replace(/[^a-z0-9]+/ig, \"\"), e.length % 2 !== 0 && (e = \"0\" + e), i = 0; i < e.length; i += 2)\n          n.push(parseInt(e[i] + e[i + 1], 16));\n    } else for (var r = 0, i = 0; i < e.length; i++) {\n      var o = e.charCodeAt(i);\n      o < 128 ? n[r++] = o : o < 2048 ? (n[r++] = o >> 6 | 192, n[r++] = o & 63 | 128) : yC(e, i) ? (o = 65536 + ((o & 1023) << 10) + (e.charCodeAt(++i) & 1023), n[r++] = o >> 18 | 240, n[r++] = o >> 12 & 63 | 128, n[r++] = o >> 6 & 63 | 128, n[r++] = o & 63 | 128) : (n[r++] = o >> 12 | 224, n[r++] = o >> 6 & 63 | 128, n[r++] = o & 63 | 128);\n    }\n  else\n    for (i = 0; i < e.length; i++)\n      n[i] = e[i] | 0;\n  return n;\n}\nVe.toArray = bC;\nfunction xC(e) {\n  for (var t = \"\", n = 0; n < e.length; n++)\n    t += D3(e[n].toString(16));\n  return t;\n}\nVe.toHex = xC;\nfunction I3(e) {\n  var t = e >>> 24 | e >>> 8 & 65280 | e << 8 & 16711680 | (e & 255) << 24;\n  return t >>> 0;\n}\nVe.htonl = I3;\nfunction wC(e, t) {\n  for (var n = \"\", r = 0; r < e.length; r++) {\n    var i = e[r];\n    t === \"little\" && (i = I3(i)), n += R3(i.toString(16));\n  }\n  return n;\n}\nVe.toHex32 = wC;\nfunction D3(e) {\n  return e.length === 1 ? \"0\" + e : e;\n}\nVe.zero2 = D3;\nfunction R3(e) {\n  return e.length === 7 ? \"0\" + e : e.length === 6 ? \"00\" + e : e.length === 5 ? \"000\" + e : e.length === 4 ? \"0000\" + e : e.length === 3 ? \"00000\" + e : e.length === 2 ? \"000000\" + e : e.length === 1 ? \"0000000\" + e : e;\n}\nVe.zero8 = R3;\nfunction $C(e, t, n, r) {\n  var i = n - t;\n  mC(i % 4 === 0);\n  for (var o = new Array(i / 4), a = 0, s = t; a < o.length; a++, s += 4) {\n    var c;\n    r === \"big\" ? c = e[s] << 24 | e[s + 1] << 16 | e[s + 2] << 8 | e[s + 3] : c = e[s + 3] << 24 | e[s + 2] << 16 | e[s + 1] << 8 | e[s], o[a] = c >>> 0;\n  }\n  return o;\n}\nVe.join32 = $C;\nfunction CC(e, t) {\n  for (var n = new Array(e.length * 4), r = 0, i = 0; r < e.length; r++, i += 4) {\n    var o = e[r];\n    t === \"big\" ? (n[i] = o >>> 24, n[i + 1] = o >>> 16 & 255, n[i + 2] = o >>> 8 & 255, n[i + 3] = o & 255) : (n[i + 3] = o >>> 24, n[i + 2] = o >>> 16 & 255, n[i + 1] = o >>> 8 & 255, n[i] = o & 255);\n  }\n  return n;\n}\nVe.split32 = CC;\nfunction SC(e, t) {\n  return e >>> t | e << 32 - t;\n}\nVe.rotr32 = SC;\nfunction MC(e, t) {\n  return e << t | e >>> 32 - t;\n}\nVe.rotl32 = MC;\nfunction LC(e, t) {\n  return e + t >>> 0;\n}\nVe.sum32 = LC;\nfunction AC(e, t, n) {\n  return e + t + n >>> 0;\n}\nVe.sum32_3 = AC;\nfunction kC(e, t, n, r) {\n  return e + t + n + r >>> 0;\n}\nVe.sum32_4 = kC;\nfunction _C(e, t, n, r, i) {\n  return e + t + n + r + i >>> 0;\n}\nVe.sum32_5 = _C;\nfunction EC(e, t, n, r) {\n  var i = e[t], o = e[t + 1], a = r + o >>> 0, s = (a < r ? 1 : 0) + n + i;\n  e[t] = s >>> 0, e[t + 1] = a;\n}\nVe.sum64 = EC;\nfunction TC(e, t, n, r) {\n  var i = t + r >>> 0, o = (i < t ? 1 : 0) + e + n;\n  return o >>> 0;\n}\nVe.sum64_hi = TC;\nfunction BC(e, t, n, r) {\n  var i = t + r;\n  return i >>> 0;\n}\nVe.sum64_lo = BC;\nfunction IC(e, t, n, r, i, o, a, s) {\n  var c = 0, l = t;\n  l = l + r >>> 0, c += l < t ? 1 : 0, l = l + o >>> 0, c += l < o ? 1 : 0, l = l + s >>> 0, c += l < s ? 1 : 0;\n  var d = e + n + i + a + c;\n  return d >>> 0;\n}\nVe.sum64_4_hi = IC;\nfunction DC(e, t, n, r, i, o, a, s) {\n  var c = t + r + o + s;\n  return c >>> 0;\n}\nVe.sum64_4_lo = DC;\nfunction RC(e, t, n, r, i, o, a, s, c, l) {\n  var d = 0, f = t;\n  f = f + r >>> 0, d += f < t ? 1 : 0, f = f + o >>> 0, d += f < o ? 1 : 0, f = f + s >>> 0, d += f < s ? 1 : 0, f = f + l >>> 0, d += f < l ? 1 : 0;\n  var g = e + n + i + a + c + d;\n  return g >>> 0;\n}\nVe.sum64_5_hi = RC;\nfunction PC(e, t, n, r, i, o, a, s, c, l) {\n  var d = t + r + o + s + l;\n  return d >>> 0;\n}\nVe.sum64_5_lo = PC;\nfunction OC(e, t, n) {\n  var r = t << 32 - n | e >>> n;\n  return r >>> 0;\n}\nVe.rotr64_hi = OC;\nfunction HC(e, t, n) {\n  var r = e << 32 - n | t >>> n;\n  return r >>> 0;\n}\nVe.rotr64_lo = HC;\nfunction UC(e, t, n) {\n  return e >>> n;\n}\nVe.shr64_hi = UC;\nfunction NC(e, t, n) {\n  var r = e << 32 - n | t >>> n;\n  return r >>> 0;\n}\nVe.shr64_lo = NC;\nvar Uo = {}, u0 = Ve, VC = Ki;\nfunction Sc() {\n  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = \"big\", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;\n}\nUo.BlockHash = Sc;\nSc.prototype.update = function(t, n) {\n  if (t = u0.toArray(t, n), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {\n    t = this.pending;\n    var r = t.length % this._delta8;\n    this.pending = t.slice(t.length - r, t.length), this.pending.length === 0 && (this.pending = null), t = u0.join32(t, 0, t.length - r, this.endian);\n    for (var i = 0; i < t.length; i += this._delta32)\n      this._update(t, i, i + this._delta32);\n  }\n  return this;\n};\nSc.prototype.digest = function(t) {\n  return this.update(this._pad()), VC(this.pending === null), this._digest(t);\n};\nSc.prototype._pad = function() {\n  var t = this.pendingTotal, n = this._delta8, r = n - (t + this.padLength) % n, i = new Array(r + this.padLength);\n  i[0] = 128;\n  for (var o = 1; o < r; o++)\n    i[o] = 0;\n  if (t <<= 3, this.endian === \"big\") {\n    for (var a = 8; a < this.padLength; a++)\n      i[o++] = 0;\n    i[o++] = 0, i[o++] = 0, i[o++] = 0, i[o++] = 0, i[o++] = t >>> 24 & 255, i[o++] = t >>> 16 & 255, i[o++] = t >>> 8 & 255, i[o++] = t & 255;\n  } else\n    for (i[o++] = t & 255, i[o++] = t >>> 8 & 255, i[o++] = t >>> 16 & 255, i[o++] = t >>> 24 & 255, i[o++] = 0, i[o++] = 0, i[o++] = 0, i[o++] = 0, a = 8; a < this.padLength; a++)\n      i[o++] = 0;\n  return i;\n};\nvar No = {}, xr = {}, zC = Ve, or = zC.rotr32;\nfunction WC(e, t, n, r) {\n  if (e === 0)\n    return P3(t, n, r);\n  if (e === 1 || e === 3)\n    return H3(t, n, r);\n  if (e === 2)\n    return O3(t, n, r);\n}\nxr.ft_1 = WC;\nfunction P3(e, t, n) {\n  return e & t ^ ~e & n;\n}\nxr.ch32 = P3;\nfunction O3(e, t, n) {\n  return e & t ^ e & n ^ t & n;\n}\nxr.maj32 = O3;\nfunction H3(e, t, n) {\n  return e ^ t ^ n;\n}\nxr.p32 = H3;\nfunction FC(e) {\n  return or(e, 2) ^ or(e, 13) ^ or(e, 22);\n}\nxr.s0_256 = FC;\nfunction jC(e) {\n  return or(e, 6) ^ or(e, 11) ^ or(e, 25);\n}\nxr.s1_256 = jC;\nfunction qC(e) {\n  return or(e, 7) ^ or(e, 18) ^ e >>> 3;\n}\nxr.g0_256 = qC;\nfunction ZC(e) {\n  return or(e, 17) ^ or(e, 19) ^ e >>> 10;\n}\nxr.g1_256 = ZC;\nvar yo = Ve, KC = Uo, GC = xr, yl = yo.rotl32, oa = yo.sum32, YC = yo.sum32_5, XC = GC.ft_1, U3 = KC.BlockHash, JC = [\n  1518500249,\n  1859775393,\n  2400959708,\n  3395469782\n];\nfunction fr() {\n  if (!(this instanceof fr))\n    return new fr();\n  U3.call(this), this.h = [\n    1732584193,\n    4023233417,\n    2562383102,\n    271733878,\n    3285377520\n  ], this.W = new Array(80);\n}\nyo.inherits(fr, U3);\nvar QC = fr;\nfr.blockSize = 512;\nfr.outSize = 160;\nfr.hmacStrength = 80;\nfr.padLength = 64;\nfr.prototype._update = function(t, n) {\n  for (var r = this.W, i = 0; i < 16; i++)\n    r[i] = t[n + i];\n  for (; i < r.length; i++)\n    r[i] = yl(r[i - 3] ^ r[i - 8] ^ r[i - 14] ^ r[i - 16], 1);\n  var o = this.h[0], a = this.h[1], s = this.h[2], c = this.h[3], l = this.h[4];\n  for (i = 0; i < r.length; i++) {\n    var d = ~~(i / 20), f = YC(yl(o, 5), XC(d, a, s, c), l, r[i], JC[d]);\n    l = c, c = s, s = yl(a, 30), a = o, o = f;\n  }\n  this.h[0] = oa(this.h[0], o), this.h[1] = oa(this.h[1], a), this.h[2] = oa(this.h[2], s), this.h[3] = oa(this.h[3], c), this.h[4] = oa(this.h[4], l);\n};\nfr.prototype._digest = function(t) {\n  return t === \"hex\" ? yo.toHex32(this.h, \"big\") : yo.split32(this.h, \"big\");\n};\nvar bo = Ve, eS = Uo, Vo = xr, tS = Ki, Un = bo.sum32, nS = bo.sum32_4, rS = bo.sum32_5, iS = Vo.ch32, oS = Vo.maj32, aS = Vo.s0_256, sS = Vo.s1_256, cS = Vo.g0_256, lS = Vo.g1_256, N3 = eS.BlockHash, dS = [\n  1116352408,\n  1899447441,\n  3049323471,\n  3921009573,\n  961987163,\n  1508970993,\n  2453635748,\n  2870763221,\n  3624381080,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  2162078206,\n  2614888103,\n  3248222580,\n  3835390401,\n  4022224774,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  2554220882,\n  2821834349,\n  2952996808,\n  3210313671,\n  3336571891,\n  3584528711,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  2177026350,\n  2456956037,\n  2730485921,\n  2820302411,\n  3259730800,\n  3345764771,\n  3516065817,\n  3600352804,\n  4094571909,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  2227730452,\n  2361852424,\n  2428436474,\n  2756734187,\n  3204031479,\n  3329325298\n];\nfunction ur() {\n  if (!(this instanceof ur))\n    return new ur();\n  N3.call(this), this.h = [\n    1779033703,\n    3144134277,\n    1013904242,\n    2773480762,\n    1359893119,\n    2600822924,\n    528734635,\n    1541459225\n  ], this.k = dS, this.W = new Array(64);\n}\nbo.inherits(ur, N3);\nvar V3 = ur;\nur.blockSize = 512;\nur.outSize = 256;\nur.hmacStrength = 192;\nur.padLength = 64;\nur.prototype._update = function(t, n) {\n  for (var r = this.W, i = 0; i < 16; i++)\n    r[i] = t[n + i];\n  for (; i < r.length; i++)\n    r[i] = nS(lS(r[i - 2]), r[i - 7], cS(r[i - 15]), r[i - 16]);\n  var o = this.h[0], a = this.h[1], s = this.h[2], c = this.h[3], l = this.h[4], d = this.h[5], f = this.h[6], g = this.h[7];\n  for (tS(this.k.length === r.length), i = 0; i < r.length; i++) {\n    var b = rS(g, sS(l), iS(l, d, f), this.k[i], r[i]), x = Un(aS(o), oS(o, a, s));\n    g = f, f = d, d = l, l = Un(c, b), c = s, s = a, a = o, o = Un(b, x);\n  }\n  this.h[0] = Un(this.h[0], o), this.h[1] = Un(this.h[1], a), this.h[2] = Un(this.h[2], s), this.h[3] = Un(this.h[3], c), this.h[4] = Un(this.h[4], l), this.h[5] = Un(this.h[5], d), this.h[6] = Un(this.h[6], f), this.h[7] = Un(this.h[7], g);\n};\nur.prototype._digest = function(t) {\n  return t === \"hex\" ? bo.toHex32(this.h, \"big\") : bo.split32(this.h, \"big\");\n};\nvar S1 = Ve, z3 = V3;\nfunction Rr() {\n  if (!(this instanceof Rr))\n    return new Rr();\n  z3.call(this), this.h = [\n    3238371032,\n    914150663,\n    812702999,\n    4144912697,\n    4290775857,\n    1750603025,\n    1694076839,\n    3204075428\n  ];\n}\nS1.inherits(Rr, z3);\nvar fS = Rr;\nRr.blockSize = 512;\nRr.outSize = 224;\nRr.hmacStrength = 192;\nRr.padLength = 64;\nRr.prototype._digest = function(t) {\n  return t === \"hex\" ? S1.toHex32(this.h.slice(0, 7), \"big\") : S1.split32(this.h.slice(0, 7), \"big\");\n};\nvar gn = Ve, uS = Uo, hS = Ki, ar = gn.rotr64_hi, sr = gn.rotr64_lo, W3 = gn.shr64_hi, F3 = gn.shr64_lo, qr = gn.sum64, bl = gn.sum64_hi, xl = gn.sum64_lo, pS = gn.sum64_4_hi, gS = gn.sum64_4_lo, mS = gn.sum64_5_hi, vS = gn.sum64_5_lo, j3 = uS.BlockHash, yS = [\n  1116352408,\n  3609767458,\n  1899447441,\n  602891725,\n  3049323471,\n  3964484399,\n  3921009573,\n  2173295548,\n  961987163,\n  4081628472,\n  1508970993,\n  3053834265,\n  2453635748,\n  2937671579,\n  2870763221,\n  3664609560,\n  3624381080,\n  2734883394,\n  310598401,\n  1164996542,\n  607225278,\n  1323610764,\n  1426881987,\n  3590304994,\n  1925078388,\n  4068182383,\n  2162078206,\n  991336113,\n  2614888103,\n  633803317,\n  3248222580,\n  3479774868,\n  3835390401,\n  2666613458,\n  4022224774,\n  944711139,\n  264347078,\n  2341262773,\n  604807628,\n  2007800933,\n  770255983,\n  1495990901,\n  1249150122,\n  1856431235,\n  1555081692,\n  3175218132,\n  1996064986,\n  2198950837,\n  2554220882,\n  3999719339,\n  2821834349,\n  766784016,\n  2952996808,\n  2566594879,\n  3210313671,\n  3203337956,\n  3336571891,\n  1034457026,\n  3584528711,\n  2466948901,\n  113926993,\n  3758326383,\n  338241895,\n  168717936,\n  666307205,\n  1188179964,\n  773529912,\n  1546045734,\n  1294757372,\n  1522805485,\n  1396182291,\n  2643833823,\n  1695183700,\n  2343527390,\n  1986661051,\n  1014477480,\n  2177026350,\n  1206759142,\n  2456956037,\n  344077627,\n  2730485921,\n  1290863460,\n  2820302411,\n  3158454273,\n  3259730800,\n  3505952657,\n  3345764771,\n  106217008,\n  3516065817,\n  3606008344,\n  3600352804,\n  1432725776,\n  4094571909,\n  1467031594,\n  275423344,\n  851169720,\n  430227734,\n  3100823752,\n  506948616,\n  1363258195,\n  659060556,\n  3750685593,\n  883997877,\n  3785050280,\n  958139571,\n  3318307427,\n  1322822218,\n  3812723403,\n  1537002063,\n  2003034995,\n  1747873779,\n  3602036899,\n  1955562222,\n  1575990012,\n  2024104815,\n  1125592928,\n  2227730452,\n  2716904306,\n  2361852424,\n  442776044,\n  2428436474,\n  593698344,\n  2756734187,\n  3733110249,\n  3204031479,\n  2999351573,\n  3329325298,\n  3815920427,\n  3391569614,\n  3928383900,\n  3515267271,\n  566280711,\n  3940187606,\n  3454069534,\n  4118630271,\n  4000239992,\n  116418474,\n  1914138554,\n  174292421,\n  2731055270,\n  289380356,\n  3203993006,\n  460393269,\n  320620315,\n  685471733,\n  587496836,\n  852142971,\n  1086792851,\n  1017036298,\n  365543100,\n  1126000580,\n  2618297676,\n  1288033470,\n  3409855158,\n  1501505948,\n  4234509866,\n  1607167915,\n  987167468,\n  1816402316,\n  1246189591\n];\nfunction Vn() {\n  if (!(this instanceof Vn))\n    return new Vn();\n  j3.call(this), this.h = [\n    1779033703,\n    4089235720,\n    3144134277,\n    2227873595,\n    1013904242,\n    4271175723,\n    2773480762,\n    1595750129,\n    1359893119,\n    2917565137,\n    2600822924,\n    725511199,\n    528734635,\n    4215389547,\n    1541459225,\n    327033209\n  ], this.k = yS, this.W = new Array(160);\n}\ngn.inherits(Vn, j3);\nvar q3 = Vn;\nVn.blockSize = 1024;\nVn.outSize = 512;\nVn.hmacStrength = 192;\nVn.padLength = 128;\nVn.prototype._prepareBlock = function(t, n) {\n  for (var r = this.W, i = 0; i < 32; i++)\n    r[i] = t[n + i];\n  for (; i < r.length; i += 2) {\n    var o = _S(r[i - 4], r[i - 3]), a = ES(r[i - 4], r[i - 3]), s = r[i - 14], c = r[i - 13], l = AS(r[i - 30], r[i - 29]), d = kS(r[i - 30], r[i - 29]), f = r[i - 32], g = r[i - 31];\n    r[i] = pS(\n      o,\n      a,\n      s,\n      c,\n      l,\n      d,\n      f,\n      g\n    ), r[i + 1] = gS(\n      o,\n      a,\n      s,\n      c,\n      l,\n      d,\n      f,\n      g\n    );\n  }\n};\nVn.prototype._update = function(t, n) {\n  this._prepareBlock(t, n);\n  var r = this.W, i = this.h[0], o = this.h[1], a = this.h[2], s = this.h[3], c = this.h[4], l = this.h[5], d = this.h[6], f = this.h[7], g = this.h[8], b = this.h[9], x = this.h[10], m = this.h[11], C = this.h[12], S = this.h[13], T = this.h[14], N = this.h[15];\n  hS(this.k.length === r.length);\n  for (var W = 0; W < r.length; W += 2) {\n    var U = T, F = N, j = MS(g, b), K = LS(g, b), J = bS(g, b, x, m, C), X = xS(g, b, x, m, C, S), _ = this.k[W], u = this.k[W + 1], v = r[W], w = r[W + 1], y = mS(\n      U,\n      F,\n      j,\n      K,\n      J,\n      X,\n      _,\n      u,\n      v,\n      w\n    ), $ = vS(\n      U,\n      F,\n      j,\n      K,\n      J,\n      X,\n      _,\n      u,\n      v,\n      w\n    );\n    U = CS(i, o), F = SS(i, o), j = wS(i, o, a, s, c), K = $S(i, o, a, s, c, l);\n    var A = bl(U, F, j, K), H = xl(U, F, j, K);\n    T = C, N = S, C = x, S = m, x = g, m = b, g = bl(d, f, y, $), b = xl(f, f, y, $), d = c, f = l, c = a, l = s, a = i, s = o, i = bl(y, $, A, H), o = xl(y, $, A, H);\n  }\n  qr(this.h, 0, i, o), qr(this.h, 2, a, s), qr(this.h, 4, c, l), qr(this.h, 6, d, f), qr(this.h, 8, g, b), qr(this.h, 10, x, m), qr(this.h, 12, C, S), qr(this.h, 14, T, N);\n};\nVn.prototype._digest = function(t) {\n  return t === \"hex\" ? gn.toHex32(this.h, \"big\") : gn.split32(this.h, \"big\");\n};\nfunction bS(e, t, n, r, i) {\n  var o = e & n ^ ~e & i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction xS(e, t, n, r, i, o) {\n  var a = t & r ^ ~t & o;\n  return a < 0 && (a += 4294967296), a;\n}\nfunction wS(e, t, n, r, i) {\n  var o = e & n ^ e & i ^ n & i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction $S(e, t, n, r, i, o) {\n  var a = t & r ^ t & o ^ r & o;\n  return a < 0 && (a += 4294967296), a;\n}\nfunction CS(e, t) {\n  var n = ar(e, t, 28), r = ar(t, e, 2), i = ar(t, e, 7), o = n ^ r ^ i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction SS(e, t) {\n  var n = sr(e, t, 28), r = sr(t, e, 2), i = sr(t, e, 7), o = n ^ r ^ i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction MS(e, t) {\n  var n = ar(e, t, 14), r = ar(e, t, 18), i = ar(t, e, 9), o = n ^ r ^ i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction LS(e, t) {\n  var n = sr(e, t, 14), r = sr(e, t, 18), i = sr(t, e, 9), o = n ^ r ^ i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction AS(e, t) {\n  var n = ar(e, t, 1), r = ar(e, t, 8), i = W3(e, t, 7), o = n ^ r ^ i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction kS(e, t) {\n  var n = sr(e, t, 1), r = sr(e, t, 8), i = F3(e, t, 7), o = n ^ r ^ i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction _S(e, t) {\n  var n = ar(e, t, 19), r = ar(t, e, 29), i = W3(e, t, 6), o = n ^ r ^ i;\n  return o < 0 && (o += 4294967296), o;\n}\nfunction ES(e, t) {\n  var n = sr(e, t, 19), r = sr(t, e, 29), i = F3(e, t, 6), o = n ^ r ^ i;\n  return o < 0 && (o += 4294967296), o;\n}\nvar M1 = Ve, Z3 = q3;\nfunction Pr() {\n  if (!(this instanceof Pr))\n    return new Pr();\n  Z3.call(this), this.h = [\n    3418070365,\n    3238371032,\n    1654270250,\n    914150663,\n    2438529370,\n    812702999,\n    355462360,\n    4144912697,\n    1731405415,\n    4290775857,\n    2394180231,\n    1750603025,\n    3675008525,\n    1694076839,\n    1203062813,\n    3204075428\n  ];\n}\nM1.inherits(Pr, Z3);\nvar TS = Pr;\nPr.blockSize = 1024;\nPr.outSize = 384;\nPr.hmacStrength = 192;\nPr.padLength = 128;\nPr.prototype._digest = function(t) {\n  return t === \"hex\" ? M1.toHex32(this.h.slice(0, 12), \"big\") : M1.split32(this.h.slice(0, 12), \"big\");\n};\nNo.sha1 = QC;\nNo.sha224 = fS;\nNo.sha256 = V3;\nNo.sha384 = TS;\nNo.sha512 = q3;\nvar K3 = {}, Pi = Ve, BS = Uo, ls = Pi.rotl32, h0 = Pi.sum32, aa = Pi.sum32_3, p0 = Pi.sum32_4, G3 = BS.BlockHash;\nfunction hr() {\n  if (!(this instanceof hr))\n    return new hr();\n  G3.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = \"little\";\n}\nPi.inherits(hr, G3);\nK3.ripemd160 = hr;\nhr.blockSize = 512;\nhr.outSize = 160;\nhr.hmacStrength = 192;\nhr.padLength = 64;\nhr.prototype._update = function(t, n) {\n  for (var r = this.h[0], i = this.h[1], o = this.h[2], a = this.h[3], s = this.h[4], c = r, l = i, d = o, f = a, g = s, b = 0; b < 80; b++) {\n    var x = h0(\n      ls(\n        p0(r, g0(b, i, o, a), t[RS[b] + n], IS(b)),\n        OS[b]\n      ),\n      s\n    );\n    r = s, s = a, a = ls(o, 10), o = i, i = x, x = h0(\n      ls(\n        p0(c, g0(79 - b, l, d, f), t[PS[b] + n], DS(b)),\n        HS[b]\n      ),\n      g\n    ), c = g, g = f, f = ls(d, 10), d = l, l = x;\n  }\n  x = aa(this.h[1], o, f), this.h[1] = aa(this.h[2], a, g), this.h[2] = aa(this.h[3], s, c), this.h[3] = aa(this.h[4], r, l), this.h[4] = aa(this.h[0], i, d), this.h[0] = x;\n};\nhr.prototype._digest = function(t) {\n  return t === \"hex\" ? Pi.toHex32(this.h, \"little\") : Pi.split32(this.h, \"little\");\n};\nfunction g0(e, t, n, r) {\n  return e <= 15 ? t ^ n ^ r : e <= 31 ? t & n | ~t & r : e <= 47 ? (t | ~n) ^ r : e <= 63 ? t & r | n & ~r : t ^ (n | ~r);\n}\nfunction IS(e) {\n  return e <= 15 ? 0 : e <= 31 ? 1518500249 : e <= 47 ? 1859775393 : e <= 63 ? 2400959708 : 2840853838;\n}\nfunction DS(e) {\n  return e <= 15 ? 1352829926 : e <= 31 ? 1548603684 : e <= 47 ? 1836072691 : e <= 63 ? 2053994217 : 0;\n}\nvar RS = [\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  7,\n  4,\n  13,\n  1,\n  10,\n  6,\n  15,\n  3,\n  12,\n  0,\n  9,\n  5,\n  2,\n  14,\n  11,\n  8,\n  3,\n  10,\n  14,\n  4,\n  9,\n  15,\n  8,\n  1,\n  2,\n  7,\n  0,\n  6,\n  13,\n  11,\n  5,\n  12,\n  1,\n  9,\n  11,\n  10,\n  0,\n  8,\n  12,\n  4,\n  13,\n  3,\n  7,\n  15,\n  14,\n  5,\n  6,\n  2,\n  4,\n  0,\n  5,\n  9,\n  7,\n  12,\n  2,\n  10,\n  14,\n  1,\n  3,\n  8,\n  11,\n  6,\n  15,\n  13\n], PS = [\n  5,\n  14,\n  7,\n  0,\n  9,\n  2,\n  11,\n  4,\n  13,\n  6,\n  15,\n  8,\n  1,\n  10,\n  3,\n  12,\n  6,\n  11,\n  3,\n  7,\n  0,\n  13,\n  5,\n  10,\n  14,\n  15,\n  8,\n  12,\n  4,\n  9,\n  1,\n  2,\n  15,\n  5,\n  1,\n  3,\n  7,\n  14,\n  6,\n  9,\n  11,\n  8,\n  12,\n  2,\n  10,\n  0,\n  4,\n  13,\n  8,\n  6,\n  4,\n  1,\n  3,\n  11,\n  15,\n  0,\n  5,\n  12,\n  2,\n  13,\n  9,\n  7,\n  10,\n  14,\n  12,\n  15,\n  10,\n  4,\n  1,\n  5,\n  8,\n  7,\n  6,\n  2,\n  13,\n  14,\n  0,\n  3,\n  9,\n  11\n], OS = [\n  11,\n  14,\n  15,\n  12,\n  5,\n  8,\n  7,\n  9,\n  11,\n  13,\n  14,\n  15,\n  6,\n  7,\n  9,\n  8,\n  7,\n  6,\n  8,\n  13,\n  11,\n  9,\n  7,\n  15,\n  7,\n  12,\n  15,\n  9,\n  11,\n  7,\n  13,\n  12,\n  11,\n  13,\n  6,\n  7,\n  14,\n  9,\n  13,\n  15,\n  14,\n  8,\n  13,\n  6,\n  5,\n  12,\n  7,\n  5,\n  11,\n  12,\n  14,\n  15,\n  14,\n  15,\n  9,\n  8,\n  9,\n  14,\n  5,\n  6,\n  8,\n  6,\n  5,\n  12,\n  9,\n  15,\n  5,\n  11,\n  6,\n  8,\n  13,\n  12,\n  5,\n  12,\n  13,\n  14,\n  11,\n  8,\n  5,\n  6\n], HS = [\n  8,\n  9,\n  9,\n  11,\n  13,\n  15,\n  15,\n  5,\n  7,\n  7,\n  8,\n  11,\n  14,\n  14,\n  12,\n  6,\n  9,\n  13,\n  15,\n  7,\n  12,\n  8,\n  9,\n  11,\n  7,\n  7,\n  12,\n  7,\n  6,\n  15,\n  13,\n  11,\n  9,\n  7,\n  15,\n  11,\n  8,\n  6,\n  6,\n  14,\n  12,\n  13,\n  5,\n  14,\n  13,\n  13,\n  7,\n  5,\n  15,\n  5,\n  8,\n  11,\n  14,\n  14,\n  6,\n  14,\n  6,\n  9,\n  12,\n  9,\n  12,\n  5,\n  15,\n  8,\n  8,\n  5,\n  12,\n  9,\n  12,\n  5,\n  14,\n  6,\n  8,\n  13,\n  6,\n  5,\n  15,\n  13,\n  11,\n  11\n], US = Ve, NS = Ki;\nfunction xo(e, t, n) {\n  if (!(this instanceof xo))\n    return new xo(e, t, n);\n  this.Hash = e, this.blockSize = e.blockSize / 8, this.outSize = e.outSize / 8, this.inner = null, this.outer = null, this._init(US.toArray(t, n));\n}\nvar VS = xo;\nxo.prototype._init = function(t) {\n  t.length > this.blockSize && (t = new this.Hash().update(t).digest()), NS(t.length <= this.blockSize);\n  for (var n = t.length; n < this.blockSize; n++)\n    t.push(0);\n  for (n = 0; n < t.length; n++)\n    t[n] ^= 54;\n  for (this.inner = new this.Hash().update(t), n = 0; n < t.length; n++)\n    t[n] ^= 106;\n  this.outer = new this.Hash().update(t);\n};\nxo.prototype.update = function(t, n) {\n  return this.inner.update(t, n), this;\n};\nxo.prototype.digest = function(t) {\n  return this.outer.update(this.inner.digest()), this.outer.digest(t);\n};\n(function(e) {\n  var t = e;\n  t.utils = Ve, t.common = Uo, t.sha = No, t.ripemd = K3, t.hmac = VS, t.sha1 = t.sha.sha1, t.sha256 = t.sha.sha256, t.sha224 = t.sha.sha224, t.sha384 = t.sha.sha384, t.sha512 = t.sha.sha512, t.ripemd160 = t.ripemd.ripemd160;\n})(Cc);\nvar wl, m0;\nfunction zS() {\n  return m0 || (m0 = 1, wl = {\n    doubles: {\n      step: 4,\n      points: [\n        [\n          \"e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a\",\n          \"f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821\"\n        ],\n        [\n          \"8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508\",\n          \"11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf\"\n        ],\n        [\n          \"175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739\",\n          \"d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695\"\n        ],\n        [\n          \"363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640\",\n          \"4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9\"\n        ],\n        [\n          \"8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c\",\n          \"4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36\"\n        ],\n        [\n          \"723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda\",\n          \"96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f\"\n        ],\n        [\n          \"eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa\",\n          \"5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999\"\n        ],\n        [\n          \"100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0\",\n          \"cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09\"\n        ],\n        [\n          \"e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d\",\n          \"9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d\"\n        ],\n        [\n          \"feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d\",\n          \"e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088\"\n        ],\n        [\n          \"da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1\",\n          \"9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d\"\n        ],\n        [\n          \"53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0\",\n          \"5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8\"\n        ],\n        [\n          \"8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047\",\n          \"10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a\"\n        ],\n        [\n          \"385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862\",\n          \"283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453\"\n        ],\n        [\n          \"6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7\",\n          \"7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160\"\n        ],\n        [\n          \"3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd\",\n          \"56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0\"\n        ],\n        [\n          \"85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83\",\n          \"7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6\"\n        ],\n        [\n          \"948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a\",\n          \"53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589\"\n        ],\n        [\n          \"6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8\",\n          \"bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17\"\n        ],\n        [\n          \"e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d\",\n          \"4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda\"\n        ],\n        [\n          \"e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725\",\n          \"7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd\"\n        ],\n        [\n          \"213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754\",\n          \"4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2\"\n        ],\n        [\n          \"4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c\",\n          \"17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6\"\n        ],\n        [\n          \"fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6\",\n          \"6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f\"\n        ],\n        [\n          \"76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39\",\n          \"c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01\"\n        ],\n        [\n          \"c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891\",\n          \"893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3\"\n        ],\n        [\n          \"d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b\",\n          \"febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f\"\n        ],\n        [\n          \"b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03\",\n          \"2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7\"\n        ],\n        [\n          \"e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d\",\n          \"eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78\"\n        ],\n        [\n          \"a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070\",\n          \"7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1\"\n        ],\n        [\n          \"90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4\",\n          \"e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150\"\n        ],\n        [\n          \"8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da\",\n          \"662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82\"\n        ],\n        [\n          \"e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11\",\n          \"1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc\"\n        ],\n        [\n          \"8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e\",\n          \"efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b\"\n        ],\n        [\n          \"e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41\",\n          \"2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51\"\n        ],\n        [\n          \"b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef\",\n          \"67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45\"\n        ],\n        [\n          \"d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8\",\n          \"db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120\"\n        ],\n        [\n          \"324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d\",\n          \"648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84\"\n        ],\n        [\n          \"4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96\",\n          \"35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d\"\n        ],\n        [\n          \"9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd\",\n          \"ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d\"\n        ],\n        [\n          \"6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5\",\n          \"9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8\"\n        ],\n        [\n          \"a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266\",\n          \"40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8\"\n        ],\n        [\n          \"7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71\",\n          \"34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac\"\n        ],\n        [\n          \"928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac\",\n          \"c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f\"\n        ],\n        [\n          \"85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751\",\n          \"1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962\"\n        ],\n        [\n          \"ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e\",\n          \"493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907\"\n        ],\n        [\n          \"827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241\",\n          \"c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec\"\n        ],\n        [\n          \"eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3\",\n          \"be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d\"\n        ],\n        [\n          \"e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f\",\n          \"4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414\"\n        ],\n        [\n          \"1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19\",\n          \"aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd\"\n        ],\n        [\n          \"146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be\",\n          \"b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0\"\n        ],\n        [\n          \"fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9\",\n          \"6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811\"\n        ],\n        [\n          \"da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2\",\n          \"8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1\"\n        ],\n        [\n          \"a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13\",\n          \"7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c\"\n        ],\n        [\n          \"174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c\",\n          \"ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73\"\n        ],\n        [\n          \"959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba\",\n          \"2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd\"\n        ],\n        [\n          \"d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151\",\n          \"e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405\"\n        ],\n        [\n          \"64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073\",\n          \"d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589\"\n        ],\n        [\n          \"8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458\",\n          \"38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e\"\n        ],\n        [\n          \"13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b\",\n          \"69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27\"\n        ],\n        [\n          \"bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366\",\n          \"d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1\"\n        ],\n        [\n          \"8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa\",\n          \"40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482\"\n        ],\n        [\n          \"8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0\",\n          \"620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945\"\n        ],\n        [\n          \"dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787\",\n          \"7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573\"\n        ],\n        [\n          \"f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e\",\n          \"ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82\"\n        ]\n      ]\n    },\n    naf: {\n      wnd: 7,\n      points: [\n        [\n          \"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\",\n          \"388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672\"\n        ],\n        [\n          \"2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4\",\n          \"d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6\"\n        ],\n        [\n          \"5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc\",\n          \"6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da\"\n        ],\n        [\n          \"acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe\",\n          \"cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37\"\n        ],\n        [\n          \"774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb\",\n          \"d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b\"\n        ],\n        [\n          \"f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8\",\n          \"ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81\"\n        ],\n        [\n          \"d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e\",\n          \"581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58\"\n        ],\n        [\n          \"defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34\",\n          \"4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77\"\n        ],\n        [\n          \"2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c\",\n          \"85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a\"\n        ],\n        [\n          \"352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5\",\n          \"321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c\"\n        ],\n        [\n          \"2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f\",\n          \"2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67\"\n        ],\n        [\n          \"9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714\",\n          \"73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402\"\n        ],\n        [\n          \"daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729\",\n          \"a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55\"\n        ],\n        [\n          \"c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db\",\n          \"2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482\"\n        ],\n        [\n          \"6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4\",\n          \"e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82\"\n        ],\n        [\n          \"1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5\",\n          \"b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396\"\n        ],\n        [\n          \"605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479\",\n          \"2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49\"\n        ],\n        [\n          \"62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d\",\n          \"80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf\"\n        ],\n        [\n          \"80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f\",\n          \"1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a\"\n        ],\n        [\n          \"7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb\",\n          \"d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7\"\n        ],\n        [\n          \"d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9\",\n          \"eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933\"\n        ],\n        [\n          \"49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963\",\n          \"758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a\"\n        ],\n        [\n          \"77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74\",\n          \"958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6\"\n        ],\n        [\n          \"f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530\",\n          \"e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37\"\n        ],\n        [\n          \"463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b\",\n          \"5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e\"\n        ],\n        [\n          \"f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247\",\n          \"cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6\"\n        ],\n        [\n          \"caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1\",\n          \"cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476\"\n        ],\n        [\n          \"2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120\",\n          \"4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40\"\n        ],\n        [\n          \"7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435\",\n          \"91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61\"\n        ],\n        [\n          \"754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18\",\n          \"673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683\"\n        ],\n        [\n          \"e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8\",\n          \"59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5\"\n        ],\n        [\n          \"186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb\",\n          \"3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b\"\n        ],\n        [\n          \"df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f\",\n          \"55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417\"\n        ],\n        [\n          \"5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143\",\n          \"efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868\"\n        ],\n        [\n          \"290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba\",\n          \"e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a\"\n        ],\n        [\n          \"af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45\",\n          \"f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6\"\n        ],\n        [\n          \"766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a\",\n          \"744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996\"\n        ],\n        [\n          \"59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e\",\n          \"c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e\"\n        ],\n        [\n          \"f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8\",\n          \"e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d\"\n        ],\n        [\n          \"7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c\",\n          \"30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2\"\n        ],\n        [\n          \"948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519\",\n          \"e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e\"\n        ],\n        [\n          \"7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab\",\n          \"100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437\"\n        ],\n        [\n          \"3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca\",\n          \"ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311\"\n        ],\n        [\n          \"d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf\",\n          \"8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4\"\n        ],\n        [\n          \"1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610\",\n          \"68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575\"\n        ],\n        [\n          \"733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4\",\n          \"f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d\"\n        ],\n        [\n          \"15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c\",\n          \"d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d\"\n        ],\n        [\n          \"a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940\",\n          \"edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629\"\n        ],\n        [\n          \"e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980\",\n          \"a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06\"\n        ],\n        [\n          \"311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3\",\n          \"66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374\"\n        ],\n        [\n          \"34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf\",\n          \"9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee\"\n        ],\n        [\n          \"f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63\",\n          \"4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1\"\n        ],\n        [\n          \"d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448\",\n          \"fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b\"\n        ],\n        [\n          \"32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf\",\n          \"5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661\"\n        ],\n        [\n          \"7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5\",\n          \"8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6\"\n        ],\n        [\n          \"ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6\",\n          \"8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e\"\n        ],\n        [\n          \"16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5\",\n          \"5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d\"\n        ],\n        [\n          \"eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99\",\n          \"f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc\"\n        ],\n        [\n          \"78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51\",\n          \"f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4\"\n        ],\n        [\n          \"494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5\",\n          \"42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c\"\n        ],\n        [\n          \"a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5\",\n          \"204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b\"\n        ],\n        [\n          \"c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997\",\n          \"4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913\"\n        ],\n        [\n          \"841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881\",\n          \"73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154\"\n        ],\n        [\n          \"5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5\",\n          \"39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865\"\n        ],\n        [\n          \"36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66\",\n          \"d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc\"\n        ],\n        [\n          \"336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726\",\n          \"ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224\"\n        ],\n        [\n          \"8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede\",\n          \"6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e\"\n        ],\n        [\n          \"1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94\",\n          \"60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6\"\n        ],\n        [\n          \"85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31\",\n          \"3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511\"\n        ],\n        [\n          \"29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51\",\n          \"b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b\"\n        ],\n        [\n          \"a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252\",\n          \"ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2\"\n        ],\n        [\n          \"4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5\",\n          \"cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c\"\n        ],\n        [\n          \"d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b\",\n          \"6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3\"\n        ],\n        [\n          \"ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4\",\n          \"322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d\"\n        ],\n        [\n          \"af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f\",\n          \"6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700\"\n        ],\n        [\n          \"e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889\",\n          \"2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4\"\n        ],\n        [\n          \"591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246\",\n          \"b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196\"\n        ],\n        [\n          \"11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984\",\n          \"998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4\"\n        ],\n        [\n          \"3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a\",\n          \"b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257\"\n        ],\n        [\n          \"cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030\",\n          \"bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13\"\n        ],\n        [\n          \"c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197\",\n          \"6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096\"\n        ],\n        [\n          \"c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593\",\n          \"c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38\"\n        ],\n        [\n          \"a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef\",\n          \"21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f\"\n        ],\n        [\n          \"347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38\",\n          \"60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448\"\n        ],\n        [\n          \"da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a\",\n          \"49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a\"\n        ],\n        [\n          \"c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111\",\n          \"5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4\"\n        ],\n        [\n          \"4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502\",\n          \"7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437\"\n        ],\n        [\n          \"3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea\",\n          \"be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7\"\n        ],\n        [\n          \"cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26\",\n          \"8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d\"\n        ],\n        [\n          \"b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986\",\n          \"39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a\"\n        ],\n        [\n          \"d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e\",\n          \"62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54\"\n        ],\n        [\n          \"48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4\",\n          \"25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77\"\n        ],\n        [\n          \"dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda\",\n          \"ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517\"\n        ],\n        [\n          \"6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859\",\n          \"cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10\"\n        ],\n        [\n          \"e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f\",\n          \"f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125\"\n        ],\n        [\n          \"eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c\",\n          \"6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e\"\n        ],\n        [\n          \"13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942\",\n          \"fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1\"\n        ],\n        [\n          \"ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a\",\n          \"1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2\"\n        ],\n        [\n          \"b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80\",\n          \"5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423\"\n        ],\n        [\n          \"ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d\",\n          \"438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8\"\n        ],\n        [\n          \"8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1\",\n          \"cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758\"\n        ],\n        [\n          \"52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63\",\n          \"c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375\"\n        ],\n        [\n          \"e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352\",\n          \"6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d\"\n        ],\n        [\n          \"7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193\",\n          \"ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec\"\n        ],\n        [\n          \"5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00\",\n          \"9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0\"\n        ],\n        [\n          \"32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58\",\n          \"ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c\"\n        ],\n        [\n          \"e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7\",\n          \"d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4\"\n        ],\n        [\n          \"8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8\",\n          \"c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f\"\n        ],\n        [\n          \"4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e\",\n          \"67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649\"\n        ],\n        [\n          \"3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d\",\n          \"cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826\"\n        ],\n        [\n          \"674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b\",\n          \"299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5\"\n        ],\n        [\n          \"d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f\",\n          \"f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87\"\n        ],\n        [\n          \"30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6\",\n          \"462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b\"\n        ],\n        [\n          \"be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297\",\n          \"62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc\"\n        ],\n        [\n          \"93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a\",\n          \"7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c\"\n        ],\n        [\n          \"b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c\",\n          \"ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f\"\n        ],\n        [\n          \"d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52\",\n          \"4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a\"\n        ],\n        [\n          \"d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb\",\n          \"bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46\"\n        ],\n        [\n          \"463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065\",\n          \"bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f\"\n        ],\n        [\n          \"7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917\",\n          \"603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03\"\n        ],\n        [\n          \"74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9\",\n          \"cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08\"\n        ],\n        [\n          \"30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3\",\n          \"553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8\"\n        ],\n        [\n          \"9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57\",\n          \"712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373\"\n        ],\n        [\n          \"176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66\",\n          \"ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3\"\n        ],\n        [\n          \"75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8\",\n          \"9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8\"\n        ],\n        [\n          \"809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721\",\n          \"9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1\"\n        ],\n        [\n          \"1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180\",\n          \"4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9\"\n        ]\n      ]\n    }\n  }), wl;\n}\n(function(e) {\n  var t = e, n = Cc, r = Wd, i = Sn, o = i.assert;\n  function a(l) {\n    l.type === \"short\" ? this.curve = new r.short(l) : l.type === \"edwards\" ? this.curve = new r.edwards(l) : this.curve = new r.mont(l), this.g = this.curve.g, this.n = this.curve.n, this.hash = l.hash, o(this.g.validate(), \"Invalid curve\"), o(this.g.mul(this.n).isInfinity(), \"Invalid curve, G*N != O\");\n  }\n  t.PresetCurve = a;\n  function s(l, d) {\n    Object.defineProperty(t, l, {\n      configurable: !0,\n      enumerable: !0,\n      get: function() {\n        var f = new a(d);\n        return Object.defineProperty(t, l, {\n          configurable: !0,\n          enumerable: !0,\n          value: f\n        }), f;\n      }\n    });\n  }\n  s(\"p192\", {\n    type: \"short\",\n    prime: \"p192\",\n    p: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",\n    a: \"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",\n    b: \"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",\n    n: \"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",\n    hash: n.sha256,\n    gRed: !1,\n    g: [\n      \"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\n      \"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"\n    ]\n  }), s(\"p224\", {\n    type: \"short\",\n    prime: \"p224\",\n    p: \"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",\n    a: \"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",\n    b: \"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",\n    n: \"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",\n    hash: n.sha256,\n    gRed: !1,\n    g: [\n      \"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\n      \"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"\n    ]\n  }), s(\"p256\", {\n    type: \"short\",\n    prime: null,\n    p: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",\n    a: \"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",\n    b: \"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",\n    n: \"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",\n    hash: n.sha256,\n    gRed: !1,\n    g: [\n      \"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\n      \"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"\n    ]\n  }), s(\"p384\", {\n    type: \"short\",\n    prime: null,\n    p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff\",\n    a: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc\",\n    b: \"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",\n    n: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",\n    hash: n.sha384,\n    gRed: !1,\n    g: [\n      \"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7\",\n      \"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"\n    ]\n  }), s(\"p521\", {\n    type: \"short\",\n    prime: null,\n    p: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff\",\n    a: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc\",\n    b: \"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",\n    n: \"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",\n    hash: n.sha512,\n    gRed: !1,\n    g: [\n      \"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\n      \"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650\"\n    ]\n  }), s(\"curve25519\", {\n    type: \"mont\",\n    prime: \"p25519\",\n    p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n    a: \"76d06\",\n    b: \"1\",\n    n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n    hash: n.sha256,\n    gRed: !1,\n    g: [\n      \"9\"\n    ]\n  }), s(\"ed25519\", {\n    type: \"edwards\",\n    prime: \"p25519\",\n    p: \"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",\n    a: \"-1\",\n    c: \"1\",\n    // -121665 * (121666^(-1)) (mod P)\n    d: \"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",\n    n: \"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",\n    hash: n.sha256,\n    gRed: !1,\n    g: [\n      \"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\n      // 4/5\n      \"6666666666666666666666666666666666666666666666666666666666666658\"\n    ]\n  });\n  var c;\n  try {\n    c = zS();\n  } catch {\n    c = void 0;\n  }\n  s(\"secp256k1\", {\n    type: \"short\",\n    prime: \"k256\",\n    p: \"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",\n    a: \"0\",\n    b: \"7\",\n    n: \"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",\n    h: \"1\",\n    hash: n.sha256,\n    // Precomputed endomorphism\n    beta: \"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",\n    lambda: \"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",\n    basis: [\n      {\n        a: \"3086d221a7d46bcde86c90e49284eb15\",\n        b: \"-e4437ed6010e88286f547fa90abfe4c3\"\n      },\n      {\n        a: \"114ca50f7a8e2f3f657c1108d9d44cfd8\",\n        b: \"3086d221a7d46bcde86c90e49284eb15\"\n      }\n    ],\n    gRed: !1,\n    g: [\n      \"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\n      \"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",\n      c\n    ]\n  });\n})($c);\nvar WS = Cc, Ai = Vd, Y3 = Ki;\nfunction ri(e) {\n  if (!(this instanceof ri))\n    return new ri(e);\n  this.hash = e.hash, this.predResist = !!e.predResist, this.outLen = this.hash.outSize, this.minEntropy = e.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;\n  var t = Ai.toArray(e.entropy, e.entropyEnc || \"hex\"), n = Ai.toArray(e.nonce, e.nonceEnc || \"hex\"), r = Ai.toArray(e.pers, e.persEnc || \"hex\");\n  Y3(\n    t.length >= this.minEntropy / 8,\n    \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"\n  ), this._init(t, n, r);\n}\nvar FS = ri;\nri.prototype._init = function(t, n, r) {\n  var i = t.concat(n).concat(r);\n  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);\n  for (var o = 0; o < this.V.length; o++)\n    this.K[o] = 0, this.V[o] = 1;\n  this._update(i), this._reseed = 1, this.reseedInterval = 281474976710656;\n};\nri.prototype._hmac = function() {\n  return new WS.hmac(this.hash, this.K);\n};\nri.prototype._update = function(t) {\n  var n = this._hmac().update(this.V).update([0]);\n  t && (n = n.update(t)), this.K = n.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest());\n};\nri.prototype.reseed = function(t, n, r, i) {\n  typeof n != \"string\" && (i = r, r = n, n = null), t = Ai.toArray(t, n), r = Ai.toArray(r, i), Y3(\n    t.length >= this.minEntropy / 8,\n    \"Not enough entropy. Minimum is: \" + this.minEntropy + \" bits\"\n  ), this._update(t.concat(r || [])), this._reseed = 1;\n};\nri.prototype.generate = function(t, n, r, i) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error(\"Reseed is required\");\n  typeof n != \"string\" && (i = r, r = n, n = null), r && (r = Ai.toArray(r, i || \"hex\"), this._update(r));\n  for (var o = []; o.length < t; )\n    this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);\n  var a = o.slice(0, t);\n  return this._update(r), this._reseed++, Ai.encode(a, n);\n};\nvar jS = Nr, qS = Sn, L1 = qS.assert;\nfunction on(e, t) {\n  this.ec = e, this.priv = null, this.pub = null, t.priv && this._importPrivate(t.priv, t.privEnc), t.pub && this._importPublic(t.pub, t.pubEnc);\n}\nvar ZS = on;\non.fromPublic = function(t, n, r) {\n  return n instanceof on ? n : new on(t, {\n    pub: n,\n    pubEnc: r\n  });\n};\non.fromPrivate = function(t, n, r) {\n  return n instanceof on ? n : new on(t, {\n    priv: n,\n    privEnc: r\n  });\n};\non.prototype.validate = function() {\n  var t = this.getPublic();\n  return t.isInfinity() ? { result: !1, reason: \"Invalid public key\" } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? { result: !0, reason: null } : { result: !1, reason: \"Public key * N != O\" } : { result: !1, reason: \"Public key is not a point\" };\n};\non.prototype.getPublic = function(t, n) {\n  return typeof t == \"string\" && (n = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), n ? this.pub.encode(n, t) : this.pub;\n};\non.prototype.getPrivate = function(t) {\n  return t === \"hex\" ? this.priv.toString(16, 2) : this.priv;\n};\non.prototype._importPrivate = function(t, n) {\n  this.priv = new jS(t, n || 16), this.priv = this.priv.umod(this.ec.curve.n);\n};\non.prototype._importPublic = function(t, n) {\n  if (t.x || t.y) {\n    this.ec.curve.type === \"mont\" ? L1(t.x, \"Need x coordinate\") : (this.ec.curve.type === \"short\" || this.ec.curve.type === \"edwards\") && L1(t.x && t.y, \"Need both x and y coordinate\"), this.pub = this.ec.curve.point(t.x, t.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(t, n);\n};\non.prototype.derive = function(t) {\n  return t.validate() || L1(t.validate(), \"public point not validated\"), t.mul(this.priv).getX();\n};\non.prototype.sign = function(t, n, r) {\n  return this.ec.sign(t, this, n, r);\n};\non.prototype.verify = function(t, n) {\n  return this.ec.verify(t, n, this);\n};\non.prototype.inspect = function() {\n  return \"<Key priv: \" + (this.priv && this.priv.toString(16, 2)) + \" pub: \" + (this.pub && this.pub.inspect()) + \" >\";\n};\nvar Ws = Nr, jd = Sn, KS = jd.assert;\nfunction Mc(e, t) {\n  if (e instanceof Mc)\n    return e;\n  this._importDER(e, t) || (KS(e.r && e.s, \"Signature without r or s\"), this.r = new Ws(e.r, 16), this.s = new Ws(e.s, 16), e.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = e.recoveryParam);\n}\nvar GS = Mc;\nfunction YS() {\n  this.place = 0;\n}\nfunction $l(e, t) {\n  var n = e[t.place++];\n  if (!(n & 128))\n    return n;\n  var r = n & 15;\n  if (r === 0 || r > 4 || e[t.place] === 0)\n    return !1;\n  for (var i = 0, o = 0, a = t.place; o < r; o++, a++)\n    i <<= 8, i |= e[a], i >>>= 0;\n  return i <= 127 ? !1 : (t.place = a, i);\n}\nfunction v0(e) {\n  for (var t = 0, n = e.length - 1; !e[t] && !(e[t + 1] & 128) && t < n; )\n    t++;\n  return t === 0 ? e : e.slice(t);\n}\nMc.prototype._importDER = function(t, n) {\n  t = jd.toArray(t, n);\n  var r = new YS();\n  if (t[r.place++] !== 48)\n    return !1;\n  var i = $l(t, r);\n  if (i === !1 || i + r.place !== t.length || t[r.place++] !== 2)\n    return !1;\n  var o = $l(t, r);\n  if (o === !1 || t[r.place] & 128)\n    return !1;\n  var a = t.slice(r.place, o + r.place);\n  if (r.place += o, t[r.place++] !== 2)\n    return !1;\n  var s = $l(t, r);\n  if (s === !1 || t.length !== s + r.place || t[r.place] & 128)\n    return !1;\n  var c = t.slice(r.place, s + r.place);\n  if (a[0] === 0)\n    if (a[1] & 128)\n      a = a.slice(1);\n    else\n      return !1;\n  if (c[0] === 0)\n    if (c[1] & 128)\n      c = c.slice(1);\n    else\n      return !1;\n  return this.r = new Ws(a), this.s = new Ws(c), this.recoveryParam = null, !0;\n};\nfunction Cl(e, t) {\n  if (t < 128) {\n    e.push(t);\n    return;\n  }\n  var n = 1 + (Math.log(t) / Math.LN2 >>> 3);\n  for (e.push(n | 128); --n; )\n    e.push(t >>> (n << 3) & 255);\n  e.push(t);\n}\nMc.prototype.toDER = function(t) {\n  var n = this.r.toArray(), r = this.s.toArray();\n  for (n[0] & 128 && (n = [0].concat(n)), r[0] & 128 && (r = [0].concat(r)), n = v0(n), r = v0(r); !r[0] && !(r[1] & 128); )\n    r = r.slice(1);\n  var i = [2];\n  Cl(i, n.length), i = i.concat(n), i.push(2), Cl(i, r.length);\n  var o = i.concat(r), a = [48];\n  return Cl(a, o.length), a = a.concat(o), jd.encode(a, t);\n};\nvar ki = Nr, X3 = FS, XS = Sn, Sl = $c, JS = E3, J3 = XS.assert, qd = ZS, Lc = GS;\nfunction In(e) {\n  if (!(this instanceof In))\n    return new In(e);\n  typeof e == \"string\" && (J3(\n    Object.prototype.hasOwnProperty.call(Sl, e),\n    \"Unknown curve \" + e\n  ), e = Sl[e]), e instanceof Sl.PresetCurve && (e = { curve: e }), this.curve = e.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = e.curve.g, this.g.precompute(e.curve.n.bitLength() + 1), this.hash = e.hash || e.curve.hash;\n}\nvar QS = In;\nIn.prototype.keyPair = function(t) {\n  return new qd(this, t);\n};\nIn.prototype.keyFromPrivate = function(t, n) {\n  return qd.fromPrivate(this, t, n);\n};\nIn.prototype.keyFromPublic = function(t, n) {\n  return qd.fromPublic(this, t, n);\n};\nIn.prototype.genKeyPair = function(t) {\n  t || (t = {});\n  for (var n = new X3({\n    hash: this.hash,\n    pers: t.pers,\n    persEnc: t.persEnc || \"utf8\",\n    entropy: t.entropy || JS(this.hash.hmacStrength),\n    entropyEnc: t.entropy && t.entropyEnc || \"utf8\",\n    nonce: this.n.toArray()\n  }), r = this.n.byteLength(), i = this.n.sub(new ki(2)); ; ) {\n    var o = new ki(n.generate(r));\n    if (!(o.cmp(i) > 0))\n      return o.iaddn(1), this.keyFromPrivate(o);\n  }\n};\nIn.prototype._truncateToN = function(t, n) {\n  var r = t.byteLength() * 8 - this.n.bitLength();\n  return r > 0 && (t = t.ushrn(r)), !n && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;\n};\nIn.prototype.sign = function(t, n, r, i) {\n  typeof r == \"object\" && (i = r, r = null), i || (i = {}), n = this.keyFromPrivate(n, r), t = this._truncateToN(new ki(t, 16));\n  for (var o = this.n.byteLength(), a = n.getPrivate().toArray(\"be\", o), s = t.toArray(\"be\", o), c = new X3({\n    hash: this.hash,\n    entropy: a,\n    nonce: s,\n    pers: i.pers,\n    persEnc: i.persEnc || \"utf8\"\n  }), l = this.n.sub(new ki(1)), d = 0; ; d++) {\n    var f = i.k ? i.k(d) : new ki(c.generate(this.n.byteLength()));\n    if (f = this._truncateToN(f, !0), !(f.cmpn(1) <= 0 || f.cmp(l) >= 0)) {\n      var g = this.g.mul(f);\n      if (!g.isInfinity()) {\n        var b = g.getX(), x = b.umod(this.n);\n        if (x.cmpn(0) !== 0) {\n          var m = f.invm(this.n).mul(x.mul(n.getPrivate()).iadd(t));\n          if (m = m.umod(this.n), m.cmpn(0) !== 0) {\n            var C = (g.getY().isOdd() ? 1 : 0) | (b.cmp(x) !== 0 ? 2 : 0);\n            return i.canonical && m.cmp(this.nh) > 0 && (m = this.n.sub(m), C ^= 1), new Lc({ r: x, s: m, recoveryParam: C });\n          }\n        }\n      }\n    }\n  }\n};\nIn.prototype.verify = function(t, n, r, i) {\n  t = this._truncateToN(new ki(t, 16)), r = this.keyFromPublic(r, i), n = new Lc(n, \"hex\");\n  var o = n.r, a = n.s;\n  if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0 || a.cmpn(1) < 0 || a.cmp(this.n) >= 0)\n    return !1;\n  var s = a.invm(this.n), c = s.mul(t).umod(this.n), l = s.mul(o).umod(this.n), d;\n  return this.curve._maxwellTrick ? (d = this.g.jmulAdd(c, r.getPublic(), l), d.isInfinity() ? !1 : d.eqXToP(o)) : (d = this.g.mulAdd(c, r.getPublic(), l), d.isInfinity() ? !1 : d.getX().umod(this.n).cmp(o) === 0);\n};\nIn.prototype.recoverPubKey = function(e, t, n, r) {\n  J3((3 & n) === n, \"The recovery param is more than two bits\"), t = new Lc(t, r);\n  var i = this.n, o = new ki(e), a = t.r, s = t.s, c = n & 1, l = n >> 1;\n  if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l)\n    throw new Error(\"Unable to find sencond key candinate\");\n  l ? a = this.curve.pointFromX(a.add(this.curve.n), c) : a = this.curve.pointFromX(a, c);\n  var d = t.r.invm(i), f = i.sub(o).mul(d).umod(i), g = s.mul(d).umod(i);\n  return this.g.mulAdd(f, a, g);\n};\nIn.prototype.getKeyRecoveryParam = function(e, t, n, r) {\n  if (t = new Lc(t, r), t.recoveryParam !== null)\n    return t.recoveryParam;\n  for (var i = 0; i < 4; i++) {\n    var o;\n    try {\n      o = this.recoverPubKey(e, t, i);\n    } catch {\n      continue;\n    }\n    if (o.eq(n))\n      return i;\n  }\n  throw new Error(\"Unable to find valid recovery factor\");\n};\nvar Ga = Sn, Q3 = Ga.assert, y0 = Ga.parseBytes, zo = Ga.cachedProperty;\nfunction Ft(e, t) {\n  this.eddsa = e, this._secret = y0(t.secret), e.isPoint(t.pub) ? this._pub = t.pub : this._pubBytes = y0(t.pub);\n}\nFt.fromPublic = function(t, n) {\n  return n instanceof Ft ? n : new Ft(t, { pub: n });\n};\nFt.fromSecret = function(t, n) {\n  return n instanceof Ft ? n : new Ft(t, { secret: n });\n};\nFt.prototype.secret = function() {\n  return this._secret;\n};\nzo(Ft, \"pubBytes\", function() {\n  return this.eddsa.encodePoint(this.pub());\n});\nzo(Ft, \"pub\", function() {\n  return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());\n});\nzo(Ft, \"privBytes\", function() {\n  var t = this.eddsa, n = this.hash(), r = t.encodingLength - 1, i = n.slice(0, t.encodingLength);\n  return i[0] &= 248, i[r] &= 127, i[r] |= 64, i;\n});\nzo(Ft, \"priv\", function() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\nzo(Ft, \"hash\", function() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\nzo(Ft, \"messagePrefix\", function() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\nFt.prototype.sign = function(t) {\n  return Q3(this._secret, \"KeyPair can only verify\"), this.eddsa.sign(t, this);\n};\nFt.prototype.verify = function(t, n) {\n  return this.eddsa.verify(t, n, this);\n};\nFt.prototype.getSecret = function(t) {\n  return Q3(this._secret, \"KeyPair is public only\"), Ga.encode(this.secret(), t);\n};\nFt.prototype.getPublic = function(t) {\n  return Ga.encode(this.pubBytes(), t);\n};\nvar eM = Ft, tM = Nr, Ac = Sn, b0 = Ac.assert, kc = Ac.cachedProperty, nM = Ac.parseBytes;\nfunction Gi(e, t) {\n  this.eddsa = e, typeof t != \"object\" && (t = nM(t)), Array.isArray(t) && (b0(t.length === e.encodingLength * 2, \"Signature has invalid size\"), t = {\n    R: t.slice(0, e.encodingLength),\n    S: t.slice(e.encodingLength)\n  }), b0(t.R && t.S, \"Signature without R or S\"), e.isPoint(t.R) && (this._R = t.R), t.S instanceof tM && (this._S = t.S), this._Rencoded = Array.isArray(t.R) ? t.R : t.Rencoded, this._Sencoded = Array.isArray(t.S) ? t.S : t.Sencoded;\n}\nkc(Gi, \"S\", function() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\nkc(Gi, \"R\", function() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\nkc(Gi, \"Rencoded\", function() {\n  return this.eddsa.encodePoint(this.R());\n});\nkc(Gi, \"Sencoded\", function() {\n  return this.eddsa.encodeInt(this.S());\n});\nGi.prototype.toBytes = function() {\n  return this.Rencoded().concat(this.Sencoded());\n};\nGi.prototype.toHex = function() {\n  return Ac.encode(this.toBytes(), \"hex\").toUpperCase();\n};\nvar rM = Gi, iM = Cc, oM = $c, wo = Sn, aM = wo.assert, e6 = wo.parseBytes, t6 = eM, x0 = rM;\nfunction mn(e) {\n  if (aM(e === \"ed25519\", \"only tested with ed25519 so far\"), !(this instanceof mn))\n    return new mn(e);\n  e = oM[e].curve, this.curve = e, this.g = e.g, this.g.precompute(e.n.bitLength() + 1), this.pointClass = e.point().constructor, this.encodingLength = Math.ceil(e.n.bitLength() / 8), this.hash = iM.sha512;\n}\nvar sM = mn;\nmn.prototype.sign = function(t, n) {\n  t = e6(t);\n  var r = this.keyFromSecret(n), i = this.hashInt(r.messagePrefix(), t), o = this.g.mul(i), a = this.encodePoint(o), s = this.hashInt(a, r.pubBytes(), t).mul(r.priv()), c = i.add(s).umod(this.curve.n);\n  return this.makeSignature({ R: o, S: c, Rencoded: a });\n};\nmn.prototype.verify = function(t, n, r) {\n  if (t = e6(t), n = this.makeSignature(n), n.S().gte(n.eddsa.curve.n) || n.S().isNeg())\n    return !1;\n  var i = this.keyFromPublic(r), o = this.hashInt(n.Rencoded(), i.pubBytes(), t), a = this.g.mul(n.S()), s = n.R().add(i.pub().mul(o));\n  return s.eq(a);\n};\nmn.prototype.hashInt = function() {\n  for (var t = this.hash(), n = 0; n < arguments.length; n++)\n    t.update(arguments[n]);\n  return wo.intFromLE(t.digest()).umod(this.curve.n);\n};\nmn.prototype.keyFromPublic = function(t) {\n  return t6.fromPublic(this, t);\n};\nmn.prototype.keyFromSecret = function(t) {\n  return t6.fromSecret(this, t);\n};\nmn.prototype.makeSignature = function(t) {\n  return t instanceof x0 ? t : new x0(this, t);\n};\nmn.prototype.encodePoint = function(t) {\n  var n = t.getY().toArray(\"le\", this.encodingLength);\n  return n[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0, n;\n};\nmn.prototype.decodePoint = function(t) {\n  t = wo.parseBytes(t);\n  var n = t.length - 1, r = t.slice(0, n).concat(t[n] & -129), i = (t[n] & 128) !== 0, o = wo.intFromLE(r);\n  return this.curve.pointFromY(o, i);\n};\nmn.prototype.encodeInt = function(t) {\n  return t.toArray(\"le\", this.encodingLength);\n};\nmn.prototype.decodeInt = function(t) {\n  return wo.intFromLE(t);\n};\nmn.prototype.isPoint = function(t) {\n  return t instanceof this.pointClass;\n};\n(function(e) {\n  var t = e;\n  t.version = iC.version, t.utils = Sn, t.rand = E3, t.curve = Wd, t.curves = $c, t.ec = QS, t.eddsa = sM;\n})(A3);\nconst cM = A3.ec, lM = new cM(\"secp256k1\"), dM = lM.curve;\ndM.n.constructor;\nvar n6 = { exports: {} };\n(function(e, t) {\n  (function(n, r) {\n    e.exports = r();\n  })(xd, function() {\n    var n = 1e3, r = 6e4, i = 36e5, o = \"millisecond\", a = \"second\", s = \"minute\", c = \"hour\", l = \"day\", d = \"week\", f = \"month\", g = \"quarter\", b = \"year\", x = \"date\", m = \"Invalid Date\", C = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/, S = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, T = { name: \"en\", weekdays: \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"), months: \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"), ordinal: function(w) {\n      var y = [\"th\", \"st\", \"nd\", \"rd\"], $ = w % 100;\n      return \"[\" + w + (y[($ - 20) % 10] || y[$] || y[0]) + \"]\";\n    } }, N = function(w, y, $) {\n      var A = String(w);\n      return !A || A.length >= y ? w : \"\" + Array(y + 1 - A.length).join($) + w;\n    }, W = { s: N, z: function(w) {\n      var y = -w.utcOffset(), $ = Math.abs(y), A = Math.floor($ / 60), H = $ % 60;\n      return (y <= 0 ? \"+\" : \"-\") + N(A, 2, \"0\") + \":\" + N(H, 2, \"0\");\n    }, m: function w(y, $) {\n      if (y.date() < $.date()) return -w($, y);\n      var A = 12 * ($.year() - y.year()) + ($.month() - y.month()), H = y.clone().add(A, f), M = $ - H < 0, h = y.clone().add(A + (M ? -1 : 1), f);\n      return +(-(A + ($ - H) / (M ? H - h : h - H)) || 0);\n    }, a: function(w) {\n      return w < 0 ? Math.ceil(w) || 0 : Math.floor(w);\n    }, p: function(w) {\n      return { M: f, y: b, w: d, d: l, D: x, h: c, m: s, s: a, ms: o, Q: g }[w] || String(w || \"\").toLowerCase().replace(/s$/, \"\");\n    }, u: function(w) {\n      return w === void 0;\n    } }, U = \"en\", F = {};\n    F[U] = T;\n    var j = \"$isDayjsObject\", K = function(w) {\n      return w instanceof u || !(!w || !w[j]);\n    }, J = function w(y, $, A) {\n      var H;\n      if (!y) return U;\n      if (typeof y == \"string\") {\n        var M = y.toLowerCase();\n        F[M] && (H = M), $ && (F[M] = $, H = M);\n        var h = y.split(\"-\");\n        if (!H && h.length > 1) return w(h[0]);\n      } else {\n        var L = y.name;\n        F[L] = y, H = L;\n      }\n      return !A && H && (U = H), H || !A && U;\n    }, X = function(w, y) {\n      if (K(w)) return w.clone();\n      var $ = typeof y == \"object\" ? y : {};\n      return $.date = w, $.args = arguments, new u($);\n    }, _ = W;\n    _.l = J, _.i = K, _.w = function(w, y) {\n      return X(w, { locale: y.$L, utc: y.$u, x: y.$x, $offset: y.$offset });\n    };\n    var u = function() {\n      function w($) {\n        this.$L = J($.locale, null, !0), this.parse($), this.$x = this.$x || $.x || {}, this[j] = !0;\n      }\n      var y = w.prototype;\n      return y.parse = function($) {\n        this.$d = function(A) {\n          var H = A.date, M = A.utc;\n          if (H === null) return /* @__PURE__ */ new Date(NaN);\n          if (_.u(H)) return /* @__PURE__ */ new Date();\n          if (H instanceof Date) return new Date(H);\n          if (typeof H == \"string\" && !/Z$/i.test(H)) {\n            var h = H.match(C);\n            if (h) {\n              var L = h[2] - 1 || 0, Y = (h[7] || \"0\").substring(0, 3);\n              return M ? new Date(Date.UTC(h[1], L, h[3] || 1, h[4] || 0, h[5] || 0, h[6] || 0, Y)) : new Date(h[1], L, h[3] || 1, h[4] || 0, h[5] || 0, h[6] || 0, Y);\n            }\n          }\n          return new Date(H);\n        }($), this.init();\n      }, y.init = function() {\n        var $ = this.$d;\n        this.$y = $.getFullYear(), this.$M = $.getMonth(), this.$D = $.getDate(), this.$W = $.getDay(), this.$H = $.getHours(), this.$m = $.getMinutes(), this.$s = $.getSeconds(), this.$ms = $.getMilliseconds();\n      }, y.$utils = function() {\n        return _;\n      }, y.isValid = function() {\n        return this.$d.toString() !== m;\n      }, y.isSame = function($, A) {\n        var H = X($);\n        return this.startOf(A) <= H && H <= this.endOf(A);\n      }, y.isAfter = function($, A) {\n        return X($) < this.startOf(A);\n      }, y.isBefore = function($, A) {\n        return this.endOf(A) < X($);\n      }, y.$g = function($, A, H) {\n        return _.u($) ? this[A] : this.set(H, $);\n      }, y.unix = function() {\n        return Math.floor(this.valueOf() / 1e3);\n      }, y.valueOf = function() {\n        return this.$d.getTime();\n      }, y.startOf = function($, A) {\n        var H = this, M = !!_.u(A) || A, h = _.p($), L = function(me, de) {\n          var Ge = _.w(H.$u ? Date.UTC(H.$y, de, me) : new Date(H.$y, de, me), H);\n          return M ? Ge : Ge.endOf(l);\n        }, Y = function(me, de) {\n          return _.w(H.toDate()[me].apply(H.toDate(\"s\"), (M ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(de)), H);\n        }, ne = this.$W, ie = this.$M, se = this.$D, ye = \"set\" + (this.$u ? \"UTC\" : \"\");\n        switch (h) {\n          case b:\n            return M ? L(1, 0) : L(31, 11);\n          case f:\n            return M ? L(1, ie) : L(0, ie + 1);\n          case d:\n            var ge = this.$locale().weekStart || 0, _e = (ne < ge ? ne + 7 : ne) - ge;\n            return L(M ? se - _e : se + (6 - _e), ie);\n          case l:\n          case x:\n            return Y(ye + \"Hours\", 0);\n          case c:\n            return Y(ye + \"Minutes\", 1);\n          case s:\n            return Y(ye + \"Seconds\", 2);\n          case a:\n            return Y(ye + \"Milliseconds\", 3);\n          default:\n            return this.clone();\n        }\n      }, y.endOf = function($) {\n        return this.startOf($, !1);\n      }, y.$set = function($, A) {\n        var H, M = _.p($), h = \"set\" + (this.$u ? \"UTC\" : \"\"), L = (H = {}, H[l] = h + \"Date\", H[x] = h + \"Date\", H[f] = h + \"Month\", H[b] = h + \"FullYear\", H[c] = h + \"Hours\", H[s] = h + \"Minutes\", H[a] = h + \"Seconds\", H[o] = h + \"Milliseconds\", H)[M], Y = M === l ? this.$D + (A - this.$W) : A;\n        if (M === f || M === b) {\n          var ne = this.clone().set(x, 1);\n          ne.$d[L](Y), ne.init(), this.$d = ne.set(x, Math.min(this.$D, ne.daysInMonth())).$d;\n        } else L && this.$d[L](Y);\n        return this.init(), this;\n      }, y.set = function($, A) {\n        return this.clone().$set($, A);\n      }, y.get = function($) {\n        return this[_.p($)]();\n      }, y.add = function($, A) {\n        var H, M = this;\n        $ = Number($);\n        var h = _.p(A), L = function(ie) {\n          var se = X(M);\n          return _.w(se.date(se.date() + Math.round(ie * $)), M);\n        };\n        if (h === f) return this.set(f, this.$M + $);\n        if (h === b) return this.set(b, this.$y + $);\n        if (h === l) return L(1);\n        if (h === d) return L(7);\n        var Y = (H = {}, H[s] = r, H[c] = i, H[a] = n, H)[h] || 1, ne = this.$d.getTime() + $ * Y;\n        return _.w(ne, this);\n      }, y.subtract = function($, A) {\n        return this.add(-1 * $, A);\n      }, y.format = function($) {\n        var A = this, H = this.$locale();\n        if (!this.isValid()) return H.invalidDate || m;\n        var M = $ || \"YYYY-MM-DDTHH:mm:ssZ\", h = _.z(this), L = this.$H, Y = this.$m, ne = this.$M, ie = H.weekdays, se = H.months, ye = H.meridiem, ge = function(de, Ge, Me, te) {\n          return de && (de[Ge] || de(A, M)) || Me[Ge].slice(0, te);\n        }, _e = function(de) {\n          return _.s(L % 12 || 12, de, \"0\");\n        }, me = ye || function(de, Ge, Me) {\n          var te = de < 12 ? \"AM\" : \"PM\";\n          return Me ? te.toLowerCase() : te;\n        };\n        return M.replace(S, function(de, Ge) {\n          return Ge || function(Me) {\n            switch (Me) {\n              case \"YY\":\n                return String(A.$y).slice(-2);\n              case \"YYYY\":\n                return _.s(A.$y, 4, \"0\");\n              case \"M\":\n                return ne + 1;\n              case \"MM\":\n                return _.s(ne + 1, 2, \"0\");\n              case \"MMM\":\n                return ge(H.monthsShort, ne, se, 3);\n              case \"MMMM\":\n                return ge(se, ne);\n              case \"D\":\n                return A.$D;\n              case \"DD\":\n                return _.s(A.$D, 2, \"0\");\n              case \"d\":\n                return String(A.$W);\n              case \"dd\":\n                return ge(H.weekdaysMin, A.$W, ie, 2);\n              case \"ddd\":\n                return ge(H.weekdaysShort, A.$W, ie, 3);\n              case \"dddd\":\n                return ie[A.$W];\n              case \"H\":\n                return String(L);\n              case \"HH\":\n                return _.s(L, 2, \"0\");\n              case \"h\":\n                return _e(1);\n              case \"hh\":\n                return _e(2);\n              case \"a\":\n                return me(L, Y, !0);\n              case \"A\":\n                return me(L, Y, !1);\n              case \"m\":\n                return String(Y);\n              case \"mm\":\n                return _.s(Y, 2, \"0\");\n              case \"s\":\n                return String(A.$s);\n              case \"ss\":\n                return _.s(A.$s, 2, \"0\");\n              case \"SSS\":\n                return _.s(A.$ms, 3, \"0\");\n              case \"Z\":\n                return h;\n            }\n            return null;\n          }(de) || h.replace(\":\", \"\");\n        });\n      }, y.utcOffset = function() {\n        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);\n      }, y.diff = function($, A, H) {\n        var M, h = this, L = _.p(A), Y = X($), ne = (Y.utcOffset() - this.utcOffset()) * r, ie = this - Y, se = function() {\n          return _.m(h, Y);\n        };\n        switch (L) {\n          case b:\n            M = se() / 12;\n            break;\n          case f:\n            M = se();\n            break;\n          case g:\n            M = se() / 3;\n            break;\n          case d:\n            M = (ie - ne) / 6048e5;\n            break;\n          case l:\n            M = (ie - ne) / 864e5;\n            break;\n          case c:\n            M = ie / i;\n            break;\n          case s:\n            M = ie / r;\n            break;\n          case a:\n            M = ie / n;\n            break;\n          default:\n            M = ie;\n        }\n        return H ? M : _.a(M);\n      }, y.daysInMonth = function() {\n        return this.endOf(f).$D;\n      }, y.$locale = function() {\n        return F[this.$L];\n      }, y.locale = function($, A) {\n        if (!$) return this.$L;\n        var H = this.clone(), M = J($, A, !0);\n        return M && (H.$L = M), H;\n      }, y.clone = function() {\n        return _.w(this.$d, this);\n      }, y.toDate = function() {\n        return new Date(this.valueOf());\n      }, y.toJSON = function() {\n        return this.isValid() ? this.toISOString() : null;\n      }, y.toISOString = function() {\n        return this.$d.toISOString();\n      }, y.toString = function() {\n        return this.$d.toUTCString();\n      }, w;\n    }(), v = u.prototype;\n    return X.prototype = v, [[\"$ms\", o], [\"$s\", a], [\"$m\", s], [\"$H\", c], [\"$W\", l], [\"$M\", f], [\"$y\", b], [\"$D\", x]].forEach(function(w) {\n      v[w[1]] = function(y) {\n        return this.$g(y, w[0], w[1]);\n      };\n    }), X.extend = function(w, y) {\n      return w.$i || (w(y, u, X), w.$i = !0), X;\n    }, X.locale = J, X.isDayjs = K, X.unix = function(w) {\n      return X(1e3 * w);\n    }, X.en = F[U], X.Ls = F, X.p = {}, X;\n  });\n})(n6);\nvar fM = n6.exports;\nconst fo = /* @__PURE__ */ Va(fM);\nvar r6 = { exports: {} };\n(function(e, t) {\n  (function(n, r) {\n    e.exports = r();\n  })(xd, function() {\n    var n = \"minute\", r = /[+-]\\d\\d(?::?\\d\\d)?/g, i = /([+-]|\\d\\d)/g;\n    return function(o, a, s) {\n      var c = a.prototype;\n      s.utc = function(m) {\n        var C = { date: m, utc: !0, args: arguments };\n        return new a(C);\n      }, c.utc = function(m) {\n        var C = s(this.toDate(), { locale: this.$L, utc: !0 });\n        return m ? C.add(this.utcOffset(), n) : C;\n      }, c.local = function() {\n        return s(this.toDate(), { locale: this.$L, utc: !1 });\n      };\n      var l = c.parse;\n      c.parse = function(m) {\n        m.utc && (this.$u = !0), this.$utils().u(m.$offset) || (this.$offset = m.$offset), l.call(this, m);\n      };\n      var d = c.init;\n      c.init = function() {\n        if (this.$u) {\n          var m = this.$d;\n          this.$y = m.getUTCFullYear(), this.$M = m.getUTCMonth(), this.$D = m.getUTCDate(), this.$W = m.getUTCDay(), this.$H = m.getUTCHours(), this.$m = m.getUTCMinutes(), this.$s = m.getUTCSeconds(), this.$ms = m.getUTCMilliseconds();\n        } else d.call(this);\n      };\n      var f = c.utcOffset;\n      c.utcOffset = function(m, C) {\n        var S = this.$utils().u;\n        if (S(m)) return this.$u ? 0 : S(this.$offset) ? f.call(this) : this.$offset;\n        if (typeof m == \"string\" && (m = function(U) {\n          U === void 0 && (U = \"\");\n          var F = U.match(r);\n          if (!F) return null;\n          var j = (\"\" + F[0]).match(i) || [\"-\", 0, 0], K = j[0], J = 60 * +j[1] + +j[2];\n          return J === 0 ? 0 : K === \"+\" ? J : -J;\n        }(m), m === null)) return this;\n        var T = Math.abs(m) <= 16 ? 60 * m : m, N = this;\n        if (C) return N.$offset = T, N.$u = m === 0, N;\n        if (m !== 0) {\n          var W = this.$u ? this.toDate().getTimezoneOffset() : -1 * this.utcOffset();\n          (N = this.local().add(T + W, n)).$offset = T, N.$x.$localOffset = W;\n        } else N = this.utc();\n        return N;\n      };\n      var g = c.format;\n      c.format = function(m) {\n        var C = m || (this.$u ? \"YYYY-MM-DDTHH:mm:ss[Z]\" : \"\");\n        return g.call(this, C);\n      }, c.valueOf = function() {\n        var m = this.$utils().u(this.$offset) ? 0 : this.$offset + (this.$x.$localOffset || this.$d.getTimezoneOffset());\n        return this.$d.valueOf() - 6e4 * m;\n      }, c.isUTC = function() {\n        return !!this.$u;\n      }, c.toISOString = function() {\n        return this.toDate().toISOString();\n      }, c.toString = function() {\n        return this.toDate().toUTCString();\n      };\n      var b = c.toDate;\n      c.toDate = function(m) {\n        return m === \"s\" && this.$offset ? s(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate() : b.call(this);\n      };\n      var x = c.diff;\n      c.diff = function(m, C, S) {\n        if (m && this.$u === m.$u) return x.call(this, m, C, S);\n        var T = this.local(), N = s(m).local();\n        return x.call(T, N, C, S);\n      };\n    };\n  });\n})(r6);\nvar uM = r6.exports;\nconst hM = /* @__PURE__ */ Va(uM);\nvar i6 = function() {\n  return typeof Symbol == \"function\";\n}, pM = function(e) {\n  return i6() && !!Symbol[e];\n};\ni6() && !pM(\"observable\") && (Symbol.observable = Symbol(\"observable\"));\nvar gM = {\n  LoggingEnabled: \"lightspark-logging-enabled\",\n  ConsoleToolsEnabled: \"lightspark-console-tools-enabled\"\n}, mM = class {\n  constructor(e, t) {\n    we(this, \"context\");\n    we(this, \"loggingEnabled\", !1);\n    we(this, \"loggingLevel\", 1);\n    this.context = e, this.updateLoggingEnabled(t);\n  }\n  setLevel(e) {\n    this.loggingLevel = e;\n  }\n  setEnabled(e, t = 1) {\n    this.loggingEnabled = e, this.loggingLevel = t;\n  }\n  async updateLoggingEnabled(e) {\n    if (e)\n      this.loggingEnabled = await e();\n    else if (M$)\n      this.loggingEnabled = !0;\n    else if (C$)\n      try {\n        this.loggingEnabled = P$(\n          gM.LoggingEnabled\n        );\n      } catch {\n      }\n    this.loggingEnabled && console.log(`[${this.context}] Logging enabled`);\n  }\n  trace(e, ...t) {\n    this.loggingEnabled && this.loggingLevel === 0 && console.log(`[${this.context}] ${e}`, ...t);\n  }\n  info(e, ...t) {\n    this.loggingEnabled && this.loggingLevel <= 1 && console.log(`[${this.context}] ${e}`, ...t);\n  }\n};\nnew mM(\"@lightsparkdev/core\");\nfo.extend(hM);\nfunction vM({\n  amount: e,\n  displayUnit: t = ee.SATOSHI,\n  shortNumber: n = !1,\n  showUnits: r = !1,\n  includeEstimatedIndicator: i = !1,\n  fullPrecision: o = !1,\n  id: a,\n  ml: s = 0,\n  typography: c,\n  unitsPerBtc: l\n}) {\n  const d = t, f = D$(e) ? e : Ms(e, l), g = f[d];\n  let x = f.formatted[d];\n  n ? x = Jn(\n    { value: Number(g), unit: d },\n    { precision: 1, compact: !0 }\n  ) : o && (x = Jn(\n    { value: Number(g), unit: d },\n    { precision: \"full\" }\n  )), r && (x += ` ${bM(d, g)}`);\n  let m = x;\n  return c && c.type && (m = qa(c.type, {\n    size: c.size,\n    color: c.color,\n    children: x\n  })), /* @__PURE__ */ q(xM, { ml: s, id: a, children: [\n    i && \"Est. \",\n    /* @__PURE__ */ p(yM, { unit: d }),\n    m\n  ] });\n}\nvar yM = ({ unit: e }) => {\n  switch (e) {\n    case ee.BITCOIN:\n      return /* @__PURE__ */ p(vt, { name: \"BitcoinB\", width: 8, verticalAlign: -2, mr: 2 });\n    case ee.SATOSHI:\n      return /* @__PURE__ */ p(vt, { name: \"Satoshi\", width: 8, verticalAlign: -2, mr: 2 });\n    default:\n      return null;\n  }\n}, bM = (e, t) => {\n  const n = t !== 1;\n  switch (e) {\n    case ee.BITCOIN:\n      return \"BTC\";\n    case ee.MILLIBITCOIN:\n      return \"mBTC\";\n    case ee.MICROBITCOIN:\n      return \"μBTC\";\n    case ee.SATOSHI:\n      return `sat${n ? \"s\" : \"\"}`;\n    case ee.MILLISATOSHI:\n      return `msat${n ? \"s\" : \"\"}`;\n    default:\n      return e;\n  }\n}, xM = G.span`\n  color: inherit !important;\n  white-space: nowrap;\n  font-feature-settings:\n    \"tnum\" on,\n    \"lnum\" on;\n  margin-left: ${({ ml: e }) => e}px;\n`;\n/**\n * @remix-run/router v1.6.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction A1() {\n  return A1 = Object.assign ? Object.assign.bind() : function(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n)\n        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, A1.apply(this, arguments);\n}\nvar w0;\n(function(e) {\n  e.Pop = \"POP\", e.Push = \"PUSH\", e.Replace = \"REPLACE\";\n})(w0 || (w0 = {}));\nfunction Rt(e, t) {\n  if (e === !1 || e === null || typeof e > \"u\")\n    throw new Error(t);\n}\nfunction Zd(e, t) {\n  if (!e) {\n    typeof console < \"u\" && console.warn(t);\n    try {\n      throw new Error(t);\n    } catch {\n    }\n  }\n}\nfunction k1(e) {\n  let {\n    pathname: t = \"/\",\n    search: n = \"\",\n    hash: r = \"\"\n  } = e;\n  return n && n !== \"?\" && (t += n.charAt(0) === \"?\" ? n : \"?\" + n), r && r !== \"#\" && (t += r.charAt(0) === \"#\" ? r : \"#\" + r), t;\n}\nfunction o6(e) {\n  let t = {};\n  if (e) {\n    let n = e.indexOf(\"#\");\n    n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));\n    let r = e.indexOf(\"?\");\n    r >= 0 && (t.search = e.substr(r), e = e.substr(0, r)), e && (t.pathname = e);\n  }\n  return t;\n}\nvar $0;\n(function(e) {\n  e.data = \"data\", e.deferred = \"deferred\", e.redirect = \"redirect\", e.error = \"error\";\n})($0 || ($0 = {}));\nfunction _1(e, t) {\n  if (t === \"/\") return e;\n  if (!e.toLowerCase().startsWith(t.toLowerCase()))\n    return null;\n  let n = t.endsWith(\"/\") ? t.length - 1 : t.length, r = e.charAt(n);\n  return r && r !== \"/\" ? null : e.slice(n) || \"/\";\n}\nfunction wM(e, t) {\n  t === void 0 && (t = \"/\");\n  let {\n    pathname: n,\n    search: r = \"\",\n    hash: i = \"\"\n  } = typeof e == \"string\" ? o6(e) : e;\n  return {\n    pathname: n ? n.startsWith(\"/\") ? n : $M(n, t) : t,\n    search: CM(r),\n    hash: SM(i)\n  };\n}\nfunction $M(e, t) {\n  let n = t.replace(/\\/+$/, \"\").split(\"/\");\n  return e.split(\"/\").forEach((i) => {\n    i === \"..\" ? n.length > 1 && n.pop() : i !== \".\" && n.push(i);\n  }), n.length > 1 ? n.join(\"/\") : \"/\";\n}\nfunction Ml(e, t, n, r) {\n  return \"Cannot include a '\" + e + \"' character in a manually specified \" + (\"`to.\" + t + \"` field [\" + JSON.stringify(r) + \"].  Please separate it out to the \") + (\"`to.\" + n + \"` field. Alternatively you may provide the full path as \") + 'a string in <Link to=\"...\"> and the router will parse it for you.';\n}\nfunction a6(e) {\n  return e.filter((t, n) => n === 0 || t.route.path && t.route.path.length > 0);\n}\nfunction s6(e, t, n, r) {\n  r === void 0 && (r = !1);\n  let i;\n  typeof e == \"string\" ? i = o6(e) : (i = A1({}, e), Rt(!i.pathname || !i.pathname.includes(\"?\"), Ml(\"?\", \"pathname\", \"search\", i)), Rt(!i.pathname || !i.pathname.includes(\"#\"), Ml(\"#\", \"pathname\", \"hash\", i)), Rt(!i.search || !i.search.includes(\"#\"), Ml(\"#\", \"search\", \"hash\", i)));\n  let o = e === \"\" || i.pathname === \"\", a = o ? \"/\" : i.pathname, s;\n  if (r || a == null)\n    s = n;\n  else {\n    let f = t.length - 1;\n    if (a.startsWith(\"..\")) {\n      let g = a.split(\"/\");\n      for (; g[0] === \"..\"; )\n        g.shift(), f -= 1;\n      i.pathname = g.join(\"/\");\n    }\n    s = f >= 0 ? t[f] : \"/\";\n  }\n  let c = wM(i, s), l = a && a !== \"/\" && a.endsWith(\"/\"), d = (o || a === \".\") && n.endsWith(\"/\");\n  return !c.pathname.endsWith(\"/\") && (l || d) && (c.pathname += \"/\"), c;\n}\nconst Kd = (e) => e.join(\"/\").replace(/\\/\\/+/g, \"/\"), CM = (e) => !e || e === \"?\" ? \"\" : e.startsWith(\"?\") ? e : \"?\" + e, SM = (e) => !e || e === \"#\" ? \"\" : e.startsWith(\"#\") ? e : \"#\" + e, c6 = [\"post\", \"put\", \"patch\", \"delete\"];\nnew Set(c6);\nconst MM = [\"get\", ...c6];\nnew Set(MM);\nvar sn = {};\nfunction E1() {\n  return E1 = Object.assign ? Object.assign.bind() : function(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n)\n        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, E1.apply(this, arguments);\n}\nconst _c = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nsn.NODE_ENV !== \"production\" && (_c.displayName = \"DataRouter\");\nconst l6 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nsn.NODE_ENV !== \"production\" && (l6.displayName = \"DataRouterState\");\nconst LM = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nsn.NODE_ENV !== \"production\" && (LM.displayName = \"Await\");\nconst hi = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nsn.NODE_ENV !== \"production\" && (hi.displayName = \"Navigation\");\nconst Gd = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nsn.NODE_ENV !== \"production\" && (Gd.displayName = \"Location\");\nconst Wo = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: !1\n});\nsn.NODE_ENV !== \"production\" && (Wo.displayName = \"Route\");\nconst AM = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nsn.NODE_ENV !== \"production\" && (AM.displayName = \"RouteError\");\nfunction kM(e, t) {\n  let {\n    relative: n\n  } = t === void 0 ? {} : t;\n  Yd() || (sn.NODE_ENV !== \"production\" ? Rt(\n    !1,\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    \"useHref() may be used only in the context of a <Router> component.\"\n  ) : Rt(!1));\n  let {\n    basename: r,\n    navigator: i\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(hi), {\n    hash: o,\n    pathname: a,\n    search: s\n  } = Ec(e, {\n    relative: n\n  }), c = a;\n  return r !== \"/\" && (c = a === \"/\" ? r : Kd([r, a])), i.createHref({\n    pathname: c,\n    search: s,\n    hash: o\n  });\n}\nfunction Yd() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(Gd) != null;\n}\nfunction Ya() {\n  return Yd() || (sn.NODE_ENV !== \"production\" ? Rt(\n    !1,\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    \"useLocation() may be used only in the context of a <Router> component.\"\n  ) : Rt(!1)), react__WEBPACK_IMPORTED_MODULE_0__.useContext(Gd).location;\n}\nconst d6 = \"You should call navigate() in a React.useEffect(), not when your component is first rendered.\";\nfunction f6(e) {\n  react__WEBPACK_IMPORTED_MODULE_0__.useContext(hi).static || react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(e);\n}\nfunction _M() {\n  let {\n    isDataRoute: e\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Wo);\n  return e ? DM() : EM();\n}\nfunction EM() {\n  Yd() || (sn.NODE_ENV !== \"production\" ? Rt(\n    !1,\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    \"useNavigate() may be used only in the context of a <Router> component.\"\n  ) : Rt(!1));\n  let e = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_c), {\n    basename: t,\n    navigator: n\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(hi), {\n    matches: r\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Wo), {\n    pathname: i\n  } = Ya(), o = JSON.stringify(a6(r).map((c) => c.pathnameBase)), a = react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);\n  return f6(() => {\n    a.current = !0;\n  }), react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(c, l) {\n    if (l === void 0 && (l = {}), sn.NODE_ENV !== \"production\" && Zd(a.current, d6), !a.current) return;\n    if (typeof c == \"number\") {\n      n.go(c);\n      return;\n    }\n    let d = s6(c, JSON.parse(o), i, l.relative === \"path\");\n    e == null && t !== \"/\" && (d.pathname = d.pathname === \"/\" ? t : Kd([t, d.pathname])), (l.replace ? n.replace : n.push)(d, l.state, l);\n  }, [t, n, o, i, e]);\n}\nfunction Ec(e, t) {\n  let {\n    relative: n\n  } = t === void 0 ? {} : t, {\n    matches: r\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Wo), {\n    pathname: i\n  } = Ya(), o = JSON.stringify(a6(r).map((a) => a.pathnameBase));\n  return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => s6(e, JSON.parse(o), i, n === \"path\"), [e, o, i, n]);\n}\nvar T1;\n(function(e) {\n  e.UseBlocker = \"useBlocker\", e.UseRevalidator = \"useRevalidator\", e.UseNavigateStable = \"useNavigate\";\n})(T1 || (T1 = {}));\nvar Fs;\n(function(e) {\n  e.UseBlocker = \"useBlocker\", e.UseLoaderData = \"useLoaderData\", e.UseActionData = \"useActionData\", e.UseRouteError = \"useRouteError\", e.UseNavigation = \"useNavigation\", e.UseRouteLoaderData = \"useRouteLoaderData\", e.UseMatches = \"useMatches\", e.UseRevalidator = \"useRevalidator\", e.UseNavigateStable = \"useNavigate\", e.UseRouteId = \"useRouteId\";\n})(Fs || (Fs = {}));\nfunction u6(e) {\n  return e + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction TM(e) {\n  let t = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_c);\n  return t || (sn.NODE_ENV !== \"production\" ? Rt(!1, u6(e)) : Rt(!1)), t;\n}\nfunction BM(e) {\n  let t = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Wo);\n  return t || (sn.NODE_ENV !== \"production\" ? Rt(!1, u6(e)) : Rt(!1)), t;\n}\nfunction h6(e) {\n  let t = BM(e), n = t.matches[t.matches.length - 1];\n  return n.route.id || (sn.NODE_ENV !== \"production\" ? Rt(!1, e + ' can only be used on routes that contain a unique \"id\"') : Rt(!1)), n.route.id;\n}\nfunction IM() {\n  return h6(Fs.UseRouteId);\n}\nfunction DM() {\n  let {\n    router: e\n  } = TM(T1.UseNavigateStable), t = h6(Fs.UseNavigateStable), n = react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1);\n  return f6(() => {\n    n.current = !0;\n  }), react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(i, o) {\n    o === void 0 && (o = {}), sn.NODE_ENV !== \"production\" && Zd(n.current, d6), n.current && (typeof i == \"number\" ? e.navigate(i) : e.navigate(i, E1({\n      fromRouteId: t\n    }, o)));\n  }, [e, t]);\n}\nvar C0;\n(function(e) {\n  e[e.pending = 0] = \"pending\", e[e.success = 1] = \"success\", e[e.error = 2] = \"error\";\n})(C0 || (C0 = {}));\nnew Promise(() => {\n});\nvar pi = {};\nfunction ii() {\n  return ii = Object.assign ? Object.assign.bind() : function(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = arguments[t];\n      for (var r in n)\n        Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);\n    }\n    return e;\n  }, ii.apply(this, arguments);\n}\nfunction Xd(e, t) {\n  if (e == null) return {};\n  var n = {}, r = Object.keys(e), i, o;\n  for (o = 0; o < r.length; o++)\n    i = r[o], !(t.indexOf(i) >= 0) && (n[i] = e[i]);\n  return n;\n}\nconst Ls = \"get\", Ll = \"application/x-www-form-urlencoded\";\nfunction Tc(e) {\n  return e != null && typeof e.tagName == \"string\";\n}\nfunction RM(e) {\n  return Tc(e) && e.tagName.toLowerCase() === \"button\";\n}\nfunction PM(e) {\n  return Tc(e) && e.tagName.toLowerCase() === \"form\";\n}\nfunction OM(e) {\n  return Tc(e) && e.tagName.toLowerCase() === \"input\";\n}\nfunction HM(e) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n}\nfunction UM(e, t) {\n  return e.button === 0 && // Ignore everything but left clicks\n  (!t || t === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !HM(e);\n}\nfunction NM(e, t, n) {\n  let r, i = null, o, a;\n  if (PM(e)) {\n    let s = t.submissionTrigger;\n    if (t.action)\n      i = t.action;\n    else {\n      let c = e.getAttribute(\"action\");\n      i = c ? _1(c, n) : null;\n    }\n    r = t.method || e.getAttribute(\"method\") || Ls, o = t.encType || e.getAttribute(\"enctype\") || Ll, a = new FormData(e), s && s.name && a.append(s.name, s.value);\n  } else if (RM(e) || OM(e) && (e.type === \"submit\" || e.type === \"image\")) {\n    let s = e.form;\n    if (s == null)\n      throw new Error('Cannot submit a <button> or <input type=\"submit\"> without a <form>');\n    if (t.action)\n      i = t.action;\n    else {\n      let c = e.getAttribute(\"formaction\") || s.getAttribute(\"action\");\n      i = c ? _1(c, n) : null;\n    }\n    r = t.method || e.getAttribute(\"formmethod\") || s.getAttribute(\"method\") || Ls, o = t.encType || e.getAttribute(\"formenctype\") || s.getAttribute(\"enctype\") || Ll, a = new FormData(s), e.name && a.append(e.name, e.value);\n  } else {\n    if (Tc(e))\n      throw new Error('Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">');\n    if (r = t.method || Ls, i = t.action || null, o = t.encType || Ll, e instanceof FormData)\n      a = e;\n    else if (a = new FormData(), e instanceof URLSearchParams)\n      for (let [s, c] of e)\n        a.append(s, c);\n    else if (e != null)\n      for (let s of Object.keys(e))\n        a.append(s, e[s]);\n  }\n  return {\n    action: i,\n    method: r.toLowerCase(),\n    encType: o,\n    formData: a\n  };\n}\nconst VM = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"], zM = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"], WM = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"], FM = typeof window < \"u\" && typeof window.document < \"u\" && typeof window.document.createElement < \"u\", jM = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i, Jd = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(t, n) {\n  let {\n    onClick: r,\n    relative: i,\n    reloadDocument: o,\n    replace: a,\n    state: s,\n    target: c,\n    to: l,\n    preventScrollReset: d\n  } = t, f = Xd(t, VM), {\n    basename: g\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(hi), b, x = !1;\n  if (typeof l == \"string\" && jM.test(l) && (b = l, FM))\n    try {\n      let T = new URL(window.location.href), N = l.startsWith(\"//\") ? new URL(T.protocol + l) : new URL(l), W = _1(N.pathname, g);\n      N.origin === T.origin && W != null ? l = W + N.search + N.hash : x = !0;\n    } catch {\n      pi.NODE_ENV !== \"production\" && Zd(!1, '<Link to=\"' + l + '\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');\n    }\n  let m = kM(l, {\n    relative: i\n  }), C = YM(l, {\n    replace: a,\n    state: s,\n    target: c,\n    preventScrollReset: d,\n    relative: i\n  });\n  function S(T) {\n    r && r(T), T.defaultPrevented || C(T);\n  }\n  return (\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", ii({}, f, {\n      href: b || m,\n      onClick: x || o ? r : S,\n      ref: n,\n      target: c\n    }))\n  );\n});\npi.NODE_ENV !== \"production\" && (Jd.displayName = \"Link\");\nconst qM = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(t, n) {\n  let {\n    \"aria-current\": r = \"page\",\n    caseSensitive: i = !1,\n    className: o = \"\",\n    end: a = !1,\n    style: s,\n    to: c,\n    children: l\n  } = t, d = Xd(t, zM), f = Ec(c, {\n    relative: d.relative\n  }), g = Ya(), b = react__WEBPACK_IMPORTED_MODULE_0__.useContext(l6), {\n    navigator: x\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(hi), m = x.encodeLocation ? x.encodeLocation(f).pathname : f.pathname, C = g.pathname, S = b && b.navigation && b.navigation.location ? b.navigation.location.pathname : null;\n  i || (C = C.toLowerCase(), S = S ? S.toLowerCase() : null, m = m.toLowerCase());\n  let T = C === m || !a && C.startsWith(m) && C.charAt(m.length) === \"/\", N = S != null && (S === m || !a && S.startsWith(m) && S.charAt(m.length) === \"/\"), W = T ? r : void 0, U;\n  typeof o == \"function\" ? U = o({\n    isActive: T,\n    isPending: N\n  }) : U = [o, T ? \"active\" : null, N ? \"pending\" : null].filter(Boolean).join(\" \");\n  let F = typeof s == \"function\" ? s({\n    isActive: T,\n    isPending: N\n  }) : s;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Jd, ii({}, d, {\n    \"aria-current\": W,\n    className: U,\n    ref: n,\n    style: F,\n    to: c\n  }), typeof l == \"function\" ? l({\n    isActive: T,\n    isPending: N\n  }) : l);\n});\npi.NODE_ENV !== \"production\" && (qM.displayName = \"NavLink\");\nconst ZM = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(p6, ii({}, e, {\n  ref: t\n})));\npi.NODE_ENV !== \"production\" && (ZM.displayName = \"Form\");\nconst p6 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((e, t) => {\n  let {\n    reloadDocument: n,\n    replace: r,\n    method: i = Ls,\n    action: o,\n    onSubmit: a,\n    fetcherKey: s,\n    routeId: c,\n    relative: l,\n    preventScrollReset: d\n  } = e, f = Xd(e, WM), g = XM(s, c), b = i.toLowerCase() === \"get\" ? \"get\" : \"post\", x = JM(o, {\n    relative: l\n  }), m = (C) => {\n    if (a && a(C), C.defaultPrevented) return;\n    C.preventDefault();\n    let S = C.nativeEvent.submitter, T = (S == null ? void 0 : S.getAttribute(\"formmethod\")) || i;\n    g(S || C.currentTarget, {\n      method: T,\n      replace: r,\n      relative: l,\n      preventScrollReset: d\n    });\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"form\", ii({\n    ref: t,\n    method: b,\n    action: x,\n    onSubmit: n ? a : m\n  }, f));\n});\npi.NODE_ENV !== \"production\" && (p6.displayName = \"FormImpl\");\nvar B1;\n(function(e) {\n  e.UseScrollRestoration = \"useScrollRestoration\", e.UseSubmitImpl = \"useSubmitImpl\", e.UseFetcher = \"useFetcher\";\n})(B1 || (B1 = {}));\nvar S0;\n(function(e) {\n  e.UseFetchers = \"useFetchers\", e.UseScrollRestoration = \"useScrollRestoration\";\n})(S0 || (S0 = {}));\nfunction KM(e) {\n  return e + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction GM(e) {\n  let t = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_c);\n  return t || (pi.NODE_ENV !== \"production\" ? Rt(!1, KM(e)) : Rt(!1)), t;\n}\nfunction YM(e, t) {\n  let {\n    target: n,\n    replace: r,\n    state: i,\n    preventScrollReset: o,\n    relative: a\n  } = t === void 0 ? {} : t, s = _M(), c = Ya(), l = Ec(e, {\n    relative: a\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback((d) => {\n    if (UM(d, n)) {\n      d.preventDefault();\n      let f = r !== void 0 ? r : k1(c) === k1(l);\n      s(e, {\n        replace: f,\n        state: i,\n        preventScrollReset: o,\n        relative: a\n      });\n    }\n  }, [c, s, l, r, i, n, e, o, a]);\n}\nfunction XM(e, t) {\n  let {\n    router: n\n  } = GM(B1.UseSubmitImpl), {\n    basename: r\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(hi), i = IM();\n  return react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(o, a) {\n    if (a === void 0 && (a = {}), typeof document > \"u\")\n      throw new Error(\"You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.\");\n    let {\n      action: s,\n      method: c,\n      encType: l,\n      formData: d\n    } = NM(o, a, r), f = {\n      preventScrollReset: a.preventScrollReset,\n      formData: d,\n      formMethod: c,\n      formEncType: l\n    };\n    e ? (t == null && (pi.NODE_ENV !== \"production\" ? Rt(!1, \"No routeId available for useFetcher()\") : Rt(!1)), n.fetch(e, t, s, f)) : n.navigate(s, ii({}, f, {\n      replace: a.replace,\n      fromRouteId: i\n    }));\n  }, [n, r, e, t, i]);\n}\nfunction JM(e, t) {\n  let {\n    relative: n\n  } = t === void 0 ? {} : t, {\n    basename: r\n  } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(hi), i = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Wo);\n  i || (pi.NODE_ENV !== \"production\" ? Rt(!1, \"useFormAction must be used inside a RouteContext\") : Rt(!1));\n  let [o] = i.matches.slice(-1), a = ii({}, Ec(e || \".\", {\n    relative: n\n  })), s = Ya();\n  if (e == null && (a.search = s.search, a.hash = s.hash, o.route.index)) {\n    let c = new URLSearchParams(a.search);\n    c.delete(\"index\"), a.search = c.toString() ? \"?\" + c.toString() : \"\";\n  }\n  return (!e || e === \".\") && o.route.index && (a.search = a.search ? a.search.replace(/^\\?/, \"?index&\") : \"?index\"), r !== \"/\" && (a.pathname = a.pathname === \"/\" ? r : Kd([r, a.pathname])), k1(a);\n}\nfunction QM(e, t) {\n  if (t) {\n    let n = e;\n    if (Object.entries(Iy(t, \"query\")).forEach(([r, i]) => {\n      if (typeof i != \"string\")\n        throw new Error(\n          `Only 'query' may be an object. Route params must be a string, but '${r}' is not.`\n        );\n      n = n.replace(`:${r}`, i);\n    }), t.query) {\n      let r = t.query;\n      typeof r != \"string\" && (r = Object.entries(t.query).map(([i, o]) => `${i}${o ? `=${o}` : \"\"}`).join(\"&\")), n = `${n}?${r}`;\n    }\n    e = n;\n  }\n  return e;\n}\nfunction eL({\n  to: e,\n  id: t,\n  externalLink: n,\n  filename: r,\n  params: i,\n  children: o,\n  text: a,\n  css: s,\n  onClick: c,\n  className: l,\n  hash: d = null,\n  blue: f = !1,\n  newTab: g,\n  typography: b\n}) {\n  if (!Ta(e) && !n && !c)\n    throw new Error(\n      \"Link must have either `to` or `externalLink` or `onClick` defined\"\n    );\n  let x, m = !!g;\n  if (Ta(e))\n    x = QM(e, i), x += d ? `#${d}` : \"\";\n  else if (n) {\n    const S = n;\n    if (!S.startsWith(\"http\") && !S.startsWith(\"mailto:\"))\n      throw new Error(\"Link's externalLink must start with http or mailto:\");\n    g === void 0 && (m = !0), x = S;\n  } else\n    x = \"#\";\n  let C = o;\n  return a && (C = b ? qa(b.type, {\n    size: b.size,\n    color: b.color,\n    children: a\n  }) : a), /* @__PURE__ */ p(\n    Jd,\n    {\n      to: x,\n      id: t,\n      css: s,\n      onClick: c,\n      className: l,\n      download: r,\n      style: { color: f ? Z.blue43 : \"inherit\" },\n      target: m ? \"_blank\" : void 0,\n      rel: m ? \"noopener noreferrer\" : void 0,\n      children: C\n    }\n  );\n}\nvar Qd = G(eL)``;\nfunction $o(e) {\n  const n = M3(e).map((r, i) => {\n    if (r)\n      if (typeof r == \"string\" || $1(r)) {\n        const o = typeof r == \"string\" ? r : r.text;\n        let a = o;\n        if ($1(r) && r.typography) {\n          const s = r.typography, { type: c } = s, l = pn(s, [\"type\"]);\n          a = qa(c, Ie(ve({}, l), {\n            children: o\n          }));\n        } else\n          a = h3(o);\n        return (\n          /* text property is a sufficient key for both strings and text nodes due to minimal impl */\n          /* @__PURE__ */ p(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: a }, `text-${i}-${o.substr(0, 20)}`)\n        );\n      } else {\n        if (c3(r))\n          return /* @__PURE__ */ p(Qd, ve({}, r.link), `link-${i}-${r.link.id}`);\n        if (l3(r))\n          return /* @__PURE__ */ p(\n            Kb,\n            ve({}, r.nextLink),\n            `next-link-${i}-${r.nextLink.id}`\n          );\n        if (d3(r))\n          return /* @__PURE__ */ p(\n            vt,\n            Ie(ve({}, r.icon), {\n              width: r.icon.width || 12\n            }),\n            `icon-${i}-${r.icon.id}`\n          );\n        if (f3(r))\n          return /* @__PURE__ */ p(\n            vM,\n            ve({}, r.currencyAmount),\n            `currency-amount-${i}-${r.currencyAmount.id}`\n          );\n        if (u3(r))\n          return /* @__PURE__ */ p(\n            x$,\n            ve({}, r.clipboardTextField),\n            `clipboard-text-field-${i}-${r.clipboardTextField.id}`\n          );\n      }\n    else return null;\n    return null;\n  });\n  return /* @__PURE__ */ p(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: n });\n}\nfunction tL(e) {\n  return typeof e > \"u\" || e === null || d3(e);\n}\nfunction nL(e, t, n = !0) {\n  const r = M3(e), i = {\n    link: t.link || t.default,\n    text: t.text || t.default,\n    nextLink: t.nextLink || t.default,\n    currencyAmount: t.currencyAmount || t.default,\n    clipboardTextField: t.clipboardTextField || t.default\n  };\n  return r.map((a) => tL(a) ? a : c3(a) && i.link ? {\n    link: Ie(ve({}, a.link), {\n      typography: n ? i.link : a.link.typography || i.link\n    })\n  } : l3(a) && i.nextLink ? {\n    nextLink: Ie(ve({}, a.nextLink), {\n      typography: n ? i.nextLink : a.nextLink.typography || i.nextLink\n    })\n  } : f3(a) && i.currencyAmount ? {\n    currencyAmount: Ie(ve({}, a.currencyAmount), {\n      typography: i.currencyAmount\n    })\n  } : u3(a) && i.clipboardTextField ? {\n    clipboardTextField: Ie(ve({}, a.clipboardTextField), {\n      typography: i.clipboardTextField\n    })\n  } : ($1(a) || Ta(a)) && i.text ? rL(\n    a,\n    i.text,\n    n\n  ) : a);\n}\nfunction rL(e, t, n = !0) {\n  if (Ta(e))\n    return {\n      text: e,\n      typography: t\n    };\n  const r = !n && \"typography\" in e ? e.typography : void 0;\n  return Ie(ve({}, e), {\n    typography: r || t\n  });\n}\nfunction M0(e, t) {\n  return nL(\n    e,\n    t,\n    !1\n  );\n}\nvar wr = G.button`\n  ${vc}\n  font-family: ${({ theme: e }) => e.typography.fontFamilies.main};\n  appearance: none;\n  background: transparent;\n  border: none;\n  padding: 0;\n  cursor: ${({ disabled: e }) => e ? \"not-allowed\" : \"pointer\"};\n  /* needed in Safari for some reason */\n  font-size: 1rem;\n  color: inherit;\n  font-weight: inherit;\n`, Al = {\n  docHeight: \"--doc-height\"\n}, Pn = {\n  card: 1,\n  fieldError: 1,\n  textInput: 2,\n  select: 3,\n  selectFocused: 4,\n  walletActionPreviewTopGradient: 1,\n  headerContainer: 99,\n  smBanner: 99,\n  headerTop: 100,\n  navMenu: 100,\n  smNavMenu: 100,\n  navAction: 101,\n  smNavAction: 100,\n  // keep under navDropdown\n  notificationBanner: 170,\n  qrReaderVideo: 180,\n  qrReaderOverlay: 181,\n  modalOverlay: 190,\n  modalContainer: 191,\n  dropdown: 192,\n  tooltip: 193,\n  toast: 200\n}, iL = \"100%\", oL = \"100%\", I1 = 24, aL = \"32px\";\ngt`\n  margin-top: ${aL};\n`;\nvar D1 = ({ theme: e }) => e.c4Neutral, sL = 600, cL = 8, g6 = 12, lL = ({ theme: e }) => Ri(e.c1Neutral, e.c3Neutral)({ theme: e }), L0 = ({ theme: e }) => Ri(e.hcNeutral, e.hcNeutral)({ theme: e }), A0 = ({\n  theme: e,\n  paddingLeftPx: t,\n  paddingRightPx: n,\n  activeOutline: r,\n  activeOutlineColor: i\n}) => {\n  if (r) {\n    const o = i ? Ea(e, i) : L0({ theme: e });\n    return gt`\n      outline: 2px solid ${o};\n      outline-offset: 2px;\n      caret-color: ${o};\n    `;\n  }\n  return gt`\n    border-color: ${L0({ theme: e })};\n    border-width: 2px;\n    padding: ${g6 - 1}px;\n    ${t ? `padding-left: ${t - 1}px;` : \"\"}\n    ${n ? `padding-right: ${n - 1}px;` : \"\"}\n  `;\n}, As = {\n  type: \"Body\",\n  size: \"Small\",\n  color: \"text\"\n}, dL = ({\n  theme: e,\n  active: t,\n  disabled: n,\n  hasError: r,\n  paddingLeftPx: i,\n  paddingRightPx: o,\n  paddingTopPx: a,\n  paddingBottomPx: s,\n  activeOutline: c,\n  activeOutlineColor: l,\n  typography: d,\n  borderRadius: f\n}) => {\n  var g;\n  return gt`\n  border-radius: ${f === \"round\" ? \"999\" : cL}px;\n  background-color: ${n ? e.vlcNeutral : e.inputBackground};\n  cursor: ${n ? \"not-allowed\" : \"auto\"};\n  box-sizing: border-box;\n  font-weight: ${sL};\n\n  position: relative;\n  z-index: ${Pn.textInput};\n  font-family: ${(g = e.typography) == null ? void 0 : g.fontFamilies.main};\n  padding: ${g6 - (r ? 1 : 0)}px;\n  ${i ? `padding-left: ${i - (r ? 1 : 0)}px;` : \"\"}\n  ${o ? `padding-right: ${o - (r ? 1 : 0)}px;` : \"\"}\n  ${a ? `padding-top: ${a - (r ? 1 : 0)}px;` : \"\"}\n  ${s ? `padding-bottom: ${s - (r ? 1 : 0)}px;` : \"\"}\n  border-style: solid;\n  border-width: ${r ? \"2\" : \"1\"}px;\n  border-color: ${r ? e.danger : lL({ theme: e })};\n  line-height: 22px;\n  outline: none;\n\n  ${yn(\n    e,\n    (d == null ? void 0 : d.type) || As.type,\n    (d == null ? void 0 : d.size) || As.size,\n    (d == null ? void 0 : d.color) || As.color\n  )}\n\n  width: ${oL};\n  max-width: ${iL};\n  text-overflow: ellipsis;\n  &:focus,\n  &:active,\n  &:has(:focus) {\n    ${A0({\n    theme: e,\n    paddingLeftPx: i,\n    paddingRightPx: o,\n    activeOutline: c,\n    activeOutlineColor: l\n  })}\n  }\n\n  ${t && A0({\n    theme: e,\n    paddingLeftPx: i,\n    paddingRightPx: o,\n    activeOutline: c,\n    activeOutlineColor: l\n  })}\n\n  &::placeholder {\n    color: ${D1({ theme: e })};\n  }\n\n  &:focus::placeholder {\n    color: ${D1({ theme: e })};\n  }\n`;\n};\nG.div`\n  background-color: rgba(242, 239, 255, 1);\n  padding: 16px 16px 8px;\n  margin-top: -8px;\n  border-radius: 0 0 8px 8px;\n  position: relative;\n  z-index: ${Pn.fieldError};\n`;\nvar ks = 0.25;\nfunction fL({\n  text: e,\n  hasError: t = !1,\n  tooltipId: n\n}) {\n  const r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), [i, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(e), [a, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!!e);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    e ? (o(e), s(!0), r.current && clearTimeout(r.current)) : (s(!1), r.current = setTimeout(() => {\n      o(void 0);\n    }, ks * 1e3));\n  }, [e]), /* @__PURE__ */ p(\n    uL,\n    {\n      visible: a,\n      hasError: t,\n      cursorPointer: !!n,\n      children: n ? /* @__PURE__ */ p(\"span\", { \"data-tooltip-id\": n, children: i }) : i\n    }\n  );\n}\nvar uL = G.div`\n  margin-top: ${({ visible: e }) => e ? \"8px\" : \"0px\"};\n  margin-left: ${({ visible: e }) => e ? \"8px\" : \"0px\"};\n  font-size: 12px;\n  font-size: ${({ visible: e }) => e ? \"12px\" : \"0px\"};\n  opacity: ${({ visible: e }) => e ? \"1\" : \"0\"};\n  overflow: hidden;\n  transition:\n    font-size ${ks}s cubic-bezier(0.25, 0.87, 0.56, 1.23),\n    opacity ${ks * 0.8}s cubic-bezier(0.25, 0.87, 0.56, 1.23),\n    margin ${ks}s cubic-bezier(0.25, 0.87, 0.56, 1.23);\n  color: ${({ hasError: e, theme: t }) => e ? t.danger : t.text};\n  cursor: ${({ cursorPointer: e }) => e ? \"pointer\" : \"auto\"};\n`, m6 = ({\n  theme: e,\n  hasError: t\n}) => gt`\n  color: ${t ? e.danger : e.text};\n  font-size: 14px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  & + * {\n    margin-top: 12px;\n  }\n  * ~ & {\n    margin-top: 40px;\n  }\n`;\nG.label`\n  ${Ud}\n  ${m6}\n`;\nG.div`\n  ${Ud}\n  ${m6}\n`;\nfunction hL({\n  center: e = !0,\n  size: t = 60,\n  ml: n = 0,\n  mt: r = 0,\n  kind: i = \"primary\"\n}) {\n  const o = Cn(), a = mL(null, i, \"defaultIconName\", o);\n  return /* @__PURE__ */ p(pL, { center: e, ml: n, mt: r, children: /* @__PURE__ */ p(gL, { children: /* @__PURE__ */ p(vt, { name: a, width: t }) }) });\n}\nvar pL = G.div`\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  margin-left: ${({ ml: e }) => e}px;\n  margin-top: ${({ mt: e }) => e}px;\n\n  ${({ center: e }) => e && `\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: 0 !important;\n  `}\n`, gL = G.div`\n  display: inline-flex;\n  animation: rotate 0.5s linear infinite;\n\n  @keyframes rotate {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\nfunction mL(e, t, n, r) {\n  var i;\n  return (\n    /** props may be unset for a given kind but theme defaults always exist,\n     * so this will always resolve a value: */\n    ((i = r.loading.kinds[t]) == null ? void 0 : i[n]) || r.loading[n]\n  );\n}\nfunction k0(e, t) {\n  if (e.inserted[t.name] === void 0)\n    return e.insert(\"\", t, e.sheet, !0);\n}\nfunction _0(e, t, n) {\n  var r = [], i = fc(e, r, n);\n  return r.length < 2 ? n : i + t(r);\n}\nvar vL = function(t) {\n  var n = Sd(t);\n  n.sheet.speedy = function(s) {\n    this.isSpeedy = s;\n  }, n.compat = !0;\n  var r = function() {\n    for (var c = arguments.length, l = new Array(c), d = 0; d < c; d++)\n      l[d] = arguments[d];\n    var f = Li(l, n.registered, void 0);\n    return uc(n, f, !1), n.key + \"-\" + f.name;\n  }, i = function() {\n    for (var c = arguments.length, l = new Array(c), d = 0; d < c; d++)\n      l[d] = arguments[d];\n    var f = Li(l, n.registered), g = \"animation-\" + f.name;\n    return k0(n, {\n      name: f.name,\n      styles: \"@keyframes \" + g + \"{\" + f.styles + \"}\"\n    }), g;\n  }, o = function() {\n    for (var c = arguments.length, l = new Array(c), d = 0; d < c; d++)\n      l[d] = arguments[d];\n    var f = Li(l, n.registered);\n    k0(n, f);\n  }, a = function() {\n    for (var c = arguments.length, l = new Array(c), d = 0; d < c; d++)\n      l[d] = arguments[d];\n    return _0(n.registered, r, yL(l));\n  };\n  return {\n    css: r,\n    cx: a,\n    injectGlobal: o,\n    keyframes: i,\n    hydrate: function(c) {\n      c.forEach(function(l) {\n        n.inserted[l] = !0;\n      });\n    },\n    flush: function() {\n      n.registered = {}, n.inserted = {}, n.sheet.flush();\n    },\n    sheet: n.sheet,\n    cache: n,\n    getRegisteredStyles: fc.bind(null, n.registered),\n    merge: _0.bind(null, n.registered, r)\n  };\n}, yL = function e(t) {\n  for (var n = \"\", r = 0; r < t.length; r++) {\n    var i = t[r];\n    if (i != null) {\n      var o = void 0;\n      switch (typeof i) {\n        case \"boolean\":\n          break;\n        case \"object\": {\n          if (Array.isArray(i))\n            o = e(i);\n          else {\n            o = \"\";\n            for (var a in i)\n              i[a] && a && (o && (o += \" \"), o += a);\n          }\n          break;\n        }\n        default:\n          o = i;\n      }\n      o && (n && (n += \" \"), n += o);\n    }\n  }\n  return n;\n}, bL = vL({\n  key: \"css\"\n}), xL = bL.css;\nconst Co = Math.min, _i = Math.max, js = Math.round, ds = Math.floor, oi = (e) => ({\n  x: e,\n  y: e\n}), wL = {\n  left: \"right\",\n  right: \"left\",\n  bottom: \"top\",\n  top: \"bottom\"\n}, $L = {\n  start: \"end\",\n  end: \"start\"\n};\nfunction R1(e, t, n) {\n  return _i(e, Co(t, n));\n}\nfunction Xa(e, t) {\n  return typeof e == \"function\" ? e(t) : e;\n}\nfunction Oi(e) {\n  return e.split(\"-\")[0];\n}\nfunction Ja(e) {\n  return e.split(\"-\")[1];\n}\nfunction v6(e) {\n  return e === \"x\" ? \"y\" : \"x\";\n}\nfunction ef(e) {\n  return e === \"y\" ? \"height\" : \"width\";\n}\nfunction So(e) {\n  return [\"top\", \"bottom\"].includes(Oi(e)) ? \"y\" : \"x\";\n}\nfunction tf(e) {\n  return v6(So(e));\n}\nfunction CL(e, t, n) {\n  n === void 0 && (n = !1);\n  const r = Ja(e), i = tf(e), o = ef(i);\n  let a = i === \"x\" ? r === (n ? \"end\" : \"start\") ? \"right\" : \"left\" : r === \"start\" ? \"bottom\" : \"top\";\n  return t.reference[o] > t.floating[o] && (a = qs(a)), [a, qs(a)];\n}\nfunction SL(e) {\n  const t = qs(e);\n  return [P1(e), t, P1(t)];\n}\nfunction P1(e) {\n  return e.replace(/start|end/g, (t) => $L[t]);\n}\nfunction ML(e, t, n) {\n  const r = [\"left\", \"right\"], i = [\"right\", \"left\"], o = [\"top\", \"bottom\"], a = [\"bottom\", \"top\"];\n  switch (e) {\n    case \"top\":\n    case \"bottom\":\n      return n ? t ? i : r : t ? r : i;\n    case \"left\":\n    case \"right\":\n      return t ? o : a;\n    default:\n      return [];\n  }\n}\nfunction LL(e, t, n, r) {\n  const i = Ja(e);\n  let o = ML(Oi(e), n === \"start\", r);\n  return i && (o = o.map((a) => a + \"-\" + i), t && (o = o.concat(o.map(P1)))), o;\n}\nfunction qs(e) {\n  return e.replace(/left|right|bottom|top/g, (t) => wL[t]);\n}\nfunction AL(e) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...e\n  };\n}\nfunction y6(e) {\n  return typeof e != \"number\" ? AL(e) : {\n    top: e,\n    right: e,\n    bottom: e,\n    left: e\n  };\n}\nfunction Zs(e) {\n  const {\n    x: t,\n    y: n,\n    width: r,\n    height: i\n  } = e;\n  return {\n    width: r,\n    height: i,\n    top: n,\n    left: t,\n    right: t + r,\n    bottom: n + i,\n    x: t,\n    y: n\n  };\n}\nfunction E0(e, t, n) {\n  let {\n    reference: r,\n    floating: i\n  } = e;\n  const o = So(t), a = tf(t), s = ef(a), c = Oi(t), l = o === \"y\", d = r.x + r.width / 2 - i.width / 2, f = r.y + r.height / 2 - i.height / 2, g = r[s] / 2 - i[s] / 2;\n  let b;\n  switch (c) {\n    case \"top\":\n      b = {\n        x: d,\n        y: r.y - i.height\n      };\n      break;\n    case \"bottom\":\n      b = {\n        x: d,\n        y: r.y + r.height\n      };\n      break;\n    case \"right\":\n      b = {\n        x: r.x + r.width,\n        y: f\n      };\n      break;\n    case \"left\":\n      b = {\n        x: r.x - i.width,\n        y: f\n      };\n      break;\n    default:\n      b = {\n        x: r.x,\n        y: r.y\n      };\n  }\n  switch (Ja(t)) {\n    case \"start\":\n      b[a] -= g * (n && l ? -1 : 1);\n      break;\n    case \"end\":\n      b[a] += g * (n && l ? -1 : 1);\n      break;\n  }\n  return b;\n}\nconst kL = async (e, t, n) => {\n  const {\n    placement: r = \"bottom\",\n    strategy: i = \"absolute\",\n    middleware: o = [],\n    platform: a\n  } = n, s = o.filter(Boolean), c = await (a.isRTL == null ? void 0 : a.isRTL(t));\n  let l = await a.getElementRects({\n    reference: e,\n    floating: t,\n    strategy: i\n  }), {\n    x: d,\n    y: f\n  } = E0(l, r, c), g = r, b = {}, x = 0;\n  for (let m = 0; m < s.length; m++) {\n    const {\n      name: C,\n      fn: S\n    } = s[m], {\n      x: T,\n      y: N,\n      data: W,\n      reset: U\n    } = await S({\n      x: d,\n      y: f,\n      initialPlacement: r,\n      placement: g,\n      strategy: i,\n      middlewareData: b,\n      rects: l,\n      platform: a,\n      elements: {\n        reference: e,\n        floating: t\n      }\n    });\n    d = T ?? d, f = N ?? f, b = {\n      ...b,\n      [C]: {\n        ...b[C],\n        ...W\n      }\n    }, U && x <= 50 && (x++, typeof U == \"object\" && (U.placement && (g = U.placement), U.rects && (l = U.rects === !0 ? await a.getElementRects({\n      reference: e,\n      floating: t,\n      strategy: i\n    }) : U.rects), {\n      x: d,\n      y: f\n    } = E0(l, g, c)), m = -1);\n  }\n  return {\n    x: d,\n    y: f,\n    placement: g,\n    strategy: i,\n    middlewareData: b\n  };\n};\nasync function b6(e, t) {\n  var n;\n  t === void 0 && (t = {});\n  const {\n    x: r,\n    y: i,\n    platform: o,\n    rects: a,\n    elements: s,\n    strategy: c\n  } = e, {\n    boundary: l = \"clippingAncestors\",\n    rootBoundary: d = \"viewport\",\n    elementContext: f = \"floating\",\n    altBoundary: g = !1,\n    padding: b = 0\n  } = Xa(t, e), x = y6(b), C = s[g ? f === \"floating\" ? \"reference\" : \"floating\" : f], S = Zs(await o.getClippingRect({\n    element: (n = await (o.isElement == null ? void 0 : o.isElement(C))) == null || n ? C : C.contextElement || await (o.getDocumentElement == null ? void 0 : o.getDocumentElement(s.floating)),\n    boundary: l,\n    rootBoundary: d,\n    strategy: c\n  })), T = f === \"floating\" ? {\n    x: r,\n    y: i,\n    width: a.floating.width,\n    height: a.floating.height\n  } : a.reference, N = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(s.floating)), W = await (o.isElement == null ? void 0 : o.isElement(N)) ? await (o.getScale == null ? void 0 : o.getScale(N)) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  }, U = Zs(o.convertOffsetParentRelativeRectToViewportRelativeRect ? await o.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements: s,\n    rect: T,\n    offsetParent: N,\n    strategy: c\n  }) : T);\n  return {\n    top: (S.top - U.top + x.top) / W.y,\n    bottom: (U.bottom - S.bottom + x.bottom) / W.y,\n    left: (S.left - U.left + x.left) / W.x,\n    right: (U.right - S.right + x.right) / W.x\n  };\n}\nconst _L = (e) => ({\n  name: \"arrow\",\n  options: e,\n  async fn(t) {\n    const {\n      x: n,\n      y: r,\n      placement: i,\n      rects: o,\n      platform: a,\n      elements: s,\n      middlewareData: c\n    } = t, {\n      element: l,\n      padding: d = 0\n    } = Xa(e, t) || {};\n    if (l == null)\n      return {};\n    const f = y6(d), g = {\n      x: n,\n      y: r\n    }, b = tf(i), x = ef(b), m = await a.getDimensions(l), C = b === \"y\", S = C ? \"top\" : \"left\", T = C ? \"bottom\" : \"right\", N = C ? \"clientHeight\" : \"clientWidth\", W = o.reference[x] + o.reference[b] - g[b] - o.floating[x], U = g[b] - o.reference[b], F = await (a.getOffsetParent == null ? void 0 : a.getOffsetParent(l));\n    let j = F ? F[N] : 0;\n    (!j || !await (a.isElement == null ? void 0 : a.isElement(F))) && (j = s.floating[N] || o.floating[x]);\n    const K = W / 2 - U / 2, J = j / 2 - m[x] / 2 - 1, X = Co(f[S], J), _ = Co(f[T], J), u = X, v = j - m[x] - _, w = j / 2 - m[x] / 2 + K, y = R1(u, w, v), $ = !c.arrow && Ja(i) != null && w !== y && o.reference[x] / 2 - (w < u ? X : _) - m[x] / 2 < 0, A = $ ? w < u ? w - u : w - v : 0;\n    return {\n      [b]: g[b] + A,\n      data: {\n        [b]: y,\n        centerOffset: w - y - A,\n        ...$ && {\n          alignmentOffset: A\n        }\n      },\n      reset: $\n    };\n  }\n}), EL = function(e) {\n  return e === void 0 && (e = {}), {\n    name: \"flip\",\n    options: e,\n    async fn(t) {\n      var n, r;\n      const {\n        placement: i,\n        middlewareData: o,\n        rects: a,\n        initialPlacement: s,\n        platform: c,\n        elements: l\n      } = t, {\n        mainAxis: d = !0,\n        crossAxis: f = !0,\n        fallbackPlacements: g,\n        fallbackStrategy: b = \"bestFit\",\n        fallbackAxisSideDirection: x = \"none\",\n        flipAlignment: m = !0,\n        ...C\n      } = Xa(e, t);\n      if ((n = o.arrow) != null && n.alignmentOffset)\n        return {};\n      const S = Oi(i), T = So(s), N = Oi(s) === s, W = await (c.isRTL == null ? void 0 : c.isRTL(l.floating)), U = g || (N || !m ? [qs(s)] : SL(s)), F = x !== \"none\";\n      !g && F && U.push(...LL(s, m, x, W));\n      const j = [s, ...U], K = await b6(t, C), J = [];\n      let X = ((r = o.flip) == null ? void 0 : r.overflows) || [];\n      if (d && J.push(K[S]), f) {\n        const w = CL(i, a, W);\n        J.push(K[w[0]], K[w[1]]);\n      }\n      if (X = [...X, {\n        placement: i,\n        overflows: J\n      }], !J.every((w) => w <= 0)) {\n        var _, u;\n        const w = (((_ = o.flip) == null ? void 0 : _.index) || 0) + 1, y = j[w];\n        if (y)\n          return {\n            data: {\n              index: w,\n              overflows: X\n            },\n            reset: {\n              placement: y\n            }\n          };\n        let $ = (u = X.filter((A) => A.overflows[0] <= 0).sort((A, H) => A.overflows[1] - H.overflows[1])[0]) == null ? void 0 : u.placement;\n        if (!$)\n          switch (b) {\n            case \"bestFit\": {\n              var v;\n              const A = (v = X.filter((H) => {\n                if (F) {\n                  const M = So(H.placement);\n                  return M === T || // Create a bias to the `y` side axis due to horizontal\n                  // reading directions favoring greater width.\n                  M === \"y\";\n                }\n                return !0;\n              }).map((H) => [H.placement, H.overflows.filter((M) => M > 0).reduce((M, h) => M + h, 0)]).sort((H, M) => H[1] - M[1])[0]) == null ? void 0 : v[0];\n              A && ($ = A);\n              break;\n            }\n            case \"initialPlacement\":\n              $ = s;\n              break;\n          }\n        if (i !== $)\n          return {\n            reset: {\n              placement: $\n            }\n          };\n      }\n      return {};\n    }\n  };\n};\nasync function TL(e, t) {\n  const {\n    placement: n,\n    platform: r,\n    elements: i\n  } = e, o = await (r.isRTL == null ? void 0 : r.isRTL(i.floating)), a = Oi(n), s = Ja(n), c = So(n) === \"y\", l = [\"left\", \"top\"].includes(a) ? -1 : 1, d = o && c ? -1 : 1, f = Xa(t, e);\n  let {\n    mainAxis: g,\n    crossAxis: b,\n    alignmentAxis: x\n  } = typeof f == \"number\" ? {\n    mainAxis: f,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...f\n  };\n  return s && typeof x == \"number\" && (b = s === \"end\" ? x * -1 : x), c ? {\n    x: b * d,\n    y: g * l\n  } : {\n    x: g * l,\n    y: b * d\n  };\n}\nconst BL = function(e) {\n  return e === void 0 && (e = 0), {\n    name: \"offset\",\n    options: e,\n    async fn(t) {\n      var n, r;\n      const {\n        x: i,\n        y: o,\n        placement: a,\n        middlewareData: s\n      } = t, c = await TL(t, e);\n      return a === ((n = s.offset) == null ? void 0 : n.placement) && (r = s.arrow) != null && r.alignmentOffset ? {} : {\n        x: i + c.x,\n        y: o + c.y,\n        data: {\n          ...c,\n          placement: a\n        }\n      };\n    }\n  };\n}, IL = function(e) {\n  return e === void 0 && (e = {}), {\n    name: \"shift\",\n    options: e,\n    async fn(t) {\n      const {\n        x: n,\n        y: r,\n        placement: i\n      } = t, {\n        mainAxis: o = !0,\n        crossAxis: a = !1,\n        limiter: s = {\n          fn: (C) => {\n            let {\n              x: S,\n              y: T\n            } = C;\n            return {\n              x: S,\n              y: T\n            };\n          }\n        },\n        ...c\n      } = Xa(e, t), l = {\n        x: n,\n        y: r\n      }, d = await b6(t, c), f = So(Oi(i)), g = v6(f);\n      let b = l[g], x = l[f];\n      if (o) {\n        const C = g === \"y\" ? \"top\" : \"left\", S = g === \"y\" ? \"bottom\" : \"right\", T = b + d[C], N = b - d[S];\n        b = R1(T, b, N);\n      }\n      if (a) {\n        const C = f === \"y\" ? \"top\" : \"left\", S = f === \"y\" ? \"bottom\" : \"right\", T = x + d[C], N = x - d[S];\n        x = R1(T, x, N);\n      }\n      const m = s.fn({\n        ...t,\n        [g]: b,\n        [f]: x\n      });\n      return {\n        ...m,\n        data: {\n          x: m.x - n,\n          y: m.y - r\n        }\n      };\n    }\n  };\n};\nfunction Fo(e) {\n  return x6(e) ? (e.nodeName || \"\").toLowerCase() : \"#document\";\n}\nfunction wn(e) {\n  var t;\n  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;\n}\nfunction Vr(e) {\n  var t;\n  return (t = (x6(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;\n}\nfunction x6(e) {\n  return e instanceof Node || e instanceof wn(e).Node;\n}\nfunction zn(e) {\n  return e instanceof Element || e instanceof wn(e).Element;\n}\nfunction pr(e) {\n  return e instanceof HTMLElement || e instanceof wn(e).HTMLElement;\n}\nfunction T0(e) {\n  return typeof ShadowRoot > \"u\" ? !1 : e instanceof ShadowRoot || e instanceof wn(e).ShadowRoot;\n}\nfunction Qa(e) {\n  const {\n    overflow: t,\n    overflowX: n,\n    overflowY: r,\n    display: i\n  } = Wn(e);\n  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && ![\"inline\", \"contents\"].includes(i);\n}\nfunction DL(e) {\n  return [\"table\", \"td\", \"th\"].includes(Fo(e));\n}\nfunction Bc(e) {\n  return [\":popover-open\", \":modal\"].some((t) => {\n    try {\n      return e.matches(t);\n    } catch {\n      return !1;\n    }\n  });\n}\nfunction nf(e) {\n  const t = rf(), n = zn(e) ? Wn(e) : e;\n  return n.transform !== \"none\" || n.perspective !== \"none\" || (n.containerType ? n.containerType !== \"normal\" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== \"none\" : !1) || !t && (n.filter ? n.filter !== \"none\" : !1) || [\"transform\", \"perspective\", \"filter\"].some((r) => (n.willChange || \"\").includes(r)) || [\"paint\", \"layout\", \"strict\", \"content\"].some((r) => (n.contain || \"\").includes(r));\n}\nfunction RL(e) {\n  let t = ai(e);\n  for (; pr(t) && !Mo(t); ) {\n    if (nf(t))\n      return t;\n    if (Bc(t))\n      return null;\n    t = ai(t);\n  }\n  return null;\n}\nfunction rf() {\n  return typeof CSS > \"u\" || !CSS.supports ? !1 : CSS.supports(\"-webkit-backdrop-filter\", \"none\");\n}\nfunction Mo(e) {\n  return [\"html\", \"body\", \"#document\"].includes(Fo(e));\n}\nfunction Wn(e) {\n  return wn(e).getComputedStyle(e);\n}\nfunction Ic(e) {\n  return zn(e) ? {\n    scrollLeft: e.scrollLeft,\n    scrollTop: e.scrollTop\n  } : {\n    scrollLeft: e.scrollX,\n    scrollTop: e.scrollY\n  };\n}\nfunction ai(e) {\n  if (Fo(e) === \"html\")\n    return e;\n  const t = (\n    // Step into the shadow DOM of the parent of a slotted node.\n    e.assignedSlot || // DOM Element detected.\n    e.parentNode || // ShadowRoot detected.\n    T0(e) && e.host || // Fallback.\n    Vr(e)\n  );\n  return T0(t) ? t.host : t;\n}\nfunction w6(e) {\n  const t = ai(e);\n  return Mo(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : pr(t) && Qa(t) ? t : w6(t);\n}\nfunction Ba(e, t, n) {\n  var r;\n  t === void 0 && (t = []), n === void 0 && (n = !0);\n  const i = w6(e), o = i === ((r = e.ownerDocument) == null ? void 0 : r.body), a = wn(i);\n  if (o) {\n    const s = O1(a);\n    return t.concat(a, a.visualViewport || [], Qa(i) ? i : [], s && n ? Ba(s) : []);\n  }\n  return t.concat(i, Ba(i, [], n));\n}\nfunction O1(e) {\n  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;\n}\nfunction $6(e) {\n  const t = Wn(e);\n  let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;\n  const i = pr(e), o = i ? e.offsetWidth : n, a = i ? e.offsetHeight : r, s = js(n) !== o || js(r) !== a;\n  return s && (n = o, r = a), {\n    width: n,\n    height: r,\n    $: s\n  };\n}\nfunction of(e) {\n  return zn(e) ? e : e.contextElement;\n}\nfunction uo(e) {\n  const t = of(e);\n  if (!pr(t))\n    return oi(1);\n  const n = t.getBoundingClientRect(), {\n    width: r,\n    height: i,\n    $: o\n  } = $6(t);\n  let a = (o ? js(n.width) : n.width) / r, s = (o ? js(n.height) : n.height) / i;\n  return (!a || !Number.isFinite(a)) && (a = 1), (!s || !Number.isFinite(s)) && (s = 1), {\n    x: a,\n    y: s\n  };\n}\nconst PL = /* @__PURE__ */ oi(0);\nfunction C6(e) {\n  const t = wn(e);\n  return !rf() || !t.visualViewport ? PL : {\n    x: t.visualViewport.offsetLeft,\n    y: t.visualViewport.offsetTop\n  };\n}\nfunction OL(e, t, n) {\n  return t === void 0 && (t = !1), !n || t && n !== wn(e) ? !1 : t;\n}\nfunction Hi(e, t, n, r) {\n  t === void 0 && (t = !1), n === void 0 && (n = !1);\n  const i = e.getBoundingClientRect(), o = of(e);\n  let a = oi(1);\n  t && (r ? zn(r) && (a = uo(r)) : a = uo(e));\n  const s = OL(o, n, r) ? C6(o) : oi(0);\n  let c = (i.left + s.x) / a.x, l = (i.top + s.y) / a.y, d = i.width / a.x, f = i.height / a.y;\n  if (o) {\n    const g = wn(o), b = r && zn(r) ? wn(r) : r;\n    let x = g, m = O1(x);\n    for (; m && r && b !== x; ) {\n      const C = uo(m), S = m.getBoundingClientRect(), T = Wn(m), N = S.left + (m.clientLeft + parseFloat(T.paddingLeft)) * C.x, W = S.top + (m.clientTop + parseFloat(T.paddingTop)) * C.y;\n      c *= C.x, l *= C.y, d *= C.x, f *= C.y, c += N, l += W, x = wn(m), m = O1(x);\n    }\n  }\n  return Zs({\n    width: d,\n    height: f,\n    x: c,\n    y: l\n  });\n}\nfunction HL(e) {\n  let {\n    elements: t,\n    rect: n,\n    offsetParent: r,\n    strategy: i\n  } = e;\n  const o = i === \"fixed\", a = Vr(r), s = t ? Bc(t.floating) : !1;\n  if (r === a || s && o)\n    return n;\n  let c = {\n    scrollLeft: 0,\n    scrollTop: 0\n  }, l = oi(1);\n  const d = oi(0), f = pr(r);\n  if ((f || !f && !o) && ((Fo(r) !== \"body\" || Qa(a)) && (c = Ic(r)), pr(r))) {\n    const g = Hi(r);\n    l = uo(r), d.x = g.x + r.clientLeft, d.y = g.y + r.clientTop;\n  }\n  return {\n    width: n.width * l.x,\n    height: n.height * l.y,\n    x: n.x * l.x - c.scrollLeft * l.x + d.x,\n    y: n.y * l.y - c.scrollTop * l.y + d.y\n  };\n}\nfunction UL(e) {\n  return Array.from(e.getClientRects());\n}\nfunction S6(e) {\n  return Hi(Vr(e)).left + Ic(e).scrollLeft;\n}\nfunction NL(e) {\n  const t = Vr(e), n = Ic(e), r = e.ownerDocument.body, i = _i(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), o = _i(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);\n  let a = -n.scrollLeft + S6(e);\n  const s = -n.scrollTop;\n  return Wn(r).direction === \"rtl\" && (a += _i(t.clientWidth, r.clientWidth) - i), {\n    width: i,\n    height: o,\n    x: a,\n    y: s\n  };\n}\nfunction VL(e, t) {\n  const n = wn(e), r = Vr(e), i = n.visualViewport;\n  let o = r.clientWidth, a = r.clientHeight, s = 0, c = 0;\n  if (i) {\n    o = i.width, a = i.height;\n    const l = rf();\n    (!l || l && t === \"fixed\") && (s = i.offsetLeft, c = i.offsetTop);\n  }\n  return {\n    width: o,\n    height: a,\n    x: s,\n    y: c\n  };\n}\nfunction zL(e, t) {\n  const n = Hi(e, !0, t === \"fixed\"), r = n.top + e.clientTop, i = n.left + e.clientLeft, o = pr(e) ? uo(e) : oi(1), a = e.clientWidth * o.x, s = e.clientHeight * o.y, c = i * o.x, l = r * o.y;\n  return {\n    width: a,\n    height: s,\n    x: c,\n    y: l\n  };\n}\nfunction B0(e, t, n) {\n  let r;\n  if (t === \"viewport\")\n    r = VL(e, n);\n  else if (t === \"document\")\n    r = NL(Vr(e));\n  else if (zn(t))\n    r = zL(t, n);\n  else {\n    const i = C6(e);\n    r = {\n      ...t,\n      x: t.x - i.x,\n      y: t.y - i.y\n    };\n  }\n  return Zs(r);\n}\nfunction M6(e, t) {\n  const n = ai(e);\n  return n === t || !zn(n) || Mo(n) ? !1 : Wn(n).position === \"fixed\" || M6(n, t);\n}\nfunction WL(e, t) {\n  const n = t.get(e);\n  if (n)\n    return n;\n  let r = Ba(e, [], !1).filter((s) => zn(s) && Fo(s) !== \"body\"), i = null;\n  const o = Wn(e).position === \"fixed\";\n  let a = o ? ai(e) : e;\n  for (; zn(a) && !Mo(a); ) {\n    const s = Wn(a), c = nf(a);\n    !c && s.position === \"fixed\" && (i = null), (o ? !c && !i : !c && s.position === \"static\" && !!i && [\"absolute\", \"fixed\"].includes(i.position) || Qa(a) && !c && M6(e, a)) ? r = r.filter((d) => d !== a) : i = s, a = ai(a);\n  }\n  return t.set(e, r), r;\n}\nfunction FL(e) {\n  let {\n    element: t,\n    boundary: n,\n    rootBoundary: r,\n    strategy: i\n  } = e;\n  const a = [...n === \"clippingAncestors\" ? Bc(t) ? [] : WL(t, this._c) : [].concat(n), r], s = a[0], c = a.reduce((l, d) => {\n    const f = B0(t, d, i);\n    return l.top = _i(f.top, l.top), l.right = Co(f.right, l.right), l.bottom = Co(f.bottom, l.bottom), l.left = _i(f.left, l.left), l;\n  }, B0(t, s, i));\n  return {\n    width: c.right - c.left,\n    height: c.bottom - c.top,\n    x: c.left,\n    y: c.top\n  };\n}\nfunction jL(e) {\n  const {\n    width: t,\n    height: n\n  } = $6(e);\n  return {\n    width: t,\n    height: n\n  };\n}\nfunction qL(e, t, n) {\n  const r = pr(t), i = Vr(t), o = n === \"fixed\", a = Hi(e, !0, o, t);\n  let s = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const c = oi(0);\n  if (r || !r && !o)\n    if ((Fo(t) !== \"body\" || Qa(i)) && (s = Ic(t)), r) {\n      const f = Hi(t, !0, o, t);\n      c.x = f.x + t.clientLeft, c.y = f.y + t.clientTop;\n    } else i && (c.x = S6(i));\n  const l = a.left + s.scrollLeft - c.x, d = a.top + s.scrollTop - c.y;\n  return {\n    x: l,\n    y: d,\n    width: a.width,\n    height: a.height\n  };\n}\nfunction kl(e) {\n  return Wn(e).position === \"static\";\n}\nfunction I0(e, t) {\n  return !pr(e) || Wn(e).position === \"fixed\" ? null : t ? t(e) : e.offsetParent;\n}\nfunction L6(e, t) {\n  const n = wn(e);\n  if (Bc(e))\n    return n;\n  if (!pr(e)) {\n    let i = ai(e);\n    for (; i && !Mo(i); ) {\n      if (zn(i) && !kl(i))\n        return i;\n      i = ai(i);\n    }\n    return n;\n  }\n  let r = I0(e, t);\n  for (; r && DL(r) && kl(r); )\n    r = I0(r, t);\n  return r && Mo(r) && kl(r) && !nf(r) ? n : r || RL(e) || n;\n}\nconst ZL = async function(e) {\n  const t = this.getOffsetParent || L6, n = this.getDimensions, r = await n(e.floating);\n  return {\n    reference: qL(e.reference, await t(e.floating), e.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: r.width,\n      height: r.height\n    }\n  };\n};\nfunction KL(e) {\n  return Wn(e).direction === \"rtl\";\n}\nconst GL = {\n  convertOffsetParentRelativeRectToViewportRelativeRect: HL,\n  getDocumentElement: Vr,\n  getClippingRect: FL,\n  getOffsetParent: L6,\n  getElementRects: ZL,\n  getClientRects: UL,\n  getDimensions: jL,\n  getScale: uo,\n  isElement: zn,\n  isRTL: KL\n};\nfunction YL(e, t) {\n  let n = null, r;\n  const i = Vr(e);\n  function o() {\n    var s;\n    clearTimeout(r), (s = n) == null || s.disconnect(), n = null;\n  }\n  function a(s, c) {\n    s === void 0 && (s = !1), c === void 0 && (c = 1), o();\n    const {\n      left: l,\n      top: d,\n      width: f,\n      height: g\n    } = e.getBoundingClientRect();\n    if (s || t(), !f || !g)\n      return;\n    const b = ds(d), x = ds(i.clientWidth - (l + f)), m = ds(i.clientHeight - (d + g)), C = ds(l), T = {\n      rootMargin: -b + \"px \" + -x + \"px \" + -m + \"px \" + -C + \"px\",\n      threshold: _i(0, Co(1, c)) || 1\n    };\n    let N = !0;\n    function W(U) {\n      const F = U[0].intersectionRatio;\n      if (F !== c) {\n        if (!N)\n          return a();\n        F ? a(!1, F) : r = setTimeout(() => {\n          a(!1, 1e-7);\n        }, 1e3);\n      }\n      N = !1;\n    }\n    try {\n      n = new IntersectionObserver(W, {\n        ...T,\n        // Handle <iframe>s\n        root: i.ownerDocument\n      });\n    } catch {\n      n = new IntersectionObserver(W, T);\n    }\n    n.observe(e);\n  }\n  return a(!0), o;\n}\nfunction XL(e, t, n, r) {\n  r === void 0 && (r = {});\n  const {\n    ancestorScroll: i = !0,\n    ancestorResize: o = !0,\n    elementResize: a = typeof ResizeObserver == \"function\",\n    layoutShift: s = typeof IntersectionObserver == \"function\",\n    animationFrame: c = !1\n  } = r, l = of(e), d = i || o ? [...l ? Ba(l) : [], ...Ba(t)] : [];\n  d.forEach((S) => {\n    i && S.addEventListener(\"scroll\", n, {\n      passive: !0\n    }), o && S.addEventListener(\"resize\", n);\n  });\n  const f = l && s ? YL(l, n) : null;\n  let g = -1, b = null;\n  a && (b = new ResizeObserver((S) => {\n    let [T] = S;\n    T && T.target === l && b && (b.unobserve(t), cancelAnimationFrame(g), g = requestAnimationFrame(() => {\n      var N;\n      (N = b) == null || N.observe(t);\n    })), n();\n  }), l && !c && b.observe(l), b.observe(t));\n  let x, m = c ? Hi(e) : null;\n  c && C();\n  function C() {\n    const S = Hi(e);\n    m && (S.x !== m.x || S.y !== m.y || S.width !== m.width || S.height !== m.height) && n(), m = S, x = requestAnimationFrame(C);\n  }\n  return n(), () => {\n    var S;\n    d.forEach((T) => {\n      i && T.removeEventListener(\"scroll\", n), o && T.removeEventListener(\"resize\", n);\n    }), f == null || f(), (S = b) == null || S.disconnect(), b = null, c && cancelAnimationFrame(x);\n  };\n}\nconst JL = BL, QL = IL, eA = EL, tA = _L, D0 = (e, t, n) => {\n  const r = /* @__PURE__ */ new Map(), i = {\n    platform: GL,\n    ...n\n  }, o = {\n    ...i.platform,\n    _c: r\n  };\n  return kL(e, t, {\n    ...i,\n    platform: o\n  });\n};\nvar A6 = { exports: {} };\n/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n(function(e) {\n  (function() {\n    var t = {}.hasOwnProperty;\n    function n() {\n      for (var o = \"\", a = 0; a < arguments.length; a++) {\n        var s = arguments[a];\n        s && (o = i(o, r(s)));\n      }\n      return o;\n    }\n    function r(o) {\n      if (typeof o == \"string\" || typeof o == \"number\")\n        return o;\n      if (typeof o != \"object\")\n        return \"\";\n      if (Array.isArray(o))\n        return n.apply(null, o);\n      if (o.toString !== Object.prototype.toString && !o.toString.toString().includes(\"[native code]\"))\n        return o.toString();\n      var a = \"\";\n      for (var s in o)\n        t.call(o, s) && o[s] && (a = i(a, s));\n      return a;\n    }\n    function i(o, a) {\n      return a ? o ? o + \" \" + a : o + a : o;\n    }\n    e.exports ? (n.default = n, e.exports = n) : window.classNames = n;\n  })();\n})(A6);\nvar nA = A6.exports;\nconst H1 = /* @__PURE__ */ Va(nA);\nvar R0 = {};\nconst rA = \"react-tooltip-core-styles\", iA = \"react-tooltip-base-styles\", P0 = { core: !1, base: !1 };\nfunction O0({ css: e, id: t = iA, type: n = \"base\", ref: r }) {\n  var i, o;\n  if (!e || typeof document > \"u\" || P0[n] || n === \"core\" && typeof process < \"u\" && (!((i = process == null ? void 0 : R0) === null || i === void 0) && i.REACT_TOOLTIP_DISABLE_CORE_STYLES) || n !== \"base\" && typeof process < \"u\" && (!((o = process == null ? void 0 : R0) === null || o === void 0) && o.REACT_TOOLTIP_DISABLE_BASE_STYLES)) return;\n  n === \"core\" && (t = rA), r || (r = {});\n  const { insertAt: a } = r;\n  if (document.getElementById(t)) return;\n  const s = document.head || document.getElementsByTagName(\"head\")[0], c = document.createElement(\"style\");\n  c.id = t, c.type = \"text/css\", a === \"top\" && s.firstChild ? s.insertBefore(c, s.firstChild) : s.appendChild(c), c.styleSheet ? c.styleSheet.cssText = e : c.appendChild(document.createTextNode(e)), P0[n] = !0;\n}\nconst H0 = async ({ elementReference: e = null, tooltipReference: t = null, tooltipArrowReference: n = null, place: r = \"top\", offset: i = 10, strategy: o = \"absolute\", middlewares: a = [JL(Number(i)), eA({ fallbackAxisSideDirection: \"start\" }), QL({ padding: 5 })], border: s }) => {\n  if (!e) return { tooltipStyles: {}, tooltipArrowStyles: {}, place: r };\n  if (t === null) return { tooltipStyles: {}, tooltipArrowStyles: {}, place: r };\n  const c = a;\n  return n ? (c.push(tA({ element: n, padding: 5 })), D0(e, t, { placement: r, strategy: o, middleware: c }).then(({ x: l, y: d, placement: f, middlewareData: g }) => {\n    var b, x;\n    const m = { left: `${l}px`, top: `${d}px`, border: s }, { x: C, y: S } = (b = g.arrow) !== null && b !== void 0 ? b : { x: 0, y: 0 }, T = (x = { top: \"bottom\", right: \"left\", bottom: \"top\", left: \"right\" }[f.split(\"-\")[0]]) !== null && x !== void 0 ? x : \"bottom\", N = s && { borderBottom: s, borderRight: s };\n    let W = 0;\n    if (s) {\n      const U = `${s}`.match(/(\\d+)px/);\n      W = U != null && U[1] ? Number(U[1]) : 1;\n    }\n    return { tooltipStyles: m, tooltipArrowStyles: { left: C != null ? `${C}px` : \"\", top: S != null ? `${S}px` : \"\", right: \"\", bottom: \"\", ...N, [T]: `-${4 + W}px` }, place: f };\n  })) : D0(e, t, { placement: \"bottom\", strategy: o, middleware: c }).then(({ x: l, y: d, placement: f }) => ({ tooltipStyles: { left: `${l}px`, top: `${d}px` }, tooltipArrowStyles: {}, place: f }));\n}, U0 = (e, t) => !(\"CSS\" in window && \"supports\" in window.CSS) || window.CSS.supports(e, t), N0 = (e, t, n) => {\n  let r = null;\n  const i = function(...o) {\n    const a = () => {\n      r = null;\n    };\n    !r && (e.apply(this, o), r = setTimeout(a, t));\n  };\n  return i.cancel = () => {\n    r && (clearTimeout(r), r = null);\n  }, i;\n}, V0 = (e) => e !== null && !Array.isArray(e) && typeof e == \"object\", U1 = (e, t) => {\n  if (e === t) return !0;\n  if (Array.isArray(e) && Array.isArray(t)) return e.length === t.length && e.every((i, o) => U1(i, t[o]));\n  if (Array.isArray(e) !== Array.isArray(t)) return !1;\n  if (!V0(e) || !V0(t)) return e === t;\n  const n = Object.keys(e), r = Object.keys(t);\n  return n.length === r.length && n.every((i) => U1(e[i], t[i]));\n}, oA = (e) => {\n  if (!(e instanceof HTMLElement || e instanceof SVGElement)) return !1;\n  const t = getComputedStyle(e);\n  return [\"overflow\", \"overflow-x\", \"overflow-y\"].some((n) => {\n    const r = t.getPropertyValue(n);\n    return r === \"auto\" || r === \"scroll\";\n  });\n}, z0 = (e) => {\n  if (!e) return null;\n  let t = e.parentElement;\n  for (; t; ) {\n    if (oA(t)) return t;\n    t = t.parentElement;\n  }\n  return document.scrollingElement || document.documentElement;\n}, aA = typeof window < \"u\" ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect, kn = (e) => {\n  e.current && (clearTimeout(e.current), e.current = null);\n}, sA = \"DEFAULT_TOOLTIP_ID\", cA = { anchorRefs: /* @__PURE__ */ new Set(), activeAnchor: { current: null }, attach: () => {\n}, detach: () => {\n}, setActiveAnchor: () => {\n} }, lA = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({ getTooltipData: () => cA });\nfunction k6(e = sA) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(lA).getTooltipData(e);\n}\nvar Yi = { tooltip: \"core-styles-module_tooltip__3vRRp\", fixed: \"core-styles-module_fixed__pcSol\", arrow: \"core-styles-module_arrow__cvMwQ\", noArrow: \"core-styles-module_noArrow__xock6\", clickable: \"core-styles-module_clickable__ZuTTB\", show: \"core-styles-module_show__Nt9eE\", closing: \"core-styles-module_closing__sGnxF\" }, _l = { tooltip: \"styles-module_tooltip__mnnfp\", arrow: \"styles-module_arrow__K0L3T\", dark: \"styles-module_dark__xNqje\", light: \"styles-module_light__Z6W-X\", success: \"styles-module_success__A2AKt\", warning: \"styles-module_warning__SCK0X\", error: \"styles-module_error__JvumD\", info: \"styles-module_info__BWdHW\" };\nconst dA = ({ forwardRef: e, id: t, className: n, classNameArrow: r, variant: i = \"dark\", anchorId: o, anchorSelect: a, place: s = \"top\", offset: c = 10, events: l = [\"hover\"], openOnClick: d = !1, positionStrategy: f = \"absolute\", middlewares: g, wrapper: b, delayShow: x = 0, delayHide: m = 0, float: C = !1, hidden: S = !1, noArrow: T = !1, clickable: N = !1, closeOnEsc: W = !1, closeOnScroll: U = !1, closeOnResize: F = !1, openEvents: j, closeEvents: K, globalCloseEvents: J, imperativeModeOnly: X, style: _, position: u, afterShow: v, afterHide: w, disableTooltip: y, content: $, contentWrapperRef: A, isOpen: H, defaultIsOpen: M = !1, setIsOpen: h, activeAnchor: L, setActiveAnchor: Y, border: ne, opacity: ie, arrowColor: se, role: ye = \"tooltip\" }) => {\n  var ge;\n  const _e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), me = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), de = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), Ge = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), Me = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), [te, Lt] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({ tooltipStyles: {}, tooltipArrowStyles: {}, place: s }), [Se, De] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [Et, be] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [pe, At] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), qe = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1), Re = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), { anchorRefs: Qt, setActiveAnchor: yt } = k6(t), at = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1), [cn, st] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]), We = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1), On = d || l.includes(\"click\"), ct = On || (j == null ? void 0 : j.click) || (j == null ? void 0 : j.dblclick) || (j == null ? void 0 : j.mousedown), tt = j ? { ...j } : { mouseover: !0, focus: !0, mouseenter: !1, click: !1, dblclick: !1, mousedown: !1 };\n  !j && On && Object.assign(tt, { mouseenter: !1, focus: !1, mouseover: !1, click: !0 });\n  const Mn = K ? { ...K } : { mouseout: !0, blur: !0, mouseleave: !1, click: !1, dblclick: !1, mouseup: !1 };\n  !K && On && Object.assign(Mn, { mouseleave: !1, blur: !1, mouseout: !1 });\n  const Fe = J ? { ...J } : { escape: W || !1, scroll: U || !1, resize: F || !1, clickOutsideAnchor: ct || !1 };\n  X && (Object.assign(tt, { mouseenter: !1, focus: !1, click: !1, dblclick: !1, mousedown: !1 }), Object.assign(Mn, { mouseleave: !1, blur: !1, click: !1, dblclick: !1, mouseup: !1 }), Object.assign(Fe, { escape: !1, scroll: !1, resize: !1, clickOutsideAnchor: !1 })), aA(() => (We.current = !0, () => {\n    We.current = !1;\n  }), []);\n  const ke = (ae) => {\n    We.current && (ae && be(!0), setTimeout(() => {\n      We.current && (h == null || h(ae), H === void 0 && De(ae));\n    }, 10));\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (H === void 0) return () => null;\n    H && be(!0);\n    const ae = setTimeout(() => {\n      De(H);\n    }, 10);\n    return () => {\n      clearTimeout(ae);\n    };\n  }, [H]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (Se !== qe.current) if (kn(Me), qe.current = Se, Se) v == null || v();\n    else {\n      const ae = ((le) => {\n        const ue = le.match(/^([\\d.]+)(ms|s)$/);\n        if (!ue) return 0;\n        const [, Ct, Be] = ue;\n        return Number(Ct) * (Be === \"ms\" ? 1 : 1e3);\n      })(getComputedStyle(document.body).getPropertyValue(\"--rt-transition-show-delay\"));\n      Me.current = setTimeout(() => {\n        be(!1), At(null), w == null || w();\n      }, ae + 25);\n    }\n  }, [Se]);\n  const $r = (ae) => {\n    Lt((le) => U1(le, ae) ? le : ae);\n  }, mt = (ae = x) => {\n    kn(de), Et ? ke(!0) : de.current = setTimeout(() => {\n      ke(!0);\n    }, ae);\n  }, lt = (ae = m) => {\n    kn(Ge), Ge.current = setTimeout(() => {\n      at.current || ke(!1);\n    }, ae);\n  }, Gn = (ae) => {\n    var le;\n    if (!ae) return;\n    const ue = (le = ae.currentTarget) !== null && le !== void 0 ? le : ae.target;\n    if (!(ue != null && ue.isConnected)) return Y(null), void yt({ current: null });\n    x ? mt() : ke(!0), Y(ue), yt({ current: ue }), kn(Ge);\n  }, dt = () => {\n    N ? lt(m || 100) : m ? lt() : ke(!1), kn(de);\n  }, Xe = ({ x: ae, y: le }) => {\n    var ue;\n    const Ct = { getBoundingClientRect: () => ({ x: ae, y: le, width: 0, height: 0, top: le, left: ae, right: ae, bottom: le }) };\n    H0({ place: (ue = pe == null ? void 0 : pe.place) !== null && ue !== void 0 ? ue : s, offset: c, elementReference: Ct, tooltipReference: _e.current, tooltipArrowReference: me.current, strategy: f, middlewares: g, border: ne }).then((Be) => {\n      $r(Be);\n    });\n  }, Ln = (ae) => {\n    if (!ae) return;\n    const le = ae, ue = { x: le.clientX, y: le.clientY };\n    Xe(ue), Re.current = ue;\n  }, Ze = (ae) => {\n    var le;\n    if (!Se) return;\n    const ue = ae.target;\n    ue.isConnected && (!((le = _e.current) === null || le === void 0) && le.contains(ue) || [document.querySelector(`[id='${o}']`), ...cn].some((Ct) => Ct == null ? void 0 : Ct.contains(ue)) || (ke(!1), kn(de)));\n  }, ft = N0(Gn, 50), $t = N0(dt, 50), He = (ae) => {\n    $t.cancel(), ft(ae);\n  }, ce = () => {\n    ft.cancel(), $t();\n  }, Te = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    var ae, le;\n    const ue = (ae = pe == null ? void 0 : pe.position) !== null && ae !== void 0 ? ae : u;\n    ue ? Xe(ue) : C ? Re.current && Xe(Re.current) : L != null && L.isConnected && H0({ place: (le = pe == null ? void 0 : pe.place) !== null && le !== void 0 ? le : s, offset: c, elementReference: L, tooltipReference: _e.current, tooltipArrowReference: me.current, strategy: f, middlewares: g, border: ne }).then((Ct) => {\n      We.current && $r(Ct);\n    });\n  }, [Se, L, $, _, s, pe == null ? void 0 : pe.place, c, f, u, pe == null ? void 0 : pe.position, C]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var ae, le;\n    const ue = new Set(Qt);\n    cn.forEach((fe) => {\n      y != null && y(fe) || ue.add({ current: fe });\n    });\n    const Ct = document.querySelector(`[id='${o}']`);\n    Ct && !(y != null && y(Ct)) && ue.add({ current: Ct });\n    const Be = () => {\n      ke(!1);\n    }, Ke = z0(L), an = z0(_e.current);\n    Fe.scroll && (window.addEventListener(\"scroll\", Be), Ke == null || Ke.addEventListener(\"scroll\", Be), an == null || an.addEventListener(\"scroll\", Be));\n    let Pe = null;\n    Fe.resize ? window.addEventListener(\"resize\", Be) : L && _e.current && (Pe = XL(L, _e.current, Te, { ancestorResize: !0, elementResize: !0, layoutShift: !0 }));\n    const ze = (fe) => {\n      fe.key === \"Escape\" && ke(!1);\n    };\n    Fe.escape && window.addEventListener(\"keydown\", ze), Fe.clickOutsideAnchor && window.addEventListener(\"click\", Ze);\n    const V = [], Q = (fe) => {\n      Se && (fe == null ? void 0 : fe.target) === L || Gn(fe);\n    }, oe = (fe) => {\n      Se && (fe == null ? void 0 : fe.target) === L && dt();\n    }, xe = [\"mouseover\", \"mouseout\", \"mouseenter\", \"mouseleave\", \"focus\", \"blur\"], Oe = [\"click\", \"dblclick\", \"mousedown\", \"mouseup\"];\n    Object.entries(tt).forEach(([fe, ut]) => {\n      ut && (xe.includes(fe) ? V.push({ event: fe, listener: He }) : Oe.includes(fe) && V.push({ event: fe, listener: Q }));\n    }), Object.entries(Mn).forEach(([fe, ut]) => {\n      ut && (xe.includes(fe) ? V.push({ event: fe, listener: ce }) : Oe.includes(fe) && V.push({ event: fe, listener: oe }));\n    }), C && V.push({ event: \"pointermove\", listener: Ln });\n    const je = () => {\n      at.current = !0;\n    }, Ee = () => {\n      at.current = !1, dt();\n    };\n    return N && !ct && ((ae = _e.current) === null || ae === void 0 || ae.addEventListener(\"mouseenter\", je), (le = _e.current) === null || le === void 0 || le.addEventListener(\"mouseleave\", Ee)), V.forEach(({ event: fe, listener: ut }) => {\n      ue.forEach((ht) => {\n        var nt;\n        (nt = ht.current) === null || nt === void 0 || nt.addEventListener(fe, ut);\n      });\n    }), () => {\n      var fe, ut;\n      Fe.scroll && (window.removeEventListener(\"scroll\", Be), Ke == null || Ke.removeEventListener(\"scroll\", Be), an == null || an.removeEventListener(\"scroll\", Be)), Fe.resize ? window.removeEventListener(\"resize\", Be) : Pe == null || Pe(), Fe.clickOutsideAnchor && window.removeEventListener(\"click\", Ze), Fe.escape && window.removeEventListener(\"keydown\", ze), N && !ct && ((fe = _e.current) === null || fe === void 0 || fe.removeEventListener(\"mouseenter\", je), (ut = _e.current) === null || ut === void 0 || ut.removeEventListener(\"mouseleave\", Ee)), V.forEach(({ event: ht, listener: nt }) => {\n        ue.forEach((Ut) => {\n          var ln;\n          (ln = Ut.current) === null || ln === void 0 || ln.removeEventListener(ht, nt);\n        });\n      });\n    };\n  }, [L, Te, Et, Qt, cn, j, K, J, On, x, m]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var ae, le;\n    let ue = (le = (ae = pe == null ? void 0 : pe.anchorSelect) !== null && ae !== void 0 ? ae : a) !== null && le !== void 0 ? le : \"\";\n    !ue && t && (ue = `[data-tooltip-id='${t.replace(/'/g, \"\\\\'\")}']`);\n    const Ct = new MutationObserver((Be) => {\n      const Ke = [], an = [];\n      Be.forEach((Pe) => {\n        if (Pe.type === \"attributes\" && Pe.attributeName === \"data-tooltip-id\" && (Pe.target.getAttribute(\"data-tooltip-id\") === t ? Ke.push(Pe.target) : Pe.oldValue === t && an.push(Pe.target)), Pe.type === \"childList\") {\n          if (L) {\n            const ze = [...Pe.removedNodes].filter((V) => V.nodeType === 1);\n            if (ue) try {\n              an.push(...ze.filter((V) => V.matches(ue))), an.push(...ze.flatMap((V) => [...V.querySelectorAll(ue)]));\n            } catch {\n            }\n            ze.some((V) => {\n              var Q;\n              return !!(!((Q = V == null ? void 0 : V.contains) === null || Q === void 0) && Q.call(V, L)) && (be(!1), ke(!1), Y(null), kn(de), kn(Ge), !0);\n            });\n          }\n          if (ue) try {\n            const ze = [...Pe.addedNodes].filter((V) => V.nodeType === 1);\n            Ke.push(...ze.filter((V) => V.matches(ue))), Ke.push(...ze.flatMap((V) => [...V.querySelectorAll(ue)]));\n          } catch {\n          }\n        }\n      }), (Ke.length || an.length) && st((Pe) => [...Pe.filter((ze) => !an.includes(ze)), ...Ke]);\n    });\n    return Ct.observe(document.body, { childList: !0, subtree: !0, attributes: !0, attributeFilter: [\"data-tooltip-id\"], attributeOldValue: !0 }), () => {\n      Ct.disconnect();\n    };\n  }, [t, a, pe == null ? void 0 : pe.anchorSelect, L]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    Te();\n  }, [Te]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!(A != null && A.current)) return () => null;\n    const ae = new ResizeObserver(() => {\n      setTimeout(() => Te());\n    });\n    return ae.observe(A.current), () => {\n      ae.disconnect();\n    };\n  }, [$, A == null ? void 0 : A.current]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var ae;\n    const le = document.querySelector(`[id='${o}']`), ue = [...cn, le];\n    L && ue.includes(L) || Y((ae = cn[0]) !== null && ae !== void 0 ? ae : le);\n  }, [o, cn, L]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (M && ke(!0), () => {\n    kn(de), kn(Ge);\n  }), []), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var ae;\n    let le = (ae = pe == null ? void 0 : pe.anchorSelect) !== null && ae !== void 0 ? ae : a;\n    if (!le && t && (le = `[data-tooltip-id='${t.replace(/'/g, \"\\\\'\")}']`), le) try {\n      const ue = Array.from(document.querySelectorAll(le));\n      st(ue);\n    } catch {\n      st([]);\n    }\n  }, [t, a, pe == null ? void 0 : pe.anchorSelect]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    de.current && (kn(de), mt(x));\n  }, [x]);\n  const Ue = (ge = pe == null ? void 0 : pe.content) !== null && ge !== void 0 ? ge : $, Je = Se && Object.keys(te.tooltipStyles).length > 0;\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(e, () => ({ open: (ae) => {\n    if (ae != null && ae.anchorSelect) try {\n      document.querySelector(ae.anchorSelect);\n    } catch {\n      return void console.warn(`[react-tooltip] \"${ae.anchorSelect}\" is not a valid CSS selector`);\n    }\n    At(ae ?? null), ae != null && ae.delay ? mt(ae.delay) : ke(!0);\n  }, close: (ae) => {\n    ae != null && ae.delay ? lt(ae.delay) : ke(!1);\n  }, activeAnchor: L, place: te.place, isOpen: !!(Et && !S && Ue && Je) })), Et && !S && Ue ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(b, { id: t, role: ye, className: H1(\"react-tooltip\", Yi.tooltip, _l.tooltip, _l[i], n, `react-tooltip__place-${te.place}`, Yi[Je ? \"show\" : \"closing\"], Je ? \"react-tooltip__show\" : \"react-tooltip__closing\", f === \"fixed\" && Yi.fixed, N && Yi.clickable), onTransitionEnd: (ae) => {\n    kn(Me), Se || ae.propertyName !== \"opacity\" || (be(!1), At(null), w == null || w());\n  }, style: { ..._, ...te.tooltipStyles, opacity: ie !== void 0 && Je ? ie : void 0 }, ref: _e }, Ue, react__WEBPACK_IMPORTED_MODULE_0__.createElement(b, { className: H1(\"react-tooltip-arrow\", Yi.arrow, _l.arrow, r, T && Yi.noArrow), style: { ...te.tooltipArrowStyles, background: se ? `linear-gradient(to right bottom, transparent 50%, ${se} 50%)` : void 0 }, ref: me })) : null;\n}, fA = ({ content: e }) => react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", { dangerouslySetInnerHTML: { __html: e } }), uA = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({ id: e, anchorId: t, anchorSelect: n, content: r, html: i, render: o, className: a, classNameArrow: s, variant: c = \"dark\", place: l = \"top\", offset: d = 10, wrapper: f = \"div\", children: g = null, events: b = [\"hover\"], openOnClick: x = !1, positionStrategy: m = \"absolute\", middlewares: C, delayShow: S = 0, delayHide: T = 0, float: N = !1, hidden: W = !1, noArrow: U = !1, clickable: F = !1, closeOnEsc: j = !1, closeOnScroll: K = !1, closeOnResize: J = !1, openEvents: X, closeEvents: _, globalCloseEvents: u, imperativeModeOnly: v = !1, style: w, position: y, isOpen: $, defaultIsOpen: A = !1, disableStyleInjection: H = !1, border: M, opacity: h, arrowColor: L, setIsOpen: Y, afterShow: ne, afterHide: ie, disableTooltip: se, role: ye = \"tooltip\" }, ge) => {\n  const [_e, me] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(r), [de, Ge] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(i), [Me, te] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(l), [Lt, Se] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(c), [De, Et] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(d), [be, pe] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(S), [At, qe] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(T), [Re, Qt] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(N), [yt, at] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(W), [cn, st] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(f), [We, On] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(b), [ct, tt] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(m), [Mn, Fe] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), [ke, $r] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), mt = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(H), { anchorRefs: lt, activeAnchor: Gn } = k6(e), dt = ($t) => $t == null ? void 0 : $t.getAttributeNames().reduce((He, ce) => {\n    var Te;\n    return ce.startsWith(\"data-tooltip-\") && (He[ce.replace(/^data-tooltip-/, \"\")] = (Te = $t == null ? void 0 : $t.getAttribute(ce)) !== null && Te !== void 0 ? Te : null), He;\n  }, {}), Xe = ($t) => {\n    const He = { place: (ce) => {\n      var Te;\n      te((Te = ce) !== null && Te !== void 0 ? Te : l);\n    }, content: (ce) => {\n      me(ce ?? r);\n    }, html: (ce) => {\n      Ge(ce ?? i);\n    }, variant: (ce) => {\n      var Te;\n      Se((Te = ce) !== null && Te !== void 0 ? Te : c);\n    }, offset: (ce) => {\n      Et(ce === null ? d : Number(ce));\n    }, wrapper: (ce) => {\n      var Te;\n      st((Te = ce) !== null && Te !== void 0 ? Te : f);\n    }, events: (ce) => {\n      const Te = ce == null ? void 0 : ce.split(\" \");\n      On(Te ?? b);\n    }, \"position-strategy\": (ce) => {\n      var Te;\n      tt((Te = ce) !== null && Te !== void 0 ? Te : m);\n    }, \"delay-show\": (ce) => {\n      pe(ce === null ? S : Number(ce));\n    }, \"delay-hide\": (ce) => {\n      qe(ce === null ? T : Number(ce));\n    }, float: (ce) => {\n      Qt(ce === null ? N : ce === \"true\");\n    }, hidden: (ce) => {\n      at(ce === null ? W : ce === \"true\");\n    }, \"class-name\": (ce) => {\n      Fe(ce);\n    } };\n    Object.values(He).forEach((ce) => ce(null)), Object.entries($t).forEach(([ce, Te]) => {\n      var Ue;\n      (Ue = He[ce]) === null || Ue === void 0 || Ue.call(He, Te);\n    });\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    me(r);\n  }, [r]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    Ge(i);\n  }, [i]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    te(l);\n  }, [l]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    Se(c);\n  }, [c]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    Et(d);\n  }, [d]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    pe(S);\n  }, [S]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    qe(T);\n  }, [T]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    Qt(N);\n  }, [N]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    at(W);\n  }, [W]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    tt(m);\n  }, [m]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    mt.current !== H && console.warn(\"[react-tooltip] Do not change `disableStyleInjection` dynamically.\");\n  }, [H]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    typeof window < \"u\" && window.dispatchEvent(new CustomEvent(\"react-tooltip-inject-styles\", { detail: { disableCore: H === \"core\", disableBase: H } }));\n  }, []), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    var $t;\n    const He = new Set(lt);\n    let ce = n;\n    if (!ce && e && (ce = `[data-tooltip-id='${e.replace(/'/g, \"\\\\'\")}']`), ce) try {\n      document.querySelectorAll(ce).forEach((le) => {\n        He.add({ current: le });\n      });\n    } catch {\n      console.warn(`[react-tooltip] \"${ce}\" is not a valid CSS selector`);\n    }\n    const Te = document.querySelector(`[id='${t}']`);\n    if (Te && He.add({ current: Te }), !He.size) return () => null;\n    const Ue = ($t = ke ?? Te) !== null && $t !== void 0 ? $t : Gn.current, Je = new MutationObserver((le) => {\n      le.forEach((ue) => {\n        var Ct;\n        if (!Ue || ue.type !== \"attributes\" || !(!((Ct = ue.attributeName) === null || Ct === void 0) && Ct.startsWith(\"data-tooltip-\"))) return;\n        const Be = dt(Ue);\n        Xe(Be);\n      });\n    }), ae = { attributes: !0, childList: !1, subtree: !1 };\n    if (Ue) {\n      const le = dt(Ue);\n      Xe(le), Je.observe(Ue, ae);\n    }\n    return () => {\n      Je.disconnect();\n    };\n  }, [lt, Gn, ke, t, n]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    w != null && w.border && console.warn(\"[react-tooltip] Do not set `style.border`. Use `border` prop instead.\"), M && !U0(\"border\", `${M}`) && console.warn(`[react-tooltip] \"${M}\" is not a valid \\`border\\`.`), w != null && w.opacity && console.warn(\"[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.\"), h && !U0(\"opacity\", `${h}`) && console.warn(`[react-tooltip] \"${h}\" is not a valid \\`opacity\\`.`);\n  }, []);\n  let Ln = g;\n  const Ze = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  if (o) {\n    const $t = o({ content: (ke == null ? void 0 : ke.getAttribute(\"data-tooltip-content\")) || _e || null, activeAnchor: ke });\n    Ln = $t ? react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", { ref: Ze, className: \"react-tooltip-content-wrapper\" }, $t) : null;\n  } else _e && (Ln = _e);\n  de && (Ln = react__WEBPACK_IMPORTED_MODULE_0__.createElement(fA, { content: de }));\n  const ft = { forwardRef: ge, id: e, anchorId: t, anchorSelect: n, className: H1(a, Mn), classNameArrow: s, content: Ln, contentWrapperRef: Ze, place: Me, variant: Lt, offset: De, wrapper: cn, events: We, openOnClick: x, positionStrategy: ct, middlewares: C, delayShow: be, delayHide: At, float: Re, hidden: yt, noArrow: U, clickable: F, closeOnEsc: j, closeOnScroll: K, closeOnResize: J, openEvents: X, closeEvents: _, globalCloseEvents: u, imperativeModeOnly: v, style: w, position: y, isOpen: $, defaultIsOpen: A, border: M, opacity: h, arrowColor: L, setIsOpen: Y, afterShow: ne, afterHide: ie, disableTooltip: se, activeAnchor: ke, setActiveAnchor: ($t) => $r($t), role: ye };\n  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(dA, { ...ft });\n});\ntypeof window < \"u\" && window.addEventListener(\"react-tooltip-inject-styles\", (e) => {\n  e.detail.disableCore || O0({ css: \":root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9;--rt-transition-show-delay:0.15s;--rt-transition-closing-delay:0.15s}.core-styles-module_tooltip__3vRRp{position:absolute;top:0;left:0;pointer-events:none;opacity:0;will-change:opacity}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{opacity:var(--rt-opacity);transition:opacity var(--rt-transition-show-delay)ease-out}.core-styles-module_closing__sGnxF{opacity:0;transition:opacity var(--rt-transition-closing-delay)ease-in}\", type: \"core\" }), e.detail.disableBase || O0({ css: `\n.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px}[class*='react-tooltip__place-top']>.styles-module_arrow__K0L3T{transform:rotate(45deg)}[class*='react-tooltip__place-right']>.styles-module_arrow__K0L3T{transform:rotate(135deg)}[class*='react-tooltip__place-bottom']>.styles-module_arrow__K0L3T{transform:rotate(225deg)}[class*='react-tooltip__place-left']>.styles-module_arrow__K0L3T{transform:rotate(315deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}`, type: \"base\" });\n});\nfunction _6(e) {\n  const t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), [n, r] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => (t.current || (t.current = document.createElement(\"div\"), document.body.appendChild(t.current)), r(!0), () => {\n    t.current && (document.body.removeChild(t.current), t.current = null);\n  }), []);\n  const i = Cn();\n  return n && t.current ? react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(\n    /* @__PURE__ */ p(\n      uA,\n      Ie(ve({}, e), {\n        id: e.id || \"\",\n        content: e.content || \"\",\n        noArrow: !0,\n        border: \"0.05rem solid rgba(0, 0, 0, 0.1)\",\n        className: hA({ theme: i }),\n        variant: \"light\"\n      })\n    ),\n    t.current\n  ) : null;\n}\nvar hA = ({ theme: e }) => xL`\n  font-size: \"10px\";\n  color: ${e.c8Neutral} !important;\n  border-radius: 8px !important;\n  padding: 16px !important;\n  z-index: ${Pn.tooltip};\n  ${s3({ theme: e, important: !0 })};\n\n  max-width: 260px;\n  box-shadow:\n    0px 1px 4px 0px rgba(0, 0, 0, 0.1),\n    0px 4px 8px 0px rgba(0, 0, 0, 0.08) !important;\n`;\nfunction to(e) {\n  const t = m3(e);\n  let n = e.children || null;\n  return e.content && (n = $o(e.content)), /* @__PURE__ */ p(v3, Ie(ve({}, t), { children: n }));\n}\nvar Ne = {\n  \"4xs\": 2,\n  \"3xs\": 4,\n  \"2xs\": 6,\n  xs: 8,\n  sm: 12,\n  md: 16,\n  lg: 24,\n  xl: 32,\n  \"2xl\": 40,\n  \"3xl\": 48,\n  \"4xl\": 56,\n  \"5xl\": 64,\n  \"6xl\": 72,\n  \"7xl\": 80,\n  \"8xl\": 96,\n  \"9xl\": 112,\n  \"10xl\": 128,\n  \"11xl\": 160\n}, Kt = {\n  \"4xs\": Ne[\"4xs\"],\n  \"3xs\": Ne[\"3xs\"],\n  \"2xs\": Ne[\"2xs\"],\n  xs: Ne.xs,\n  sm: Ne.sm,\n  md: Ne.md,\n  lg: Ne.lg,\n  xl: Ne.xl,\n  \"2xl\": Ne[\"2xl\"],\n  \"3xl\": Ne[\"3xl\"],\n  \"4xl\": Ne[\"4xl\"],\n  \"5xl\": Ne[\"5xl\"],\n  \"6xl\": Ne[\"6xl\"],\n  \"7xl\": Ne[\"7xl\"],\n  \"8xl\": Ne[\"8xl\"],\n  \"9xl\": Ne[\"9xl\"],\n  \"10xl\": Ne[\"10xl\"],\n  \"11xl\": Ne[\"11xl\"],\n  px: {\n    \"4xs\": `${Ne[\"4xs\"]}px`,\n    \"3xs\": `${Ne[\"3xs\"]}px`,\n    \"2xs\": `${Ne[\"2xs\"]}px`,\n    xs: `${Ne.xs}px`,\n    sm: `${Ne.sm}px`,\n    md: `${Ne.md}px`,\n    lg: `${Ne.lg}px`,\n    xl: `${Ne.xl}px`,\n    \"2xl\": `${Ne[\"2xl\"]}px`,\n    \"3xl\": `${Ne[\"3xl\"]}px`,\n    \"4xl\": `${Ne[\"4xl\"]}px`,\n    \"5xl\": `${Ne[\"5xl\"]}px`,\n    \"6xl\": `${Ne[\"6xl\"]}px`,\n    \"7xl\": `${Ne[\"7xl\"]}px`,\n    \"8xl\": `${Ne[\"8xl\"]}px`,\n    \"9xl\": `${Ne[\"9xl\"]}px`,\n    \"10xl\": `${Ne[\"10xl\"]}px`,\n    \"11xl\": `${Ne[\"11xl\"]}px`\n  }\n}, N1 = 44, El = 20, Tl = 2;\nG(wr)`\n  color: ${Z.white};\n  font-weight: 500;\n  border-radius: 44px;\n  width: ${N1}px;\n  height: 24px;\n  opacity: ${({ disabled: e }) => e ? 0.3 : 1};\n  background-color: ${({ bg: e, theme: t, isOn: n }) => e || (n ? t.success : Ri(t.c1Neutral, t.c4Neutral)({ theme: t }))};\n  position: relative;\n  &:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    border-radius: 50%;\n    transition: right 0.1s;\n    box-shadow:\n      0 3px 8px 0 rgba(0, 0, 0, 0.15),\n      0 3px 1px 0 rgba(0, 0, 0, 0.06);\n    background-color: ${Z.white};\n    width: ${El}px;\n    height: ${El}px;\n    top: ${Tl}px;\n    right: ${({ isOn: e }) => e ? `${Tl}px` : `${N1 - El - Tl}px`};\n  }\n`;\nvar E6 = 12, W0 = G.span`\n  display: flex;\n  margin-bottom: ${({ mb: e }) => e}px;\n  margin-top: ${({ mt: e }) => e}px;\n  margin-left: ${({ ml: e }) => e}px;\n  align-items: center;\n  gap: ${E6}px;\n`;\nG.label`\n  width: calc(100% - ${N1 + E6}px);\n  cursor: pointer;\n`;\nvar pA = 'data:image/svg+xml,<svg width=\"12\" height=\"9\" viewBox=\"0 0 12 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">%0A<path d=\"M10.5004 1.84998L5.79662 6.63103C4.99697 7.44383 4.59714 7.85023 4.1003 7.85023C3.60346 7.85023 3.20363 7.44383 2.40398 6.63103L1.5 5.7122\" stroke=\"white\" stroke-width=\"1.90917\" stroke-linecap=\"round\"/>%0A</svg>%0A';\nG.input`\n  margin: 0;\n  cursor: pointer;\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  /* min-width needed when in flex container: */\n  min-width: 18px;\n  border-radius: 2.25px;\n  ${({ checked: e, theme: t }) => !e && `border: 1px solid ${t.mcNeutral};`}\n  background-color: ${({ theme: e, checked: t }) => t ? e.info : e.bg};\n  background-image: ${({ checked: e }) => e ? `url(\"${pA}\");` : \"none;\"}\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 9px auto;\n  ${({ disabled: e }) => e && \"opacity: 0.2;\"}\n`;\nvar F0 = G.span`\n  display: flex;\n  ${({ mt: e }) => e === 0 ? \"\" : `margin-top: ${e}px;`}\n  align-items: ${({ alignItems: e }) => e};\n\n  & + & {\n    margin-top: 12px;\n  }\n`;\nG.label`\n  margin-left: 12px;\n  cursor: pointer;\n`;\nvar T6 = 10;\nfunction gA(e) {\n  return Ie(ve({}, e), {\n    width: e.width || \"full\",\n    type: e.type || \"text\",\n    disabled: !!e.disabled,\n    typography: ve(ve({}, As), e.typography)\n  });\n}\nfunction B6(e) {\n  var t, n;\n  const r = gA(e), [i, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), a = r.inputRef || react__WEBPACK_IMPORTED_MODULE_0__.createRef(), s = r.inputRefCb || a;\n  r.inputRefCb && !r.inputRef && console.warn(\"TextInput: inputRef should be provided with inputRefCb.\");\n  const c = (U) => {\n    U.key === \"Enter\" && r.onEnter && r.onEnter();\n  }, l = !!r.error, d = !!(r.icon && r.icon.side !== \"left\"), f = ((t = r.icon) == null ? void 0 : t.width) || 12, g = ((n = r.icon) == null ? void 0 : n.offset) === \"large\" ? 26 : 18, b = g - f / 2, x = g === 18 ? 4 : 14, m = r.width === \"short\" ? \"250px\" : \"100%\";\n  let C;\n  typeof r.paddingX == \"number\" ? d ? C = r.paddingX : C = r.paddingX + f + x : r.icon && !d ? C = b + f + x : r.select && (C = T6 + r.select.width + 5);\n  let S;\n  typeof r.paddingX == \"number\" ? d ? S = x + f + r.paddingX : S = r.paddingX : d && (S = 28);\n  let T = /* @__PURE__ */ q(MA, { children: [\n    /* @__PURE__ */ p(\n      bA,\n      {\n        disabled: r.disabled,\n        maxLength: r.maxLength,\n        inputMode: r.inputMode,\n        pattern: r.pattern,\n        onBlur: () => {\n          o(!1), r.onBlur && r.onBlur();\n        },\n        onChange: (U) => {\n          U.target.setCustomValidity(\"\"), r.onChange(U.target.value, U);\n        },\n        onFocus: () => {\n          o(!0), r.onFocus && r.onFocus();\n        },\n        onKeyDown: (U) => {\n          r.onKeyDown && r.onKeyDown(U.key, U), c(U);\n        },\n        id: r.id,\n        onPaste: r.onPaste,\n        placeholder: r.placeholder,\n        ref: s,\n        name: r.name,\n        type: r.type,\n        value: r.value,\n        paddingLeftPx: C,\n        paddingRightPx: S,\n        paddingTopPx: r.paddingY,\n        paddingBottomPx: r.paddingY,\n        activeOutline: r.activeOutline,\n        activeOutlineColor: r.activeOutlineColor,\n        hasError: l,\n        \"data-test-id\": r.testId,\n        typography: r.typography,\n        autoComplete: r.autoComplete === \"off\" ? \"new-password\" : r.autoComplete,\n        onBeforeInput: (U) => {\n          if (r.onBeforeInput) {\n            const F = U;\n            r.onBeforeInput(F);\n          }\n        },\n        borderRadius: r.borderRadius\n      }\n    ),\n    r.rightButtonText && /* @__PURE__ */ p(xA, { iconOffset: b, children: /* @__PURE__ */ p(wA, { onClick: r.onRightButtonClick, children: r.rightButtonText }) })\n  ] });\n  r.icon && (T = /* @__PURE__ */ q(vA, { hasError: l, withFocus: i, children: [\n    d ? /* @__PURE__ */ p(xt, { children: T }) : null,\n    /* @__PURE__ */ p(\n      yA,\n      {\n        onClick: r.onClickIcon ? r.onClickIcon : () => {\n        },\n        isIconRight: d,\n        iconOffset: typeof r.paddingX == \"number\" ? r.paddingX : b,\n        focused: i,\n        hasValue: !!r.value,\n        colorProp: r.typography.color,\n        children: /* @__PURE__ */ p(vt, { name: r.icon.name, width: f })\n      }\n    ),\n    d ? null : /* @__PURE__ */ p(xt, { children: T })\n  ] }));\n  const N = r.hintTooltip ? `${r.id || \"input\"}-hint-tooltip` : void 0, { select: W } = r;\n  return /* @__PURE__ */ q(SA, { width: m, children: [\n    r.label ? /* @__PURE__ */ p($A, { hasError: l, children: r.label }) : null,\n    W && /* @__PURE__ */ p(\n      mA,\n      {\n        value: W.value,\n        widthProp: W.width,\n        typography: r.typography,\n        onChange: (U) => {\n          var F;\n          W.onChange(U.target.value), (F = a.current) == null || F.focus();\n        },\n        children: W.options.map((U) => /* @__PURE__ */ p(\"option\", { value: U.value, children: U.label }, U.value))\n      }\n    ),\n    T,\n    /* @__PURE__ */ p(\n      fL,\n      {\n        text: r.error || r.hint,\n        hasError: l,\n        tooltipId: N\n      }\n    ),\n    r.hintTooltip ? /* @__PURE__ */ p(_6, { id: N, content: r.hintTooltip, place: \"right\" }) : null\n  ] });\n}\nvar mA = G.select`\n  ${({ typography: e, theme: t }) => yn(t, e.type, e.size, e.color)}\n  position: absolute;\n  z-index: ${Pn.textInput + 1};\n  border: none;\n  background-color: transparent;\n  top: 0;\n  left: ${T6}px;\n  height: 48px;\n  width: ${({ widthProp: e }) => `${e}px`};\n`, vA = G.div`\n  ${Ro(8)}\n  position: relative;\n\n  & ${S3.toString()} {\n    z-index: ${Pn.textInput + 1};\n  }\n`, yA = G.div`\n  position: absolute;\n  z-index: ${Pn.textInput + 1};\n  ${({ isIconRight: e, iconOffset: t }) => e ? `right: ${t}px` : `left: ${t}px`};\n  top: 0;\n  bottom: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  cursor: ${({ onClick: e }) => e ? \"pointer\" : \"auto\"};\n  color: ${({ focused: e, hasValue: t, theme: n, colorProp: r }) => e || t ? Us(n, r) : D1({ theme: n })};\n`, bA = G.input`\n  ${dL};\n\n  // disable autofill styles in chrome https://stackoverflow.com/a/68240841/9808766\n  &:-webkit-autofill,\n  &:-webkit-autofill:focus,\n  &:-internal-autofill-selected,\n  &:-internal-autofill-selected:focus {\n    background-color: ${({ theme: e }) => e.bg} !important;\n    color: ${({ theme: e }) => e.text} !important;\n    transition:\n      background-color 600000s 0s,\n      color 600000s 0s !important;\n  }\n`, xA = G.div`\n  position: absolute;\n  top: 0;\n  right: ${({ iconOffset: e }) => e}px;\n  z-index: ${Pn.textInput + 1};\n  bottom: 0;\n  display: flex;\n  align-items: center;\n`, wA = G(wr)`\n  border-radius: 4px;\n  border: none;\n  background-color: ${({ theme: e }) => e.vlcNeutral};\n  color: ${({ theme: e }) => e.mcNeutral};\n  font-size: 14px;\n  font-weight: 600;\n  padding: 8px 10px;\n`, $A = G.label`\n  ${Ro(8)}\n  font-size: 10px;\n  position: absolute;\n  z-index: ${Pn.textInput + 1};\n  background-color: ${({ theme: e }) => e.bg};\n  color: ${({ theme: e, hasError: t }) => t ? e.danger : e.mcNeutral};\n  font-weight: 600;\n  padding: 4px 6px;\n  left: 12px;\n  top: -10px;\n`, CA = G.div`\n  margin-top: ${I1}px;\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n  & > * {\n    width: 50%;\n  }\n`, SA = G.div`\n  width: ${({ width: e }) => e};\n  position: relative;\n\n  /* eg forms, should be left consistent: */\n  & + & {\n    margin-top: ${I1}px;\n  }\n\n  ${CA.toString()} & + & {\n    margin-top: 0;\n  }\n\n  ${F0.toString()} + &,\n  ${W0.toString()} + &,\n  & + ${F0.toString()},\n  & + ${W0.toString()} {\n    margin-top: ${I1}px;\n  }\n`, MA = G.div`\n  position: relative;\n`, LA = {\n  [k.ExtraSmall]: 10,\n  [k.Small]: 10,\n  [k.Schmedium]: 10,\n  [k.Medium]: 14,\n  [k.Mlarge]: 19,\n  [k.Large]: 19\n}, AA = {\n  [k.ExtraSmall]: 16,\n  [k.Small]: 24,\n  [k.Schmedium]: 24,\n  [k.Medium]: 24,\n  [k.Mlarge]: 24,\n  [k.Large]: 24\n};\nfunction I6(e, t, n) {\n  return t === \"ghost\" ? 0 : n ? LA[e] : AA[e];\n}\nfunction kA({ paddingY: e, kind: t, size: n, iconSide: r, isRound: i }) {\n  const o = I6(n, t, i), a = 0;\n  return t === \"ghost\" ? 0 : `${e}px ${o + (r === \"right\" ? a : 0)}px ${e}px ${o + (r === \"left\" ? a : 0)}px`;\n}\nfunction Xi(e, t, n) {\n  var r;\n  let o = (r = e.buttons.kinds[t]) == null ? void 0 : r[n];\n  !o && i3(t) && (o = t);\n  const a = e.buttons[n];\n  return vb(\n    e,\n    o,\n    a\n  );\n}\nfunction sa(e, t, n, r) {\n  var i;\n  return (\n    /** props may be unset for a given kind but theme defaults always exist,\n     * so this will always resolve a value: */\n    e || ((i = r.buttons.kinds[t]) == null ? void 0 : i[n]) || r.buttons[n]\n  );\n}\nfunction _A(e, t) {\n  const n = e, {\n    kind: r = \"secondary\",\n    size: i,\n    paddingY: o = \"regular\",\n    borderRadius: a,\n    typography: s\n  } = n, c = pn(n, [\n    \"kind\",\n    \"size\",\n    \"paddingY\",\n    \"borderRadius\",\n    \"typography\"\n  ]), l = sa(i, r, \"defaultSize\", t), f = sa(null, r, \"defaultPaddingsY\", t)[l], g = Xi(\n    t,\n    r,\n    \"defaultBackgroundColor\"\n  ), b = Xi(\n    t,\n    r,\n    \"defaultBorderColor\"\n  ), x = Xi(\n    t,\n    r,\n    \"defaultHoverBackgroundColor\"\n  ), m = Xi(\n    t,\n    r,\n    \"defaultHoverBorderColor\"\n  ), C = Xi(\n    t,\n    r,\n    \"defaultActiveBackgroundColor\"\n  ), S = Xi(\n    t,\n    r,\n    \"defaultActiveBorderColor\"\n  ), T = {\n    type: (s == null ? void 0 : s.type) || sa(null, r, \"defaultTypographyType\", t),\n    color: (s == null ? void 0 : s.color) || sa(null, r, \"defaultColor\", t),\n    size: l\n  };\n  return Ie(ve({}, c), {\n    kind: r,\n    size: l,\n    typography: T,\n    paddingY: typeof f == \"number\" ? f : f[o],\n    borderRadius: sa(a, r, \"defaultBorderRadius\", t),\n    backgroundColor: g,\n    borderColor: b,\n    hoverBackgroundColor: x,\n    hoverBorderColor: m,\n    activeBackgroundColor: C,\n    activeBorderColor: S\n  });\n}\nfunction Dt(e) {\n  const t = Cn(), {\n    kind: n,\n    typography: r,\n    size: i,\n    paddingY: o,\n    text: a,\n    to: s,\n    id: c,\n    hash: l,\n    externalLink: d,\n    filename: f,\n    toParams: g,\n    onClick: b,\n    icon: x,\n    backgroundColor: m,\n    borderColor: C,\n    hoverBackgroundColor: S,\n    hoverBorderColor: T,\n    activeBackgroundColor: N,\n    activeBorderColor: W,\n    iconSide: U = \"left\",\n    loading: F = !1,\n    loadingKind: j = \"primary\",\n    fullWidth: K = !1,\n    disabled: J = !1,\n    mt: X = 0,\n    ml: _ = 0,\n    type: u = \"button\",\n    newTab: v = !1,\n    zIndex: w = void 0,\n    tooltipText: y,\n    borderRadius: $\n  } = _A(e, t), A = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(Ry()), H = i === \"ExtraSmall\" ? 12 : 16;\n  let M = null;\n  F ? M = /* @__PURE__ */ p(\n    j0,\n    {\n      iconSide: U,\n      text: a,\n      typography: r,\n      kind: n,\n      children: /* @__PURE__ */ p(hL, { size: H, center: !1, kind: j })\n    }\n  ) : x && (M = /* @__PURE__ */ p(\n    j0,\n    {\n      iconSide: U,\n      text: a,\n      typography: r,\n      kind: n,\n      children: /* @__PURE__ */ p(\n        vt,\n        Ie(ve({}, x), {\n          width: x.width || H,\n          color: r.color\n        })\n      )\n    }\n  ));\n  const h = /* @__PURE__ */ q(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ q(\n      \"div\",\n      Ie(ve({}, y ? { \"data-tooltip-id\": A.current } : {}), {\n        css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          gap: \"8px\"\n        },\n        children: [\n          U === \"left\" && M,\n          a && /* @__PURE__ */ p(\n            \"div\",\n            {\n              css: {\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\"\n              },\n              children: qa(r.type, {\n                children: a,\n                color: r.color,\n                size: i\n              })\n            }\n          ),\n          U === \"right\" && M\n        ]\n      })\n    ),\n    y ? /* @__PURE__ */ p(_6, { id: A.current, content: y }) : null\n  ] }), L = !!(a && a.length === 1 && !x), Y = {\n    id: c,\n    kind: n,\n    type: u,\n    typography: r,\n    onClick: b,\n    fullWidth: K,\n    iconSide: U,\n    paddingY: o,\n    backgroundColor: m,\n    borderColor: C,\n    hoverBackgroundColor: S,\n    hoverBorderColor: T,\n    activeBackgroundColor: N,\n    activeBorderColor: W,\n    isRound: L,\n    isLoading: F,\n    disabled: J || F,\n    css: {\n      marginTop: X ? typeof X == \"number\" ? `${X}px` : \"auto\" : void 0,\n      marginLeft: _ ? typeof _ == \"number\" ? `${_}px` : \"auto\" : void 0\n    },\n    newTab: v,\n    borderRadius: $,\n    zIndex: w\n  };\n  return s ? /* @__PURE__ */ p(R6, Ie(ve({}, Y), { to: s, params: g, hash: l, children: h })) : d ? /* @__PURE__ */ p(\n    P6,\n    Ie(ve({}, Y), {\n      href: d,\n      download: f,\n      target: \"_blank\",\n      children: h\n    })\n  ) : /* @__PURE__ */ p(D6, Ie(ve({}, Y), { children: h }));\n}\nvar af = ({\n  paddingY: e,\n  kind: t,\n  theme: n,\n  disabled: r,\n  isLoading: i,\n  typography: o,\n  fullWidth: a,\n  zIndex: s,\n  iconSide: c,\n  borderColor: l,\n  isRound: d,\n  borderRadius: f,\n  backgroundColor: g,\n  hoverBackgroundColor: b,\n  hoverBorderColor: x,\n  activeBackgroundColor: m,\n  activeBorderColor: C\n}) => {\n  const S = l || g;\n  return gt`\n    display: inline-flex;\n    opacity: ${r && !i ? 0.2 : 1};\n    transition: opacity 0.2s;\n    position: relative;\n\n    ${s && `z-index: ${s};`}\n\n    ${yn(\n    n,\n    o.type,\n    o.size,\n    o.color\n  )}\n\n    &:focus-visible {\n      outline: ${a3({ theme: n })};\n      /* Slightly different offset for buttons so the outline is visible: */\n      outline-offset: 0px;\n    }\n\n    width: ${a ? \"100%\" : \"fit-content\"};\n\n    & > * {\n      width: 100%;\n      text-align: center;\n      white-space: nowrap;\n      background-color: ${g};\n      box-sizing: content-box;\n      border: 1px solid;\n      border-color: ${S};\n      border-radius: ${d ? \"100%\" : `${f}px`};\n      padding: ${kA({\n    paddingY: e,\n    kind: t,\n    size: o.size,\n    iconSide: c,\n    isRound: d\n  })};\n      transition:\n        background-color 0.2s ease-out,\n        border-color 0.2s ease-out;\n\n      &:hover {\n        background-color: ${b};\n        border-color: ${x};\n      }\n\n      &:active {\n        background-color: ${m};\n        border-color: ${C};\n      }\n    }\n  `;\n}, j0 = G.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${({ iconSide: e, kind: t, typography: n }) => `${e}: ${I6(n.size, t, !1)}px;`}\n`, D6 = G(wr)`\n  ${(e) => af(e)}\n`, R6 = G(EA)`\n  ${(e) => af(e)}\n`, P6 = G.a`\n  ${(e) => af(e)}\n`, O6 = (e = \"\", t = \"\") => `${e}*:is(${ya(D6)}, ${ya(R6)}, ${ya(\n  P6\n)})${t}`;\nfunction EA(e) {\n  return /* @__PURE__ */ p(Qd, ve({}, e));\n}\nfunction Ks(e) {\n  const t = p3(e);\n  let n = e.children || null;\n  return e.content && (n = $o(e.content)), /* @__PURE__ */ p(g3, Ie(ve({}, t), { children: n }));\n}\nvar TA = (e) => {\n  switch (e.typography.fontFamilies.main) {\n    case \"Inter\":\n      return \"@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');\";\n    case \"Manrope\":\n    case \"Montserrat\":\n      return '@import url(\"https://fonts.googleapis.com/css2?family=Manrope:wght@200..800&family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap\");';\n    default:\n      return \"\";\n  }\n}, BA = ({ theme: e }) => gt`\n  ${TA(e)};\n\n  html {\n    font-size: ${xb}rem;\n    color: ${e.text};\n\n    /* required for iOS https://bit.ly/3Q8syG8 */\n    -webkit-text-size-adjust: none;\n    text-size-adjust: none;\n    scroll-behavior: smooth;\n  }\n\n  body {\n    font-family: ${e.typography.fontFamilies.main}, sans-serif;\n    font-weight: 500;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    &:before {\n      position: absolute;\n      visibility: hidden;\n    }\n\n    ${Bt.sm('&:before { content: \"sm\"; }')}\n    ${Bt.minSmMaxMd('&:before { content: \"minSmMaxMd\"; }')}\n      ${Bt.minMdMaxLg(\n  '&:before { content: \"minMdMaxLg\"; }'\n)}\n    ${Bt.lg('&:before { content: \"lg\"; }')}\n  }\n\n  * {\n    box-sizing: border-box;\n    line-height: ${wb}em;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n\n  a {\n    color: #0d6efd;\n    text-decoration: none;\n  }\n\n  .pretty-scrollbar {\n    scrollbar-width: auto;\n    scrollbar-color: #333333 #000000;\n  }\n\n  .pretty-scrollbar::-webkit-scrollbar {\n    width: 16px;\n  }\n\n  .pretty-scrollbar::-webkit-scrollbar-track {\n    background: #000000;\n  }\n\n  .pretty-scrollbar::-webkit-scrollbar-thumb {\n    background-color: #333333;\n    border-radius: 10px;\n    border: 3px solid #000000;\n  }\n\n  *:focus-visible {\n    outline: ${e.hcNeutral} dashed 1px;\n  }\n\n  strong {\n    font-weight: 700;\n  }\n\n  // Recaptcha badge invisibility\n  .grecaptcha-badge {\n    visibility: hidden;\n  }\n`;\nfunction IA() {\n  const e = Cn(), t = bb();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const r = () => {\n      document.documentElement.style.setProperty(Al.docHeight, `${window.innerHeight}px`);\n    };\n    return window.addEventListener(\"resize\", r), r(), () => window.removeEventListener(\"resize\", r);\n  }, []);\n  const n = gt`\n    ${BA({ theme: e })}\n\n    :root {\n      ${Al.docHeight}: 100vh;\n      --rt-opacity: 1 !important;\n      --rt-transition-show-delay: 0.15s !important;\n      --rt-transition-closing-delay: 0.2s !important;\n    }\n\n    html {\n      background: ${t};\n    }\n\n    body {\n      height: 100%;\n      margin: 0;\n      min-height: var(${Al.docHeight});\n      overflow-x: hidden;\n      overflow-y: auto;\n      overscroll-behavior: auto;\n    }\n\n    [id=\"root\"] {\n      height: 100%;\n    }\n  `;\n  return /* @__PURE__ */ p(hp, { styles: n });\n}\nfunction DA() {\n  const [e, t] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((i) => {\n    i !== null && (n.current = i, t(!0));\n  }, []);\n  return [e ? n : { current: null }, r];\n}\nvar V1 = {\n  isSm: !1,\n  stepDuration: 0.5\n};\nfunction H6({\n  background: e,\n  progressPercentage: t,\n  isSm: n = V1.isSm,\n  stepDuration: r = V1.stepDuration\n}) {\n  const [i, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(5);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    t !== void 0 ? o(t) : setTimeout(() => {\n      o(100);\n    }, 0);\n  }, [t]), /* @__PURE__ */ p(RA, { isSm: n, children: /* @__PURE__ */ p(OA, { isSm: n, percentage: i, stepDuration: r, children: /* @__PURE__ */ p(\n    PA,\n    {\n      background: e,\n      isSm: n,\n      percentage: i,\n      stepDuration: r\n    }\n  ) }) });\n}\nH6.defaultProps = V1;\nvar RA = G.div`\n  ${Ro(16)}\n  background-color: ${({ theme: e }) => Ri(e.c05Neutral, e.c1Neutral)({ theme: e })};\n  box-sizing: border-box;\n  display: flex;\n  height: ${({ isSm: e }) => e ? \"6px\" : \"16px\"};\n  justify-content: flex-start;\n  width: 100%;\n  position: relative;\n`, PA = G.div`\n  ${Ro(16)}\n  width: ${({ percentage: e }) => 100 / e * 100}%;\n  height: 100%;\n\n  background: ${({ background: e }) => e || `\n  linear-gradient(\n    90deg,\n    #000000 -25.9%,\n    #1b4077 14.55%,\n    #a152c7 82.22%,\n    #3f2e7e 115.32%\n  )`};\n`, OA = G.div`\n  ${Ro(16)}\n  overflow: hidden;\n  box-sizing: border-box;\n  display: inline-block;\n  height: ${({ isSm: e }) => e ? \"6px\" : \"16px\"};\n  width: ${(e) => e.percentage}%;\n  transition: width ${({ stepDuration: e }) => e}s\n    cubic-bezier(0.16, 0.3, 0.18, 1);\n`, HA = (e) => {\n  const [t, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0), [r, i] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), [o, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0), [s, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1), [l, d] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), g = () => {\n    e.nonDismissable || (n(!1), setTimeout(() => {\n      e.onClose && e.onClose(), a(0), i(null);\n    }, 300));\n  };\n  return /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ p(\n      UA,\n      {\n        isOpen: t,\n        fractionVisible: s,\n        onClick: g\n      }\n    ),\n    /* @__PURE__ */ p(\n      NA,\n      {\n        isOpen: t,\n        onTouchMove: (C) => {\n          var S, T;\n          if (!e.nonDismissable)\n            if (r === null)\n              i(C.touches[0].clientY);\n            else {\n              const N = C.touches[0].clientY - r, W = (((S = f.current) == null ? void 0 : S.getBoundingClientRect().top) || 0) + window.scrollY, U = ((T = f.current) == null ? void 0 : T.getBoundingClientRect().height) || 1, F = Math.min(\n                1,\n                (window.innerHeight - W) / U\n              );\n              c(F), i(C.touches[0].clientY), a((j) => Math.max(j + N, 0));\n            }\n        },\n        onTouchStart: () => {\n          e.nonDismissable || d(!0);\n        },\n        onTouchEnd: () => {\n          e.nonDismissable || (d(!1), s < 0.8 && g(), a(0), i(null));\n        },\n        totalDeltaY: o,\n        grabbing: l,\n        ref: f,\n        children: /* @__PURE__ */ q(VA, { kind: e.kind, padding: e.padding, children: [\n          e.grabber && !e.nonDismissable && /* @__PURE__ */ p(zA, { onClick: g, children: /* @__PURE__ */ p(qA, {}) }),\n          e.handleBack && /* @__PURE__ */ p(jA, { children: /* @__PURE__ */ p(\n            Dt,\n            {\n              onClick: e.handleBack,\n              icon: { name: \"ChevronLeft\" },\n              kind: \"ghost\",\n              size: \"Small\"\n            }\n          ) }),\n          e.closeButton && !e.nonDismissable && /* @__PURE__ */ p(WA, { children: /* @__PURE__ */ p(FA, { onClick: g, type: \"button\", children: /* @__PURE__ */ p(vt, { name: \"Close\", width: 10 }) }) }),\n          e.children\n        ] })\n      }\n    )\n  ] });\n}, UA = G.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: ${Pn.modalOverlay};\n\n  // Animate opacity\n  transition: opacity 0.3s ease-in-out;\n  opacity: ${(e) => e.isOpen ? e.fractionVisible : \"0\"};\n\n  animation: open 0.3s ease-in-out;\n\n  @keyframes open {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`, NA = G.div`\n  position: fixed;\n  max-height: 100dvh;\n  width: 100%;\n  right: 0;\n  bottom: 0;\n  transform: translateY(${(e) => `${e.totalDeltaY}px`});\n  z-index: ${Pn.modalContainer};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  // Only smooth transition when not grabbing, otherwise dragging will feel very laggy\n  ${(e) => e.grabbing && e.isOpen ? \"\" : \"transition: transform 0.3s ease-in-out;\"};\n\n  // Animate the drawer opening and closing, and make sure the the drawer stays closed.\n  animation: 0.3s ease-in-out\n    ${(e) => e.isOpen ? \"openDrawer\" : \"closeDrawer forwards\"};\n\n  @keyframes openDrawer {\n    from {\n      transform: translateY(100%);\n    }\n    to {\n      transform: translateY(0%);\n    }\n  }\n\n  @keyframes closeDrawer {\n    from {\n      transform: translateY(${(e) => `${e.totalDeltaY}px`});\n    }\n    to {\n      transform: translateY(100%);\n    }\n  }\n`, VA = G.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: ${(e) => e.kind === \"floating\" ? `calc(100% - ${Kt.md * 2}px)` : \"100%\"};\n  min-width: 320px;\n  height: 100%;\n  ${(e) => e.kind === \"floating\" ? `bottom: ${Kt.px.md};` : \"\"}\n  border-radius: ${(e) => e.kind === \"floating\" ? Kt.px.lg : `${Kt.px.lg} ${Kt.px.lg} 0 0`};\n  background-color: ${({ theme: e }) => e.bg};\n  padding: ${(e) => e.padding ? `${e.padding}` : `${Kt.px[\"6xl\"]} ${Kt.px.xl} ${Kt.px[\"2xl\"]}\n    ${Kt.px.xl}`};\n  overflow-y: auto;\n`, zA = G.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: ${Kt.px.lg};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 9px;\n  cursor: pointer;\n`, WA = G.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  border-radius: 50%;\n  background-color: ${Z.grayBlue94};\n  padding: ${Kt.px.xs};\n  height: 30px;\n  width: 30px;\n  display: flex;\n  align-items: center;\n\n  * > * {\n    line-height: 14px;\n  }\n`, FA = G(wr)`\n  ${vc}\n  width: 24px;\n  height: 24px;\n  justify-self: flex-end;\n`, jA = G.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  border-radius: 50%;\n  padding: ${Kt.px.xs};\n  height: 30px;\n  width: 30px;\n  display: flex;\n  align-items: center;\n`, qA = G.div`\n  width: 36px;\n  height: 5px;\n  border-radius: 2.5px;\n  background: #c0c9d6;\n`;\nfunction ZA({\n  center: e = !1,\n  justify: t,\n  align: n,\n  column: r = !1,\n  children: i,\n  onClick: o,\n  as: a = \"div\",\n  overflow: s,\n  whiteSpace: c,\n  mr: l,\n  ml: d\n}) {\n  return /* @__PURE__ */ p(\n    KA,\n    {\n      justify: t || (e ? \"center\" : \"flex-start\"),\n      align: n || (e ? \"center\" : \"flex-start\"),\n      column: r,\n      as: a,\n      onClick: o,\n      cursorProp: o ? \"pointer\" : \"unset\",\n      overflowProp: s,\n      whiteSpace: c,\n      mr: l,\n      ml: d,\n      children: i\n    }\n  );\n}\nvar KA = G.div`\n  display: flex;\n  text-overflow: ellipsis;\n\n  ${({ column: e }) => e && \"flex-direction: column;\"}\n  ${({ justify: e }) => `justify-content: ${e};`}\n  ${({ align: e }) => `align-items: ${e};`}\n  ${({ cursorProp: e }) => `cursor: ${e};`}\n  ${({ overflowProp: e }) => e ? `overflow: ${e}; max-width: 100%;` : \"\"}\n  ${({ whiteSpace: e }) => e ? `white-space: ${e};` : \"\"}\n  ${({ mr: e }) => e ? `margin-right: ${typeof e == \"number\" ? `${e}px` : e};` : \"\"}\n  ${({ ml: e }) => e ? `margin-left: ${typeof e == \"number\" ? `${e}px` : e};` : \"\"}\n`;\nfunction GA({\n  iconName: e = \"WarningSign\",\n  iconWidth: t = 40,\n  to: n,\n  onClick: r,\n  darkBg: i = !1,\n  shouldRotate: o = !1\n}) {\n  const a = /* @__PURE__ */ p(ZA, { center: !0, onClick: r, children: /* @__PURE__ */ p(\n    YA,\n    {\n      size: t,\n      darkBg: i,\n      shouldRotate: o,\n      children: /* @__PURE__ */ p(\n        vt,\n        {\n          name: e,\n          width: t,\n          color: i ? \"white\" : \"grayBlue9\"\n        }\n      )\n    }\n  ) });\n  return n ? /* @__PURE__ */ p(Qd, { to: n, children: a }) : a;\n}\nvar YA = G.div`\n  background: ${({ theme: e, darkBg: t }) => t ? \"linear-gradient(291.4deg, #1C243F 0%, #21283A 100%)\" : Ea(e, \"grayBlue94\")};\n  border-radius: 50%;\n  padding: ${({ size: e }) => Bl(e)}px;\n  display: flex;\n  justify-content: center;\n  ${({ size: e }) => `width: ${e + Bl(e) * 2}px; height: ${e + Bl(e) * 2}px;`}\n\n  @keyframes IconWithCircleBackgroundRotate {\n    0% {\n      transform: rotate(0);\n    }\n    35% {\n      transform: rotate(360deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  ${({ shouldRotate: e }) => e && \"animation: IconWithCircleBackgroundRotate 10s ease infinite;\"}\n`;\nfunction Bl(e) {\n  return e === 40 ? 20 : 16;\n}\nfunction XA(e) {\n  return !!(e && \"href\" in e);\n}\nfunction JA({\n  visible: e,\n  topContent: t,\n  title: n,\n  description: r,\n  children: i,\n  onClose: o,\n  onCancel: a,\n  cancelDisabled: s,\n  cancelHidden: c,\n  ghost: l,\n  onSubmit: d,\n  submitDisabled: f,\n  submitLoading: g,\n  submitLoadingKind: b,\n  submitText: x,\n  submitLink: m,\n  cancelText: C = \"Cancel\",\n  firstFocusRef: S,\n  smKind: T = \"default\",\n  top: N,\n  nonDismissable: W = !1,\n  autoFocus: U = !0,\n  width: F = 460,\n  progressBar: j,\n  buttonLayout: K = \"horizontal\",\n  extraActions: J,\n  handleBack: X,\n  appendToElement: _,\n  bottomContent: u,\n  topLeftIcon: v\n}) {\n  const w = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1), y = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), [$, A] = DA(), H = S || $, [M, h] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), L = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), Y = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(), ne = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), ie = Wp(), se = ie.current(\n    \"sm\"\n    /* sm */\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    e !== w.current && (w.current = e);\n  }, [e]);\n  const ye = e !== w.current;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    Y.current = document.activeElement;\n    const be = _ ?? document.body;\n    return y.current || (y.current = document.createElement(\"div\"), be.appendChild(y.current)), h(!0), () => {\n      y.current && (be.removeChild(y.current), y.current = null);\n    };\n  }, [_]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const be = (Re) => {\n      e && L.current && Re.target && L.current.contains(Re.target) && !W && o();\n    }, pe = (Re) => {\n      e && Re.key === \"Escape\" && !W && o();\n    };\n    e ? (ne.current && ne.current.addEventListener(\"keydown\", pe), L.current && L.current.addEventListener(\"click\", be)) : (ne.current && ne.current.removeEventListener(\"keydown\", pe), L.current && L.current.removeEventListener(\"click\", be));\n    const At = ne.current, qe = L.current;\n    return () => {\n      At && At.removeEventListener(\"keydown\", pe), qe && qe.removeEventListener(\"click\", be);\n    };\n  }, [o, e, W]), (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {\n    e ? (ye && (Y.current = document.activeElement), typeof H == \"object\" && (H != null && H.current) && U && H.current.focus()) : ye && Y.current && Y.current.focus();\n  }, [e, ye, H, U]);\n  function ge(be) {\n    be == null || be.stopPropagation(), o();\n  }\n  function _e(be) {\n    be.preventDefault(), !f && d && d();\n  }\n  function me() {\n    a ? a() : o();\n  }\n  const de = XA(m), Ge = !de && m, Me = /* @__PURE__ */ q(xt, { children: [\n    J == null ? void 0 : J.filter((be) => be.placement === \"above\").map((be, pe) => {\n      var At = be, { placement: qe, text: Re } = At, Qt = pn(At, [\"placement\", \"text\"]);\n      return /* @__PURE__ */ p(Dt, ve({ text: Re }, Qt), Re || `no-text-${pe}`);\n    }),\n    !se && !c && /* @__PURE__ */ p(\n      Dt,\n      {\n        disabled: s,\n        onClick: me,\n        text: C\n      }\n    ),\n    (d || m) && /* @__PURE__ */ p(\n      Dt,\n      {\n        kind: \"primary\",\n        disabled: f,\n        text: x ?? \"Continue\",\n        loading: g,\n        loadingKind: b,\n        to: Ge ? m.to : void 0,\n        externalLink: de ? m.href : void 0,\n        filename: de ? m.filename : void 0,\n        type: m ? \"button\" : \"submit\",\n        onClick: m ? d : void 0\n      }\n    ),\n    se && !c && /* @__PURE__ */ p(Dt, { onClick: o, text: C }),\n    J == null ? void 0 : J.filter((be) => be.placement === \"below\").map((be, pe) => {\n      var At = be, { placement: qe, text: Re } = At, Qt = pn(At, [\"placement\", \"text\"]);\n      return /* @__PURE__ */ p(Dt, ve({ text: Re }, Qt), Re || `no-text-${pe}`);\n    })\n  ] });\n  let te = null;\n  if (n) {\n    const pe = M0(n, {\n      default: {\n        type: \"Headline\",\n        heading: \"h4\",\n        size: \"Small\"\n      }\n    });\n    te = /* @__PURE__ */ p(ik, { children: $o(pe) });\n  }\n  let Lt = null;\n  if (r) {\n    const pe = M0(\n      r,\n      { default: {\n        type: \"Body\",\n        size: \"ExtraSmall\"\n      } }\n    );\n    Lt = /* @__PURE__ */ p(N6, { children: $o(pe) });\n  }\n  let Se = null;\n  t && (Se = /* @__PURE__ */ p(\"div\", { css: { marginBottom: Kt.px.xl }, children: /* @__PURE__ */ p(GA, ve({}, t)) }));\n  const De = /* @__PURE__ */ q(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    j ? /* @__PURE__ */ p(\"div\", { css: { marginBottom: \"20px\" }, children: /* @__PURE__ */ p(\n      H6,\n      {\n        progressPercentage: j.progressPercentage,\n        isSm: j.isSm\n      }\n    ) }) : null,\n    Se,\n    te,\n    Lt,\n    i,\n    d || a || m ? K === \"horizontal\" ? /* @__PURE__ */ p(nk, { children: Me }) : /* @__PURE__ */ p(rk, { children: Me }) : null\n  ] });\n  let Et;\n  return T === \"drawer\" && se ? Et = /* @__PURE__ */ p(\n    HA,\n    {\n      onClose: () => ge(),\n      closeButton: !0,\n      nonDismissable: W,\n      handleBack: X,\n      children: De\n    }\n  ) : Et = /* @__PURE__ */ q(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    T === \"fullscreen\" && ie.isSm() ? null : /* @__PURE__ */ p(ek, { ref: L }),\n    /* @__PURE__ */ p(\n      tk,\n      {\n        \"aria-modal\": !0,\n        \"aria-hidden\": !0,\n        tabIndex: -1,\n        role: \"dialog\",\n        ref: ne,\n        top: N || (T === \"default\" ? o3.smPx : 0),\n        children: /* @__PURE__ */ q(ok, { width: F, ghost: l, smKind: T, children: [\n          !S && /* @__PURE__ */ p(QA, { ref: A }),\n          !l && /* @__PURE__ */ q(ak, { children: [\n            X ? /* @__PURE__ */ p(sk, { onClick: X, children: /* @__PURE__ */ p(vt, { name: \"ChevronLeft\", width: 16 }) }) : v ? /* @__PURE__ */ p(vt, ve({}, v)) : null,\n            !W && /* @__PURE__ */ p(ck, { onClick: ge, type: \"button\", children: /* @__PURE__ */ p(vt, { name: \"Close\", width: 9 }) })\n          ] }),\n          /* @__PURE__ */ p(lk, { ghost: l, children: De }),\n          u && /* @__PURE__ */ p(\"div\", { css: { marginTop: \"auto\" }, children: u })\n        ] })\n      }\n    )\n  ] }), e && M && y.current ? react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(\n    d ? /* @__PURE__ */ p(\"form\", { onSubmit: _e, children: Et }) : Et,\n    y.current\n  ) : null;\n}\nvar QA = G(wr)`\n  position: absolute;\n  top: -30px;\n  width: 0;\n  height: 0;\n`, ek = G.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  z-index: ${Pn.modalOverlay};\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.5);\n`, tk = G.div`\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: ${Pn.modalContainer};\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  outline: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme: e }) => e.text};\n  ${(e) => `top: ${e.top}px;`}\n`, U6 = 24, N6 = G.div`\n  color: ${({ theme: e }) => e.mcNeutral};\n  margin-top: ${Kt.px.sm};\n  & + * {\n    margin-top: ${U6}px;\n  }\n`, nk = G.div`\n  margin-top: ${Kt.px.lg};\n  ${Bt.minSm(\"display: flex;\")}\n  gap: 10px;\n\n  ${O6()} {\n    width: 50%;\n    ${Bt.sm(`\n      width: 100%;\n    `)}\n  }\n`, rk = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${Kt.px.sm};\n\n  ${O6()} {\n    width: 100%;\n  }\n\n  margin-top: ${Kt.px.lg};\n`, ik = G.div`\n  margin: 0;\n  & + *:not(${ya(N6)}) {\n    margin-top: ${U6}px;\n  }\n`, ok = G.div`\n  pointer-events: auto;\n  transition: width 0.25s ease-in;\n\n  ${({ theme: e, smKind: t, ghost: n }) => n ? \"\" : s3({ theme: e, border: t !== \"fullscreen\" })}\n\n  ${Yb}\n  ${o3.smCSS.styles}\n  max-width: 100%;\n  max-height: 100%;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n\n  ${({ ghost: e, width: t }) => `\n    ${e ? \"\" : Ro(16)}\n    width: ${t}px;\n  `}\n\n  ${({ smKind: e }) => e === \"fullscreen\" ? Bt.sm(`\n          width: 100%;\n          height: 100dvh;\n        `) : \"\"}\n\n  ${({ ghost: e }) => e ? \"\" : \"padding: 16px 16px 40px;\"}\n`, ak = G.div`\n  display: grid;\n  grid-auto-flow: column;\n  width: 100%;\n`, sk = G(wr)`\n  ${vc}\n  width: 24px;\n  height: 24px;\n  justify-self: flex-start;\n`, ck = G(wr)`\n  ${vc}\n  width: 24px;\n  height: 24px;\n  justify-self: flex-end;\n`, lk = G.div`\n  ${(e) => e.ghost ? \"\" : \"padding: 32px 24px 0;\"}\n  ${(e) => e.ghost ? \"\" : `${Bt.sm(`\n    padding-left: 10px;\n    padding-right: 10px;\n  `)}`}\n`;\nlet z1;\nvar bs, G2;\n(typeof navigator > \"u\" || !((G2 = (bs = navigator.userAgent) == null ? void 0 : bs.startsWith) != null && G2.call(bs, \"Mozilla/5.0 \"))) && (z1 = \"oauth4webapi/v2.12.1\");\nfunction V6(e, t) {\n  if (e == null)\n    return !1;\n  try {\n    return e instanceof t || Object.getPrototypeOf(e)[Symbol.toStringTag] === t.prototype[Symbol.toStringTag];\n  } catch {\n    return !1;\n  }\n}\nconst dk = Symbol(), fk = Symbol(), uk = Symbol(), hk = new TextEncoder(), pk = new TextDecoder();\nfunction Ei(e) {\n  return typeof e == \"string\" ? hk.encode(e) : pk.decode(e);\n}\nconst q0 = 32768;\nfunction gk(e) {\n  e instanceof ArrayBuffer && (e = new Uint8Array(e));\n  const t = [];\n  for (let n = 0; n < e.byteLength; n += q0)\n    t.push(String.fromCharCode.apply(null, e.subarray(n, n + q0)));\n  return btoa(t.join(\"\")).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction mk(e) {\n  try {\n    const t = atob(e.replace(/-/g, \"+\").replace(/_/g, \"/\").replace(/\\s/g, \"\")), n = new Uint8Array(t.length);\n    for (let r = 0; r < t.length; r++)\n      n[r] = t.charCodeAt(r);\n    return n;\n  } catch (t) {\n    throw new Ae(\"The input to be decoded is not correctly encoded.\", { cause: t });\n  }\n}\nfunction ei(e) {\n  return typeof e == \"string\" ? mk(e) : gk(e);\n}\nclass vk {\n  constructor(t) {\n    this.cache = /* @__PURE__ */ new Map(), this._cache = /* @__PURE__ */ new Map(), this.maxSize = t;\n  }\n  get(t) {\n    let n = this.cache.get(t);\n    if (n)\n      return n;\n    if (n = this._cache.get(t))\n      return this.update(t, n), n;\n  }\n  has(t) {\n    return this.cache.has(t) || this._cache.has(t);\n  }\n  set(t, n) {\n    return this.cache.has(t) ? this.cache.set(t, n) : this.update(t, n), this;\n  }\n  delete(t) {\n    return this.cache.has(t) ? this.cache.delete(t) : this._cache.has(t) ? this._cache.delete(t) : !1;\n  }\n  update(t, n) {\n    this.cache.set(t, n), this.cache.size >= this.maxSize && (this._cache = this.cache, this.cache = /* @__PURE__ */ new Map());\n  }\n}\nclass Fn extends Error {\n  constructor(t) {\n    var n;\n    super(t ?? \"operation not supported\"), this.name = this.constructor.name, (n = Error.captureStackTrace) == null || n.call(Error, this, this.constructor);\n  }\n}\nclass yk extends Error {\n  constructor(t, n) {\n    var r;\n    super(t, n), this.name = this.constructor.name, (r = Error.captureStackTrace) == null || r.call(Error, this, this.constructor);\n  }\n}\nconst Ae = yk, bk = new vk(100);\nfunction xk(e) {\n  return e instanceof CryptoKey;\n}\nfunction wk(e) {\n  return xk(e) && e.type === \"private\";\n}\nfunction $k(e) {\n  try {\n    const t = e.headers.get(\"dpop-nonce\");\n    t && bk.set(new URL(e.url).origin, t);\n  } catch {\n  }\n  return e;\n}\nfunction Gs(e) {\n  return !(e === null || typeof e != \"object\" || Array.isArray(e));\n}\nfunction Ck(e) {\n  V6(e, Headers) && (e = Object.fromEntries(e.entries()));\n  const t = new Headers(e);\n  if (z1 && !t.has(\"user-agent\") && t.set(\"user-agent\", z1), t.has(\"authorization\"))\n    throw new TypeError('\"options.headers\" must not include the \"authorization\" header name');\n  if (t.has(\"dpop\"))\n    throw new TypeError('\"options.headers\" must not include the \"dpop\" header name');\n  return t;\n}\nfunction Sk(e) {\n  if (typeof e == \"function\" && (e = e()), !(e instanceof AbortSignal))\n    throw new TypeError('\"options.signal\" must return or be an instance of AbortSignal');\n  return e;\n}\nfunction bn(e) {\n  return typeof e == \"string\" && e.length !== 0;\n}\nfunction sf() {\n  return ei(crypto.getRandomValues(new Uint8Array(32)));\n}\nfunction Mk() {\n  return sf();\n}\nfunction Lk() {\n  return sf();\n}\nasync function Ak(e) {\n  if (!bn(e))\n    throw new TypeError('\"codeVerifier\" must be a non-empty string');\n  return ei(await crypto.subtle.digest(\"SHA-256\", Ei(e)));\n}\nfunction kk(e) {\n  if (e instanceof CryptoKey)\n    return { key: e };\n  if (!((e == null ? void 0 : e.key) instanceof CryptoKey))\n    return {};\n  if (e.kid !== void 0 && !bn(e.kid))\n    throw new TypeError('\"kid\" must be a non-empty string');\n  return { key: e.key, kid: e.kid };\n}\nfunction Z0(e) {\n  return encodeURIComponent(e).replace(/%20/g, \"+\");\n}\nfunction _k(e, t) {\n  const n = Z0(e), r = Z0(t);\n  return `Basic ${btoa(`${n}:${r}`)}`;\n}\nfunction Ek(e) {\n  switch (e.algorithm.hash.name) {\n    case \"SHA-256\":\n      return \"PS256\";\n    case \"SHA-384\":\n      return \"PS384\";\n    case \"SHA-512\":\n      return \"PS512\";\n    default:\n      throw new Fn(\"unsupported RsaHashedKeyAlgorithm hash name\");\n  }\n}\nfunction Tk(e) {\n  switch (e.algorithm.hash.name) {\n    case \"SHA-256\":\n      return \"RS256\";\n    case \"SHA-384\":\n      return \"RS384\";\n    case \"SHA-512\":\n      return \"RS512\";\n    default:\n      throw new Fn(\"unsupported RsaHashedKeyAlgorithm hash name\");\n  }\n}\nfunction Bk(e) {\n  switch (e.algorithm.namedCurve) {\n    case \"P-256\":\n      return \"ES256\";\n    case \"P-384\":\n      return \"ES384\";\n    case \"P-521\":\n      return \"ES512\";\n    default:\n      throw new Fn(\"unsupported EcKeyAlgorithm namedCurve\");\n  }\n}\nfunction Ik(e) {\n  switch (e.algorithm.name) {\n    case \"RSA-PSS\":\n      return Ek(e);\n    case \"RSASSA-PKCS1-v1_5\":\n      return Tk(e);\n    case \"ECDSA\":\n      return Bk(e);\n    case \"Ed25519\":\n    case \"Ed448\":\n      return \"EdDSA\";\n    default:\n      throw new Fn(\"unsupported CryptoKey algorithm name\");\n  }\n}\nfunction z6(e) {\n  const t = e == null ? void 0 : e[dk];\n  return typeof t == \"number\" && Number.isFinite(t) ? t : 0;\n}\nfunction Dk(e) {\n  const t = e == null ? void 0 : e[fk];\n  return typeof t == \"number\" && Number.isFinite(t) && Math.sign(t) !== -1 ? t : 30;\n}\nfunction W6() {\n  return Math.floor(Date.now() / 1e3);\n}\nfunction Rk(e, t) {\n  const n = W6() + z6(t);\n  return {\n    jti: sf(),\n    aud: [e.issuer, e.token_endpoint],\n    exp: n + 60,\n    iat: n,\n    nbf: n,\n    iss: t.client_id,\n    sub: t.client_id\n  };\n}\nasync function Pk(e, t, n, r) {\n  return Hk({\n    alg: Ik(n),\n    kid: r\n  }, Rk(e, t), n);\n}\nfunction Dc(e) {\n  if (typeof e != \"object\" || e === null)\n    throw new TypeError('\"as\" must be an object');\n  if (!bn(e.issuer))\n    throw new TypeError('\"as.issuer\" property must be a non-empty string');\n  return !0;\n}\nfunction Rc(e) {\n  if (typeof e != \"object\" || e === null)\n    throw new TypeError('\"client\" must be an object');\n  if (!bn(e.client_id))\n    throw new TypeError('\"client.client_id\" property must be a non-empty string');\n  return !0;\n}\nfunction K0(e) {\n  if (!bn(e))\n    throw new TypeError('\"client.client_secret\" property must be a non-empty string');\n  return e;\n}\nfunction Il(e, t) {\n  if (t !== void 0)\n    throw new TypeError(`\"options.clientPrivateKey\" property must not be provided when ${e} client authentication method is used.`);\n}\nfunction G0(e, t) {\n  if (t !== void 0)\n    throw new TypeError(`\"client.client_secret\" property must not be provided when ${e} client authentication method is used.`);\n}\nasync function Ok(e, t, n, r, i) {\n  switch (n.delete(\"client_secret\"), n.delete(\"client_assertion_type\"), n.delete(\"client_assertion\"), t.token_endpoint_auth_method) {\n    case void 0:\n    case \"client_secret_basic\": {\n      Il(\"client_secret_basic\", i), r.set(\"authorization\", _k(t.client_id, K0(t.client_secret)));\n      break;\n    }\n    case \"client_secret_post\": {\n      Il(\"client_secret_post\", i), n.set(\"client_id\", t.client_id), n.set(\"client_secret\", K0(t.client_secret));\n      break;\n    }\n    case \"private_key_jwt\": {\n      if (G0(\"private_key_jwt\", t.client_secret), i === void 0)\n        throw new TypeError('\"options.clientPrivateKey\" must be provided when \"client.token_endpoint_auth_method\" is \"private_key_jwt\"');\n      const { key: o, kid: a } = kk(i);\n      if (!wk(o))\n        throw new TypeError('\"options.clientPrivateKey.key\" must be a private CryptoKey');\n      n.set(\"client_id\", t.client_id), n.set(\"client_assertion_type\", \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\"), n.set(\"client_assertion\", await Pk(e, t, o, a));\n      break;\n    }\n    case \"tls_client_auth\":\n    case \"self_signed_tls_client_auth\":\n    case \"none\": {\n      G0(t.token_endpoint_auth_method, t.client_secret), Il(t.token_endpoint_auth_method, i), n.set(\"client_id\", t.client_id);\n      break;\n    }\n    default:\n      throw new Fn(\"unsupported client token_endpoint_auth_method\");\n  }\n}\nasync function Hk(e, t, n) {\n  if (!n.usages.includes(\"sign\"))\n    throw new TypeError('CryptoKey instances used for signing assertions must include \"sign\" in their \"usages\"');\n  const r = `${ei(Ei(JSON.stringify(e)))}.${ei(Ei(JSON.stringify(t)))}`, i = ei(await crypto.subtle.sign(K6(n), n, Ei(r)));\n  return `${r}.${i}`;\n}\nfunction Uk(e, t, n) {\n  if (typeof e != \"string\")\n    throw new TypeError(`\"as.${t}\" must be a string`);\n  return new URL(e);\n}\nfunction Nk(e, t, n) {\n  return Uk(e[t], t);\n}\nfunction _s(e) {\n  const t = e;\n  return typeof t != \"object\" || Array.isArray(t) || t === null ? !1 : t.error !== void 0;\n}\nasync function Vk(e, t, n, r, i, o, a) {\n  return await Ok(e, t, i, o, a == null ? void 0 : a.clientPrivateKey), o.set(\"content-type\", \"application/x-www-form-urlencoded;charset=UTF-8\"), ((a == null ? void 0 : a[uk]) || fetch)(r.href, {\n    body: i,\n    headers: Object.fromEntries(o.entries()),\n    method: n,\n    redirect: \"manual\",\n    signal: a != null && a.signal ? Sk(a.signal) : null\n  }).then($k);\n}\nasync function F6(e, t, n, r, i) {\n  const o = Nk(e, \"token_endpoint\");\n  r.set(\"grant_type\", n);\n  const a = Ck(i == null ? void 0 : i.headers);\n  return a.set(\"accept\", \"application/json\"), Vk(e, t, \"POST\", o, r, a, i);\n}\nasync function zk(e, t, n, r) {\n  if (Dc(e), Rc(t), !bn(n))\n    throw new TypeError('\"refreshToken\" must be a non-empty string');\n  const i = new URLSearchParams(r == null ? void 0 : r.additionalParameters);\n  return i.set(\"refresh_token\", n), F6(e, t, \"refresh_token\", i, r);\n}\nconst Wk = /* @__PURE__ */ new WeakMap();\nasync function j6(e, t, n, r = !1, i = !1) {\n  if (Dc(e), Rc(t), !V6(n, Response))\n    throw new TypeError('\"response\" must be an instance of Response');\n  if (n.status !== 200) {\n    let a;\n    if (a = await Jk(n))\n      return a;\n    throw new Ae('\"response\" is not a conform Token Endpoint response');\n  }\n  Z6(n);\n  let o;\n  try {\n    o = await n.json();\n  } catch (a) {\n    throw new Ae('failed to parse \"response\" body as JSON', { cause: a });\n  }\n  if (!Gs(o))\n    throw new Ae('\"response\" body must be a top level object');\n  if (!bn(o.access_token))\n    throw new Ae('\"response\" body \"access_token\" property must be a non-empty string');\n  if (!bn(o.token_type))\n    throw new Ae('\"response\" body \"token_type\" property must be a non-empty string');\n  if (o.token_type = o.token_type.toLowerCase(), o.token_type !== \"dpop\" && o.token_type !== \"bearer\")\n    throw new Fn(\"unsupported `token_type` value\");\n  if (o.expires_in !== void 0 && (typeof o.expires_in != \"number\" || o.expires_in <= 0))\n    throw new Ae('\"response\" body \"expires_in\" property must be a positive number');\n  if (!i && o.refresh_token !== void 0 && !bn(o.refresh_token))\n    throw new Ae('\"response\" body \"refresh_token\" property must be a non-empty string');\n  if (o.scope !== void 0 && typeof o.scope != \"string\")\n    throw new Ae('\"response\" body \"scope\" property must be a string');\n  if (!r) {\n    if (o.id_token !== void 0 && !bn(o.id_token))\n      throw new Ae('\"response\" body \"id_token\" property must be a non-empty string');\n    if (o.id_token) {\n      const { claims: a } = await e_(o.id_token, t_.bind(void 0, t.id_token_signed_response_alg, e.id_token_signing_alg_values_supported), G6, z6(t), Dk(t)).then(Yk.bind(void 0, [\"aud\", \"exp\", \"iat\", \"iss\", \"sub\"])).then(qk.bind(void 0, e.issuer)).then(jk.bind(void 0, t.client_id));\n      if (Array.isArray(a.aud) && a.aud.length !== 1 && a.azp !== t.client_id)\n        throw new Ae('unexpected ID Token \"azp\" (authorized party) claim value');\n      if (a.auth_time !== void 0 && (!Number.isFinite(a.auth_time) || Math.sign(a.auth_time) !== 1))\n        throw new Ae('ID Token \"auth_time\" (authentication time) must be a positive number');\n      Wk.set(o, a);\n    }\n  }\n  return o;\n}\nasync function Fk(e, t, n) {\n  return j6(e, t, n);\n}\nfunction jk(e, t) {\n  if (Array.isArray(t.claims.aud)) {\n    if (!t.claims.aud.includes(e))\n      throw new Ae('unexpected JWT \"aud\" (audience) claim value');\n  } else if (t.claims.aud !== e)\n    throw new Ae('unexpected JWT \"aud\" (audience) claim value');\n  return t;\n}\nfunction qk(e, t) {\n  if (t.claims.iss !== e)\n    throw new Ae('unexpected JWT \"iss\" (issuer) claim value');\n  return t;\n}\nconst q6 = /* @__PURE__ */ new WeakSet();\nfunction Zk(e) {\n  return q6.add(e), e;\n}\nasync function Kk(e, t, n, r, i, o) {\n  if (Dc(e), Rc(t), !q6.has(n))\n    throw new TypeError('\"callbackParameters\" must be an instance of URLSearchParams obtained from \"validateAuthResponse()\", or \"validateJwtAuthResponse()');\n  if (!bn(r))\n    throw new TypeError('\"redirectUri\" must be a non-empty string');\n  if (!bn(i))\n    throw new TypeError('\"codeVerifier\" must be a non-empty string');\n  const a = Mr(n, \"code\");\n  if (!a)\n    throw new Ae('no authorization code in \"callbackParameters\"');\n  const s = new URLSearchParams(o == null ? void 0 : o.additionalParameters);\n  return s.set(\"redirect_uri\", r), s.set(\"code_verifier\", i), s.set(\"code\", a), F6(e, t, \"authorization_code\", s, o);\n}\nconst Gk = {\n  aud: \"audience\",\n  c_hash: \"code hash\",\n  client_id: \"client id\",\n  exp: \"expiration time\",\n  iat: \"issued at\",\n  iss: \"issuer\",\n  jti: \"jwt id\",\n  nonce: \"nonce\",\n  s_hash: \"state hash\",\n  sub: \"subject\",\n  ath: \"access token hash\",\n  htm: \"http method\",\n  htu: \"http uri\",\n  cnf: \"confirmation\"\n};\nfunction Yk(e, t) {\n  for (const n of e)\n    if (t.claims[n] === void 0)\n      throw new Ae(`JWT \"${n}\" (${Gk[n]}) claim missing`);\n  return t;\n}\nasync function Xk(e, t, n) {\n  const r = await j6(e, t, n, !0);\n  if (_s(r))\n    return r;\n  if (r.id_token !== void 0) {\n    if (typeof r.id_token == \"string\" && r.id_token.length)\n      throw new Ae(\"Unexpected ID Token returned, use processAuthorizationCodeOpenIDResponse() for OpenID Connect callback processing\");\n    delete r.id_token;\n  }\n  return r;\n}\nfunction Z6(e) {\n  if (e.bodyUsed)\n    throw new TypeError('\"response\" body has been used already');\n}\nasync function Jk(e) {\n  if (e.status > 399 && e.status < 500) {\n    Z6(e);\n    try {\n      const t = await e.json();\n      if (Gs(t) && typeof t.error == \"string\" && t.error.length)\n        return t.error_description !== void 0 && typeof t.error_description != \"string\" && delete t.error_description, t.error_uri !== void 0 && typeof t.error_uri != \"string\" && delete t.error_uri, t.algs !== void 0 && typeof t.algs != \"string\" && delete t.algs, t.scope !== void 0 && typeof t.scope != \"string\" && delete t.scope, t;\n    } catch {\n    }\n  }\n}\nfunction Y0(e) {\n  if (typeof e.modulusLength != \"number\" || e.modulusLength < 2048)\n    throw new Ae(`${e.name} modulusLength must be at least 2048 bits`);\n}\nfunction Qk(e) {\n  switch (e) {\n    case \"P-256\":\n      return \"SHA-256\";\n    case \"P-384\":\n      return \"SHA-384\";\n    case \"P-521\":\n      return \"SHA-512\";\n    default:\n      throw new Fn();\n  }\n}\nfunction K6(e) {\n  switch (e.algorithm.name) {\n    case \"ECDSA\":\n      return {\n        name: e.algorithm.name,\n        hash: Qk(e.algorithm.namedCurve)\n      };\n    case \"RSA-PSS\":\n      switch (Y0(e.algorithm), e.algorithm.hash.name) {\n        case \"SHA-256\":\n        case \"SHA-384\":\n        case \"SHA-512\":\n          return {\n            name: e.algorithm.name,\n            saltLength: parseInt(e.algorithm.hash.name.slice(-3), 10) >> 3\n          };\n        default:\n          throw new Fn();\n      }\n    case \"RSASSA-PKCS1-v1_5\":\n      return Y0(e.algorithm), e.algorithm.name;\n    case \"Ed448\":\n    case \"Ed25519\":\n      return e.algorithm.name;\n  }\n  throw new Fn();\n}\nconst G6 = Symbol();\nasync function e_(e, t, n, r, i) {\n  const { 0: o, 1: a, 2: s, length: c } = e.split(\".\");\n  if (c === 5)\n    throw new Fn(\"JWE structure JWTs are not supported\");\n  if (c !== 3)\n    throw new Ae(\"Invalid JWT\");\n  let l;\n  try {\n    l = JSON.parse(Ei(ei(o)));\n  } catch (x) {\n    throw new Ae(\"failed to parse JWT Header body as base64url encoded JSON\", { cause: x });\n  }\n  if (!Gs(l))\n    throw new Ae(\"JWT Header must be a top level object\");\n  if (t(l), l.crit !== void 0)\n    throw new Ae('unexpected JWT \"crit\" header parameter');\n  const d = ei(s);\n  let f;\n  if (n !== G6) {\n    f = await n(l);\n    const x = `${o}.${a}`;\n    if (!await crypto.subtle.verify(K6(f), f, d, Ei(x)))\n      throw new Ae(\"JWT signature verification failed\");\n  }\n  let g;\n  try {\n    g = JSON.parse(Ei(ei(a)));\n  } catch (x) {\n    throw new Ae(\"failed to parse JWT Payload body as base64url encoded JSON\", { cause: x });\n  }\n  if (!Gs(g))\n    throw new Ae(\"JWT Payload must be a top level object\");\n  const b = W6() + r;\n  if (g.exp !== void 0) {\n    if (typeof g.exp != \"number\")\n      throw new Ae('unexpected JWT \"exp\" (expiration time) claim type');\n    if (g.exp <= b - i)\n      throw new Ae('unexpected JWT \"exp\" (expiration time) claim value, timestamp is <= now()');\n  }\n  if (g.iat !== void 0 && typeof g.iat != \"number\")\n    throw new Ae('unexpected JWT \"iat\" (issued at) claim type');\n  if (g.iss !== void 0 && typeof g.iss != \"string\")\n    throw new Ae('unexpected JWT \"iss\" (issuer) claim type');\n  if (g.nbf !== void 0) {\n    if (typeof g.nbf != \"number\")\n      throw new Ae('unexpected JWT \"nbf\" (not before) claim type');\n    if (g.nbf > b + i)\n      throw new Ae('unexpected JWT \"nbf\" (not before) claim value, timestamp is > now()');\n  }\n  if (g.aud !== void 0 && typeof g.aud != \"string\" && !Array.isArray(g.aud))\n    throw new Ae('unexpected JWT \"aud\" (audience) claim type');\n  return { header: l, claims: g, signature: d, key: f };\n}\nfunction t_(e, t, n) {\n  if (e !== void 0) {\n    if (n.alg !== e)\n      throw new Ae('unexpected JWT \"alg\" header parameter');\n    return;\n  }\n  if (Array.isArray(t)) {\n    if (!t.includes(n.alg))\n      throw new Ae('unexpected JWT \"alg\" header parameter');\n    return;\n  }\n  if (n.alg !== \"RS256\")\n    throw new Ae('unexpected JWT \"alg\" header parameter');\n}\nfunction Mr(e, t) {\n  const { 0: n, length: r } = e.getAll(t);\n  if (r > 1)\n    throw new Ae(`\"${t}\" parameter must be provided only once`);\n  return n;\n}\nconst n_ = Symbol(), r_ = Symbol();\nfunction i_(e, t, n, r) {\n  if (Dc(e), Rc(t), n instanceof URL && (n = n.searchParams), !(n instanceof URLSearchParams))\n    throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n  if (Mr(n, \"response\"))\n    throw new Ae('\"parameters\" contains a JARM response, use validateJwtAuthResponse() instead of validateAuthResponse()');\n  const i = Mr(n, \"iss\"), o = Mr(n, \"state\");\n  if (!i && e.authorization_response_iss_parameter_supported)\n    throw new Ae('response parameter \"iss\" (issuer) missing');\n  if (i && i !== e.issuer)\n    throw new Ae('unexpected \"iss\" (issuer) response parameter value');\n  switch (r) {\n    case void 0:\n    case r_:\n      if (o !== void 0)\n        throw new Ae('unexpected \"state\" response parameter encountered');\n      break;\n    case n_:\n      break;\n    default:\n      if (!bn(r))\n        throw new Ae('\"expectedState\" must be a non-empty string');\n      if (o === void 0)\n        throw new Ae('response parameter \"state\" missing');\n      if (o !== r)\n        throw new Ae('unexpected \"state\" response parameter value');\n  }\n  const a = Mr(n, \"error\");\n  if (a)\n    return {\n      error: a,\n      error_description: Mr(n, \"error_description\"),\n      error_uri: Mr(n, \"error_uri\")\n    };\n  const s = Mr(n, \"id_token\"), c = Mr(n, \"token\");\n  if (s !== void 0 || c !== void 0)\n    throw new Fn(\"implicit and hybrid flows are not supported\");\n  return Zk(new URLSearchParams(n));\n}\nconst jo = (e) => e ? /^\\$[a-zA-Z0-9\\-_.+]+@localhost:\\d+/.test(\n  e\n) ? !0 : /^\\$[a-zA-Z0-9\\-_.+]+@([a-zA-Z0-9-_.+:]+\\.)+[a-zA-Z0-9:]+$/.test(\n  e\n) : !1, o_ = { BASE_URL: \"/\", DEV: !1, MODE: \"production\", PROD: !0, SSR: !1 }, X0 = (e) => {\n  let t;\n  const n = /* @__PURE__ */ new Set(), r = (d, f) => {\n    const g = typeof d == \"function\" ? d(t) : d;\n    if (!Object.is(g, t)) {\n      const b = t;\n      t = f ?? (typeof g != \"object\" || g === null) ? g : Object.assign({}, t, g), n.forEach((x) => x(t, b));\n    }\n  }, i = () => t, c = { setState: r, getState: i, getInitialState: () => l, subscribe: (d) => (n.add(d), () => n.delete(d)), destroy: () => {\n    (o_ ? \"production\" : void 0) !== \"production\" && console.warn(\n      \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n    ), n.clear();\n  } }, l = t = e(r, i, c);\n  return c;\n}, a_ = (e) => e ? X0(e) : X0;\nvar W1 = { exports: {} }, Dl = {}, fs = { exports: {} }, Rl = {};\n/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar J0;\nfunction s_() {\n  if (J0) return Rl;\n  J0 = 1;\n  var e = react__WEBPACK_IMPORTED_MODULE_0__;\n  function t(f, g) {\n    return f === g && (f !== 0 || 1 / f === 1 / g) || f !== f && g !== g;\n  }\n  var n = typeof Object.is == \"function\" ? Object.is : t, r = e.useState, i = e.useEffect, o = e.useLayoutEffect, a = e.useDebugValue;\n  function s(f, g) {\n    var b = g(), x = r({ inst: { value: b, getSnapshot: g } }), m = x[0].inst, C = x[1];\n    return o(function() {\n      m.value = b, m.getSnapshot = g, c(m) && C({ inst: m });\n    }, [f, b, g]), i(function() {\n      return c(m) && C({ inst: m }), f(function() {\n        c(m) && C({ inst: m });\n      });\n    }, [f]), a(b), b;\n  }\n  function c(f) {\n    var g = f.getSnapshot;\n    f = f.value;\n    try {\n      var b = g();\n      return !n(f, b);\n    } catch {\n      return !0;\n    }\n  }\n  function l(f, g) {\n    return g();\n  }\n  var d = typeof window > \"u\" || typeof window.document > \"u\" || typeof window.document.createElement > \"u\" ? l : s;\n  return Rl.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : d, Rl;\n}\nvar Pl = {}, Q0;\nfunction c_() {\n  if (Q0) return Pl;\n  Q0 = 1;\n  var e = {};\n  /**\n   * @license React\n   * use-sync-external-store-shim.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  return e.NODE_ENV !== \"production\" && function() {\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < \"u\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == \"function\" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    var t = react__WEBPACK_IMPORTED_MODULE_0__, n = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function r(W) {\n      {\n        for (var U = arguments.length, F = new Array(U > 1 ? U - 1 : 0), j = 1; j < U; j++)\n          F[j - 1] = arguments[j];\n        i(\"error\", W, F);\n      }\n    }\n    function i(W, U, F) {\n      {\n        var j = n.ReactDebugCurrentFrame, K = j.getStackAddendum();\n        K !== \"\" && (U += \"%s\", F = F.concat([K]));\n        var J = F.map(function(X) {\n          return String(X);\n        });\n        J.unshift(\"Warning: \" + U), Function.prototype.apply.call(console[W], console, J);\n      }\n    }\n    function o(W, U) {\n      return W === U && (W !== 0 || 1 / W === 1 / U) || W !== W && U !== U;\n    }\n    var a = typeof Object.is == \"function\" ? Object.is : o, s = t.useState, c = t.useEffect, l = t.useLayoutEffect, d = t.useDebugValue, f = !1, g = !1;\n    function b(W, U, F) {\n      f || t.startTransition !== void 0 && (f = !0, r(\"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"));\n      var j = U();\n      if (!g) {\n        var K = U();\n        a(j, K) || (r(\"The result of getSnapshot should be cached to avoid an infinite loop\"), g = !0);\n      }\n      var J = s({\n        inst: {\n          value: j,\n          getSnapshot: U\n        }\n      }), X = J[0].inst, _ = J[1];\n      return l(function() {\n        X.value = j, X.getSnapshot = U, x(X) && _({\n          inst: X\n        });\n      }, [W, j, U]), c(function() {\n        x(X) && _({\n          inst: X\n        });\n        var u = function() {\n          x(X) && _({\n            inst: X\n          });\n        };\n        return W(u);\n      }, [W]), d(j), j;\n    }\n    function x(W) {\n      var U = W.getSnapshot, F = W.value;\n      try {\n        var j = U();\n        return !a(F, j);\n      } catch {\n        return !0;\n      }\n    }\n    function m(W, U, F) {\n      return U();\n    }\n    var C = typeof window < \"u\" && typeof window.document < \"u\" && typeof window.document.createElement < \"u\", S = !C, T = S ? m : b, N = t.useSyncExternalStore !== void 0 ? t.useSyncExternalStore : T;\n    Pl.useSyncExternalStore = N, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < \"u\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == \"function\" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n  }(), Pl;\n}\nvar eh;\nfunction Y6() {\n  if (eh) return fs.exports;\n  eh = 1;\n  var e = {};\n  return e.NODE_ENV === \"production\" ? fs.exports = s_() : fs.exports = c_(), fs.exports;\n}\n/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar th;\nfunction l_() {\n  if (th) return Dl;\n  th = 1;\n  var e = react__WEBPACK_IMPORTED_MODULE_0__, t = Y6();\n  function n(l, d) {\n    return l === d && (l !== 0 || 1 / l === 1 / d) || l !== l && d !== d;\n  }\n  var r = typeof Object.is == \"function\" ? Object.is : n, i = t.useSyncExternalStore, o = e.useRef, a = e.useEffect, s = e.useMemo, c = e.useDebugValue;\n  return Dl.useSyncExternalStoreWithSelector = function(l, d, f, g, b) {\n    var x = o(null);\n    if (x.current === null) {\n      var m = { hasValue: !1, value: null };\n      x.current = m;\n    } else m = x.current;\n    x = s(function() {\n      function S(F) {\n        if (!T) {\n          if (T = !0, N = F, F = g(F), b !== void 0 && m.hasValue) {\n            var j = m.value;\n            if (b(j, F)) return W = j;\n          }\n          return W = F;\n        }\n        if (j = W, r(N, F)) return j;\n        var K = g(F);\n        return b !== void 0 && b(j, K) ? j : (N = F, W = K);\n      }\n      var T = !1, N, W, U = f === void 0 ? null : f;\n      return [function() {\n        return S(d());\n      }, U === null ? void 0 : function() {\n        return S(U());\n      }];\n    }, [d, f, g, b]);\n    var C = i(l, x[0], x[1]);\n    return a(function() {\n      m.hasValue = !0, m.value = C;\n    }, [C]), c(C), C;\n  }, Dl;\n}\nvar Ol = {}, nh;\nfunction d_() {\n  if (nh) return Ol;\n  nh = 1;\n  var e = {};\n  /**\n   * @license React\n   * use-sync-external-store-shim/with-selector.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  return e.NODE_ENV !== \"production\" && function() {\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < \"u\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == \"function\" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    var t = react__WEBPACK_IMPORTED_MODULE_0__, n = Y6();\n    function r(f, g) {\n      return f === g && (f !== 0 || 1 / f === 1 / g) || f !== f && g !== g;\n    }\n    var i = typeof Object.is == \"function\" ? Object.is : r, o = n.useSyncExternalStore, a = t.useRef, s = t.useEffect, c = t.useMemo, l = t.useDebugValue;\n    function d(f, g, b, x, m) {\n      var C = a(null), S;\n      C.current === null ? (S = {\n        hasValue: !1,\n        value: null\n      }, C.current = S) : S = C.current;\n      var T = c(function() {\n        var F = !1, j, K, J = function(v) {\n          if (!F) {\n            F = !0, j = v;\n            var w = x(v);\n            if (m !== void 0 && S.hasValue) {\n              var y = S.value;\n              if (m(y, w))\n                return K = y, y;\n            }\n            return K = w, w;\n          }\n          var $ = j, A = K;\n          if (i($, v))\n            return A;\n          var H = x(v);\n          return m !== void 0 && m(A, H) ? A : (j = v, K = H, H);\n        }, X = b === void 0 ? null : b, _ = function() {\n          return J(g());\n        }, u = X === null ? void 0 : function() {\n          return J(X());\n        };\n        return [_, u];\n      }, [g, b, x, m]), N = T[0], W = T[1], U = o(f, N, W);\n      return s(function() {\n        S.hasValue = !0, S.value = U;\n      }, [U]), l(U), U;\n    }\n    Ol.useSyncExternalStoreWithSelector = d, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < \"u\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == \"function\" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n  }(), Ol;\n}\nvar f_ = {};\nf_.NODE_ENV === \"production\" ? W1.exports = l_() : W1.exports = d_();\nvar u_ = W1.exports;\nconst h_ = /* @__PURE__ */ Va(u_), X6 = { BASE_URL: \"/\", DEV: !1, MODE: \"production\", PROD: !0, SSR: !1 }, { useDebugValue: p_ } = react__WEBPACK_IMPORTED_MODULE_0__, { useSyncExternalStoreWithSelector: g_ } = h_;\nlet rh = !1;\nconst m_ = (e) => e;\nfunction v_(e, t = m_, n) {\n  (X6 ? \"production\" : void 0) !== \"production\" && n && !rh && (console.warn(\n    \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n  ), rh = !0);\n  const r = g_(\n    e.subscribe,\n    e.getState,\n    e.getServerState || e.getInitialState,\n    t,\n    n\n  );\n  return p_(r), r;\n}\nconst ih = (e) => {\n  (X6 ? \"production\" : void 0) !== \"production\" && typeof e != \"function\" && console.warn(\n    \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n  );\n  const t = typeof e == \"function\" ? a_(e) : e, n = (r, i) => v_(t, r, i);\n  return Object.assign(n, t), n;\n}, Pc = (e) => e ? ih(e) : ih, y_ = { BASE_URL: \"/\", DEV: !1, MODE: \"production\", PROD: !0, SSR: !1 };\nfunction b_(e, t) {\n  let n;\n  try {\n    n = e();\n  } catch {\n    return;\n  }\n  return {\n    getItem: (i) => {\n      var o;\n      const a = (c) => c === null ? null : JSON.parse(c, void 0), s = (o = n.getItem(i)) != null ? o : null;\n      return s instanceof Promise ? s.then(a) : a(s);\n    },\n    setItem: (i, o) => n.setItem(\n      i,\n      JSON.stringify(o, void 0)\n    ),\n    removeItem: (i) => n.removeItem(i)\n  };\n}\nconst Ia = (e) => (t) => {\n  try {\n    const n = e(t);\n    return n instanceof Promise ? n : {\n      then(r) {\n        return Ia(r)(n);\n      },\n      catch(r) {\n        return this;\n      }\n    };\n  } catch (n) {\n    return {\n      then(r) {\n        return this;\n      },\n      catch(r) {\n        return Ia(r)(n);\n      }\n    };\n  }\n}, x_ = (e, t) => (n, r, i) => {\n  let o = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (C) => C,\n    version: 0,\n    merge: (C, S) => ({\n      ...S,\n      ...C\n    }),\n    ...t\n  }, a = !1;\n  const s = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();\n  let l;\n  try {\n    l = o.getStorage();\n  } catch {\n  }\n  if (!l)\n    return e(\n      (...C) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${o.name}', the given storage is currently unavailable.`\n        ), n(...C);\n      },\n      r,\n      i\n    );\n  const d = Ia(o.serialize), f = () => {\n    const C = o.partialize({ ...r() });\n    let S;\n    const T = d({ state: C, version: o.version }).then(\n      (N) => l.setItem(o.name, N)\n    ).catch((N) => {\n      S = N;\n    });\n    if (S)\n      throw S;\n    return T;\n  }, g = i.setState;\n  i.setState = (C, S) => {\n    g(C, S), f();\n  };\n  const b = e(\n    (...C) => {\n      n(...C), f();\n    },\n    r,\n    i\n  );\n  let x;\n  const m = () => {\n    var C;\n    if (!l) return;\n    a = !1, s.forEach((T) => T(r()));\n    const S = ((C = o.onRehydrateStorage) == null ? void 0 : C.call(o, r())) || void 0;\n    return Ia(l.getItem.bind(l))(o.name).then((T) => {\n      if (T)\n        return o.deserialize(T);\n    }).then((T) => {\n      if (T)\n        if (typeof T.version == \"number\" && T.version !== o.version) {\n          if (o.migrate)\n            return o.migrate(\n              T.state,\n              T.version\n            );\n          console.error(\n            \"State loaded from storage couldn't be migrated since no migrate function was provided\"\n          );\n        } else\n          return T.state;\n    }).then((T) => {\n      var N;\n      return x = o.merge(\n        T,\n        (N = r()) != null ? N : b\n      ), n(x, !0), f();\n    }).then(() => {\n      S == null || S(x, void 0), a = !0, c.forEach((T) => T(x));\n    }).catch((T) => {\n      S == null || S(void 0, T);\n    });\n  };\n  return i.persist = {\n    setOptions: (C) => {\n      o = {\n        ...o,\n        ...C\n      }, C.getStorage && (l = C.getStorage());\n    },\n    clearStorage: () => {\n      l == null || l.removeItem(o.name);\n    },\n    getOptions: () => o,\n    rehydrate: () => m(),\n    hasHydrated: () => a,\n    onHydrate: (C) => (s.add(C), () => {\n      s.delete(C);\n    }),\n    onFinishHydration: (C) => (c.add(C), () => {\n      c.delete(C);\n    })\n  }, m(), x || b;\n}, w_ = (e, t) => (n, r, i) => {\n  let o = {\n    storage: b_(() => localStorage),\n    partialize: (m) => m,\n    version: 0,\n    merge: (m, C) => ({\n      ...C,\n      ...m\n    }),\n    ...t\n  }, a = !1;\n  const s = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set();\n  let l = o.storage;\n  if (!l)\n    return e(\n      (...m) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${o.name}', the given storage is currently unavailable.`\n        ), n(...m);\n      },\n      r,\n      i\n    );\n  const d = () => {\n    const m = o.partialize({ ...r() });\n    return l.setItem(o.name, {\n      state: m,\n      version: o.version\n    });\n  }, f = i.setState;\n  i.setState = (m, C) => {\n    f(m, C), d();\n  };\n  const g = e(\n    (...m) => {\n      n(...m), d();\n    },\n    r,\n    i\n  );\n  i.getInitialState = () => g;\n  let b;\n  const x = () => {\n    var m, C;\n    if (!l) return;\n    a = !1, s.forEach((T) => {\n      var N;\n      return T((N = r()) != null ? N : g);\n    });\n    const S = ((C = o.onRehydrateStorage) == null ? void 0 : C.call(o, (m = r()) != null ? m : g)) || void 0;\n    return Ia(l.getItem.bind(l))(o.name).then((T) => {\n      if (T)\n        if (typeof T.version == \"number\" && T.version !== o.version) {\n          if (o.migrate)\n            return [\n              !0,\n              o.migrate(\n                T.state,\n                T.version\n              )\n            ];\n          console.error(\n            \"State loaded from storage couldn't be migrated since no migrate function was provided\"\n          );\n        } else\n          return [!1, T.state];\n      return [!1, void 0];\n    }).then((T) => {\n      var N;\n      const [W, U] = T;\n      if (b = o.merge(\n        U,\n        (N = r()) != null ? N : g\n      ), n(b, !0), W)\n        return d();\n    }).then(() => {\n      S == null || S(b, void 0), b = r(), a = !0, c.forEach((T) => T(b));\n    }).catch((T) => {\n      S == null || S(void 0, T);\n    });\n  };\n  return i.persist = {\n    setOptions: (m) => {\n      o = {\n        ...o,\n        ...m\n      }, m.storage && (l = m.storage);\n    },\n    clearStorage: () => {\n      l == null || l.removeItem(o.name);\n    },\n    getOptions: () => o,\n    rehydrate: () => x(),\n    hasHydrated: () => a,\n    onHydrate: (m) => (s.add(m), () => {\n      s.delete(m);\n    }),\n    onFinishHydration: (m) => (c.add(m), () => {\n      c.delete(m);\n    })\n  }, o.skipHydration || x(), b || g;\n}, $_ = (e, t) => \"getStorage\" in t || \"serialize\" in t || \"deserialize\" in t ? ((y_ ? \"production\" : void 0) !== \"production\" && console.warn(\n  \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n), x_(e, t)) : w_(e, t), C_ = $_;\nclass Hl extends Error {\n  constructor(t = \"UMA Auth is not supported by this wallet\") {\n    super(t), this.name = \"UmaUnsupportedError\";\n  }\n}\nconst S_ = (e) => {\n  const t = e.split(\"@\")[1];\n  return `${t.startsWith(\"localhost:\") || t.includes(\".local:\") ? \"http\" : \"https\"}://${t}`;\n}, cf = async (e) => {\n  try {\n    const t = await fetch(\n      `${S_(e)}/.well-known/uma-configuration`\n    );\n    if (!t.ok)\n      throw new Hl(\"Failed to fetch discovery document\");\n    const n = await t.json();\n    if (!n.authorization_endpoint || !n.token_endpoint)\n      throw new Hl(\n        \"Missing required fields in discovery document\"\n      );\n    return n;\n  } catch (t) {\n    throw console.error(t), new Hl(\"Failed to fetch discovery document\");\n  }\n}, M_ = () => {\n  const [e, t] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), [n, r] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0), { address: i } = vn();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    async function o(s) {\n      r(!0);\n      try {\n        const c = await cf(s);\n        a || t(c);\n      } catch (c) {\n        console.error(c);\n      }\n      r(!1);\n    }\n    let a = !1;\n    return i && jo(i) && o(i), () => {\n      a = !0;\n    };\n  }, [i]), { discoveryDocument: e, isLoading: n };\n}, vn = Pc()(\n  C_(\n    (e, t) => ({\n      setAuthConfig: (n) => e({ authConfig: n }),\n      setToken: (n) => e({\n        token: n\n      }),\n      isConnectionValid: () => {\n        const n = t();\n        return L_(n);\n      },\n      setNwcConnectionUri: (n) => e({ nwcConnectionUri: n }),\n      setAddress: (n) => e({ address: n }),\n      initialOAuthRequest: async (n) => {\n        const r = t(), { codeVerifier: i, authUrl: o, csrfState: a } = await A_(\n          r,\n          n\n        );\n        return o && (e({ codeVerifier: i, csrfState: a, address: n }), window.location.href = o.toString()), { success: !!o };\n      },\n      oAuthTokenExchange: async () => {\n        const n = t(), r = await k_(n);\n        return e(r), r;\n      },\n      hasValidToken: () => {\n        const n = t(), { token: r } = n;\n        return !(!r || r.expiresAt && Date.now() >= r.expiresAt);\n      },\n      clearUserAuth: () => {\n        J6(), e({\n          token: void 0,\n          nwcConnectionUri: void 0,\n          nwcExpiresAt: void 0,\n          codeVerifier: void 0,\n          csrfState: void 0,\n          address: void 0\n        });\n      }\n    }),\n    {\n      name: \"uma-connect\",\n      partialize: (e) => ({\n        nwcConnectionUri: e.nwcConnectionUri,\n        nwcExpiresAt: e.nwcExpiresAt,\n        token: e.token,\n        codeVerifier: e.codeVerifier,\n        csrfState: e.csrfState,\n        address: e.address\n      })\n    }\n  )\n), L_ = (e) => e.nwcConnectionUri ? !e.nwcExpiresAt || Date.now() < e.nwcExpiresAt : !1, A_ = async (e, t) => {\n  var g, b;\n  const { authConfig: n } = e;\n  if (!n)\n    throw new Error(\"Auth config not set.\");\n  let r;\n  try {\n    r = await cf(t);\n  } catch (x) {\n    return console.error(\"Failed to fetch discovery document\", x), { codeVerifier: \"\", authUrl: \"\", csrfState: \"\" };\n  }\n  const i = `${n.identityNpub} ${n.identityRelayUrl}`, o = ((g = n.requiredCommands) == null ? void 0 : g.join(\" \")) || \"\", a = ((b = n.optionalCommands) == null ? void 0 : b.join(\" \")) || \"\";\n  let s = \"\";\n  n.budget && (s = `${n.budget.amountInLowestDenom}.${n.budget.currency}%2F${n.budget.period}`);\n  const c = Mk(), l = await Ak(c), d = Lk(), f = new URL(r.authorization_endpoint);\n  return f.searchParams.set(\"client_id\", i), f.searchParams.set(\"redirect_uri\", n.redirectUri), f.searchParams.set(\"response_type\", \"code\"), f.searchParams.set(\"code_challenge\", l), f.searchParams.set(\"code_challenge_method\", \"S256\"), f.searchParams.set(\"state\", d), f.searchParams.set(\"required_commands\", o), f.searchParams.set(\"optional_commands\", a), f.searchParams.set(\"budget\", s), {\n    codeVerifier: c,\n    authUrl: f,\n    csrfState: d\n  };\n}, k_ = async (e) => {\n  const {\n    codeVerifier: t,\n    token: n,\n    nwcConnectionUri: r,\n    nwcExpiresAt: i,\n    authConfig: o,\n    address: a\n  } = e;\n  if (!o)\n    throw new Error(\"Auth config not set.\");\n  if (!a || !jo(a))\n    throw new Error(\"UMA not set.\");\n  if (r && n && (!n.expiresAt || Date.now() < n.expiresAt))\n    return {\n      codeVerifier: \"\",\n      token: n,\n      nwcConnectionUri: r,\n      nwcExpiresAt: i\n    };\n  const s = await cf(a), c = {\n    issuer: new URL(s.authorization_endpoint).origin,\n    authorization_endpoint: s.authorization_endpoint,\n    token_endpoint: s.token_endpoint,\n    code_challenge_methods_supported: s.code_challenge_methods_supported || [\"S256\"]\n  }, l = {\n    client_id: `${o.identityNpub} ${o.identityRelayUrl}`,\n    token_endpoint_auth_method: \"none\"\n  };\n  let d;\n  if (n != null && n.refreshToken && i && Date.now() < i) {\n    l.token = {\n      access_token: n.accessToken,\n      refresh_token: n.refreshToken,\n      expires_at: n.expiresAt\n    };\n    const f = await zk(\n      c,\n      l,\n      n.refreshToken\n    ), g = await Fk(\n      c,\n      l,\n      f\n    );\n    if (_s(g))\n      throw console.error(\"Error Response\", g), new Error();\n    d = oh(g);\n  } else {\n    if (!t)\n      throw new Error(\n        \"Code verifier not found. Make initial OAuth request first.\"\n      );\n    const f = i_(\n      c,\n      l,\n      new URL(window.location.href),\n      e.csrfState\n    );\n    if (_s(f))\n      throw console.error(\"Error Response\", f), new Error(\"Invalid auth response\");\n    const g = await Kk(\n      c,\n      l,\n      f,\n      o.redirectUri,\n      t\n    ), b = await Xk(\n      c,\n      l,\n      g\n    );\n    if (_s(b))\n      throw console.error(\"Error Response\", b), new Error(\"Failed code exchange\");\n    console.log(\"Access Token Response\", b), d = oh(b);\n  }\n  return J6(), {\n    codeVerifier: \"\",\n    token: {\n      accessToken: d.access_token,\n      refreshToken: d.refresh_token,\n      expiresAt: d.expires_at,\n      commands: d.commands,\n      budget: d.budget\n    },\n    nwcConnectionUri: d.nwc_connection_uri,\n    nwcExpiresAt: d.nwc_expires_at\n  };\n}, oh = (e) => {\n  if (!e.access_token || !e.refresh_token || !e.expires_in || !e.nwc_connection_uri || !e.commands)\n    throw new Error(\"Invalid UMA token\");\n  if (typeof e.nwc_connection_uri != \"string\")\n    throw new Error(\"Invalid NWC connection URI\");\n  const t = [];\n  if (!Array.isArray(e.commands))\n    throw new Error(\"Invalid commands\");\n  for (const i of e.commands) {\n    if (typeof i != \"string\")\n      throw new Error(\"Invalid command\");\n    t.push(i);\n  }\n  if (e.budget != null && typeof e.budget != \"string\")\n    throw new Error(\"Invalid budget\");\n  const n = Date.now() + e.expires_in * 1e3, r = {\n    access_token: e.access_token,\n    refresh_token: e.refresh_token,\n    expires_at: n,\n    nwc_connection_uri: e.nwc_connection_uri,\n    commands: t,\n    budget: e.budget || void 0\n  };\n  return e.nwc_expires_at && typeof e.nwc_expires_at == \"number\" && (r.nwc_expires_at = e.nwc_expires_at * 1e3), r;\n}, J6 = () => {\n  const e = new URL(window.location.href);\n  e.searchParams.delete(\"code\"), e.searchParams.delete(\"state\"), window.history.replaceState({}, document.title, e.toString());\n}, Q6 = Pc((e) => ({\n  setUma: (t) => e({ uma: t })\n})), __ = () => {\n  const { setStep: e } = Kn(), { uma: t, setUma: n } = Q6(), { initialOAuthRequest: r, clearUserAuth: i } = vn(), [o, a] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), [s, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), l = (g) => {\n    c(void 0), n(`$${g}`);\n  }, d = async () => {\n    if (!jo(t)) {\n      c(\"Invalid UMA format.\");\n      return;\n    }\n    const g = t;\n    a(!0);\n    const { success: b } = await r(g);\n    b ? e(kt.WaitingForApproval) : (i(), e(kt.ErrorConnecting)), a(!1);\n  }, f = () => {\n    e(kt.MoreOptions);\n  };\n  return /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ q(E_, { children: [\n      /* @__PURE__ */ p(\n        B6,\n        {\n          icon: {\n            name: \"DollarManropeSmall\",\n            width: 12,\n            side: \"left\",\n            offset: \"large\"\n          },\n          value: (t == null ? void 0 : t.replace(/^\\$/, \"\")) || \"\",\n          onChange: l,\n          borderRadius: \"round\",\n          error: s,\n          typography: {\n            type: \"Body\",\n            size: \"Large\"\n          },\n          activeOutline: !0,\n          activeOutlineColor: \"blue39\",\n          paddingY: 15\n        }\n      ),\n      /* @__PURE__ */ q(T_, { children: [\n        /* @__PURE__ */ p(\n          Dt,\n          {\n            fullWidth: !0,\n            kind: \"primary\",\n            text: \"Connect your UMA\",\n            loading: o,\n            onClick: d\n          }\n        ),\n        /* @__PURE__ */ p(B_, { children: /* @__PURE__ */ p(\n          Dt,\n          {\n            kind: \"transparent\",\n            text: \"More options\",\n            fullWidth: !0,\n            typography: {\n              color: \"secondary\",\n              type: \"Title\"\n            },\n            onClick: f\n          }\n        ) })\n      ] })\n    ] }),\n    /* @__PURE__ */ q(I_, { children: [\n      /* @__PURE__ */ q(D_, { children: [\n        /* @__PURE__ */ p(\n          to,\n          {\n            size: \"Large\",\n            content: \"Don't have an UMA? Get yours today.\"\n          }\n        ),\n        /* @__PURE__ */ p(\n          Ks,\n          {\n            size: \"Large\",\n            content: \"It's like email, but for money.\",\n            color: \"grayBlue43\"\n          }\n        )\n      ] }),\n      /* @__PURE__ */ p(\n        Dt,\n        {\n          text: \"Get UMA\",\n          kind: \"linkLight\",\n          onClick: () => {\n            window.location.href = \"https://www.uma.me/#getuma\";\n          },\n          size: \"Large\",\n          typography: {\n            color: \"link\",\n            type: \"Label Strong\"\n          },\n          paddingY: \"short\"\n        }\n      )\n    ] })\n  ] });\n}, E_ = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 24px 24px 12px 24px;\n  gap: 16px;\n`, T_ = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n  width: 100%;\n`, B_ = G.div`\n  display: flex;\n  flex-direction: column;\n  place-content: center;\n  width: 100%;\n  height: 56px;\n`, I_ = G.div`\n  display: flex;\n  padding: 24px;\n  justify-content: space-between;\n  align-items: center;\n  border-top: 0.5px solid #c0c9d6;\n`, D_ = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`, ah = (e, t) => (e / Math.pow(10, t.decimals)).toFixed(t.decimals), F1 = ({\n  currency: e,\n  amountInLowestDenom: t\n}) => e.symbol === \"\" ? `${ah(t, e)} ${e.code}` : `${e.symbol}${ah(t, e)}`, eg = (e) => {\n  let t = e;\n  if (e.length > 10) {\n    const n = e.slice(0, 5), r = e.slice(-5);\n    t = `${n}...${r}`;\n  }\n  return t;\n}, no = G.div`\n  background: linear-gradient(to right, #f6f7f8 0%, #686a72 50%, #f6f7f8 100%);\n  background-size: 200% 100%;\n  height: ${({ height: e }) => `${e}px`};\n  border-radius: 999px;\n  animation: shimmer 2s linear infinite;\n  width: ${({ width: e }) => e ? `${e}px` : \"100%\"};\n  max-width: 300px;\n  opacity: 0.2;\n\n  @keyframes shimmer {\n    0% {\n      background-position: 100% 0;\n    }\n    100% {\n      background-position: -100% 0;\n    }\n  }\n`, R_ = ({\n  connection: e,\n  address: t,\n  balance: n,\n  isLoading: r\n}) => {\n  const i = () => {\n    navigator.clipboard.writeText(t || \"\");\n  };\n  let o = /* @__PURE__ */ p(xt, {});\n  if (r)\n    o = /* @__PURE__ */ q(xt, { children: [\n      /* @__PURE__ */ p(no, { height: 28, width: 136 }),\n      /* @__PURE__ */ p(no, { height: 20, width: 92 })\n    ] });\n  else {\n    const s = F1(n ? {\n      amountInLowestDenom: n.amountInLowestDenom,\n      currency: n.currency\n    } : {\n      amountInLowestDenom: e.amountInLowestDenom - e.amountInLowestDenomUsed,\n      currency: e.currency\n    }), c = n ? \"Total balance\" : `${e.renewalPeriod === \"never\" ? \"\" : e.renewalPeriod} spending limit remaining`;\n    o = /* @__PURE__ */ q(xt, { children: [\n      /* @__PURE__ */ p(U_, { children: s }),\n      /* @__PURE__ */ p(Ks, { size: \"Large\", content: c, color: \"white\" })\n    ] });\n  }\n  let a = /* @__PURE__ */ p(xt, {});\n  return jo(t) ? a = /* @__PURE__ */ q(ch, { children: [\n    /* @__PURE__ */ p(sh, { children: t }),\n    /* @__PURE__ */ p(vt, { name: \"Uma\", width: 22, color: \"white\" })\n  ] }) : t && (a = /* @__PURE__ */ q(ch, { children: [\n    /* @__PURE__ */ p(vt, { name: \"Zap\", width: 12, color: \"white\" }),\n    /* @__PURE__ */ p(sh, { children: eg(t) })\n  ] })), /* @__PURE__ */ q(P_, { children: [\n    /* @__PURE__ */ q(O_, { children: [\n      a,\n      t && /* @__PURE__ */ p(N_, { onClick: i, children: /* @__PURE__ */ p(\n        vt,\n        {\n          name: \"Copy\",\n          width: 14,\n          color: \"gray50\",\n          iconProps: {\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        }\n      ) })\n    ] }),\n    /* @__PURE__ */ p(H_, { children: o })\n  ] });\n}, P_ = G.div`\n  display: flex;\n  height: 204px;\n  padding: 24px;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 16px;\n  background: linear-gradient(111deg, #0c0d0f 0%, #21283a 100%);\n  box-shadow:\n    0px 0px 0px 1px rgba(0, 0, 0, 0.06),\n    0px 1px 1px -0.5px rgba(0, 0, 0, 0.06),\n    0px 3px 3px -1.5px rgba(0, 0, 0, 0.06),\n    0px 6px 6px -3px rgba(0, 0, 0, 0.06),\n    0px 12px 12px -6px rgba(0, 0, 0, 0.06),\n    0px 24px 24px -12px rgba(0, 0, 0, 0.06);\n`, O_ = G.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border: none;\n`, sh = G.span`\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`, ch = G.div`\n  display: flex;\n  flex-direction: row;\n  gap: 4px;\n  align-items: center;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  padding-right: 4px;\n`, H_ = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`, U_ = G.span`\n  color: #fff;\n  font-family: Manrope;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 32px;\n  letter-spacing: -0.48px;\n`, N_ = G(wr)`\n  width: 28px;\n  height: 28px;\n  padding: 0px;\n  justify-self: flex-end;\n  border-radius: 50%;\n\n  &:hover {\n    background: #00000005;\n  }\n\n  &:active {\n    background: #00000008;\n  }\n`;\nfunction lh(e) {\n  if (!Number.isSafeInteger(e) || e < 0)\n    throw new Error(`Wrong positive integer: ${e}`);\n}\nfunction tg(e, ...t) {\n  if (!(e instanceof Uint8Array))\n    throw new Error(\"Expected Uint8Array\");\n  if (t.length > 0 && !t.includes(e.length))\n    throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`);\n}\nfunction V_(e) {\n  if (typeof e != \"function\" || typeof e.create != \"function\")\n    throw new Error(\"Hash should be wrapped by utils.wrapConstructor\");\n  lh(e.outputLen), lh(e.blockLen);\n}\nfunction Ys(e, t = !0) {\n  if (e.destroyed)\n    throw new Error(\"Hash instance has been destroyed\");\n  if (t && e.finished)\n    throw new Error(\"Hash#digest() has already been called\");\n}\nfunction z_(e, t) {\n  tg(e);\n  const n = t.outputLen;\n  if (e.length < n)\n    throw new Error(`digestInto() expects output buffer of length at least ${n}`);\n}\nconst Ul = typeof globalThis == \"object\" && \"crypto\" in globalThis ? globalThis.crypto : void 0;\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst ng = (e) => e instanceof Uint8Array, Nl = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength), Yn = (e, t) => e << 32 - t | e >>> t, W_ = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;\nif (!W_)\n  throw new Error(\"Non little-endian hardware is not supported\");\nfunction F_(e) {\n  if (typeof e != \"string\")\n    throw new Error(`utf8ToBytes expected string, got ${typeof e}`);\n  return new Uint8Array(new TextEncoder().encode(e));\n}\nfunction lf(e) {\n  if (typeof e == \"string\" && (e = F_(e)), !ng(e))\n    throw new Error(`expected Uint8Array, got ${typeof e}`);\n  return e;\n}\nfunction j_(...e) {\n  const t = new Uint8Array(e.reduce((r, i) => r + i.length, 0));\n  let n = 0;\n  return e.forEach((r) => {\n    if (!ng(r))\n      throw new Error(\"Uint8Array expected\");\n    t.set(r, n), n += r.length;\n  }), t;\n}\nlet rg = class {\n  // Safe version that clones internal state\n  clone() {\n    return this._cloneInto();\n  }\n};\nfunction q_(e) {\n  const t = (r) => e().update(lf(r)).digest(), n = e();\n  return t.outputLen = n.outputLen, t.blockLen = n.blockLen, t.create = () => e(), t;\n}\nfunction ig(e = 32) {\n  if (Ul && typeof Ul.getRandomValues == \"function\")\n    return Ul.getRandomValues(new Uint8Array(e));\n  throw new Error(\"crypto.getRandomValues must be defined\");\n}\nfunction Z_(e, t, n, r) {\n  if (typeof e.setBigUint64 == \"function\")\n    return e.setBigUint64(t, n, r);\n  const i = BigInt(32), o = BigInt(4294967295), a = Number(n >> i & o), s = Number(n & o), c = r ? 4 : 0, l = r ? 0 : 4;\n  e.setUint32(t + c, a, r), e.setUint32(t + l, s, r);\n}\nlet K_ = class extends rg {\n  constructor(t, n, r, i) {\n    super(), this.blockLen = t, this.outputLen = n, this.padOffset = r, this.isLE = i, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(t), this.view = Nl(this.buffer);\n  }\n  update(t) {\n    Ys(this);\n    const { view: n, buffer: r, blockLen: i } = this;\n    t = lf(t);\n    const o = t.length;\n    for (let a = 0; a < o; ) {\n      const s = Math.min(i - this.pos, o - a);\n      if (s === i) {\n        const c = Nl(t);\n        for (; i <= o - a; a += i)\n          this.process(c, a);\n        continue;\n      }\n      r.set(t.subarray(a, a + s), this.pos), this.pos += s, a += s, this.pos === i && (this.process(n, 0), this.pos = 0);\n    }\n    return this.length += t.length, this.roundClean(), this;\n  }\n  digestInto(t) {\n    Ys(this), z_(t, this), this.finished = !0;\n    const { buffer: n, view: r, blockLen: i, isLE: o } = this;\n    let { pos: a } = this;\n    n[a++] = 128, this.buffer.subarray(a).fill(0), this.padOffset > i - a && (this.process(r, 0), a = 0);\n    for (let f = a; f < i; f++)\n      n[f] = 0;\n    Z_(r, i - 8, BigInt(this.length * 8), o), this.process(r, 0);\n    const s = Nl(t), c = this.outputLen;\n    if (c % 4)\n      throw new Error(\"_sha2: outputLen should be aligned to 32bit\");\n    const l = c / 4, d = this.get();\n    if (l > d.length)\n      throw new Error(\"_sha2: outputLen bigger than state\");\n    for (let f = 0; f < l; f++)\n      s.setUint32(4 * f, d[f], o);\n  }\n  digest() {\n    const { buffer: t, outputLen: n } = this;\n    this.digestInto(t);\n    const r = t.slice(0, n);\n    return this.destroy(), r;\n  }\n  _cloneInto(t) {\n    t || (t = new this.constructor()), t.set(...this.get());\n    const { blockLen: n, buffer: r, length: i, finished: o, destroyed: a, pos: s } = this;\n    return t.length = i, t.pos = s, t.finished = o, t.destroyed = a, i % n && t.buffer.set(r), t;\n  }\n};\nconst G_ = (e, t, n) => e & t ^ ~e & n, Y_ = (e, t, n) => e & t ^ e & n ^ t & n, X_ = /* @__PURE__ */ new Uint32Array([\n  1116352408,\n  1899447441,\n  3049323471,\n  3921009573,\n  961987163,\n  1508970993,\n  2453635748,\n  2870763221,\n  3624381080,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  2162078206,\n  2614888103,\n  3248222580,\n  3835390401,\n  4022224774,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  2554220882,\n  2821834349,\n  2952996808,\n  3210313671,\n  3336571891,\n  3584528711,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  2177026350,\n  2456956037,\n  2730485921,\n  2820302411,\n  3259730800,\n  3345764771,\n  3516065817,\n  3600352804,\n  4094571909,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  2227730452,\n  2361852424,\n  2428436474,\n  2756734187,\n  3204031479,\n  3329325298\n]), Zr = /* @__PURE__ */ new Uint32Array([\n  1779033703,\n  3144134277,\n  1013904242,\n  2773480762,\n  1359893119,\n  2600822924,\n  528734635,\n  1541459225\n]), Kr = /* @__PURE__ */ new Uint32Array(64);\nlet J_ = class extends K_ {\n  constructor() {\n    super(64, 32, 8, !1), this.A = Zr[0] | 0, this.B = Zr[1] | 0, this.C = Zr[2] | 0, this.D = Zr[3] | 0, this.E = Zr[4] | 0, this.F = Zr[5] | 0, this.G = Zr[6] | 0, this.H = Zr[7] | 0;\n  }\n  get() {\n    const { A: t, B: n, C: r, D: i, E: o, F: a, G: s, H: c } = this;\n    return [t, n, r, i, o, a, s, c];\n  }\n  // prettier-ignore\n  set(t, n, r, i, o, a, s, c) {\n    this.A = t | 0, this.B = n | 0, this.C = r | 0, this.D = i | 0, this.E = o | 0, this.F = a | 0, this.G = s | 0, this.H = c | 0;\n  }\n  process(t, n) {\n    for (let f = 0; f < 16; f++, n += 4)\n      Kr[f] = t.getUint32(n, !1);\n    for (let f = 16; f < 64; f++) {\n      const g = Kr[f - 15], b = Kr[f - 2], x = Yn(g, 7) ^ Yn(g, 18) ^ g >>> 3, m = Yn(b, 17) ^ Yn(b, 19) ^ b >>> 10;\n      Kr[f] = m + Kr[f - 7] + x + Kr[f - 16] | 0;\n    }\n    let { A: r, B: i, C: o, D: a, E: s, F: c, G: l, H: d } = this;\n    for (let f = 0; f < 64; f++) {\n      const g = Yn(s, 6) ^ Yn(s, 11) ^ Yn(s, 25), b = d + g + G_(s, c, l) + X_[f] + Kr[f] | 0, m = (Yn(r, 2) ^ Yn(r, 13) ^ Yn(r, 22)) + Y_(r, i, o) | 0;\n      d = l, l = c, c = s, s = a + b | 0, a = o, o = i, i = r, r = b + m | 0;\n    }\n    r = r + this.A | 0, i = i + this.B | 0, o = o + this.C | 0, a = a + this.D | 0, s = s + this.E | 0, c = c + this.F | 0, l = l + this.G | 0, d = d + this.H | 0, this.set(r, i, o, a, s, c, l, d);\n  }\n  roundClean() {\n    Kr.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);\n  }\n};\nconst j1 = /* @__PURE__ */ q_(() => new J_());\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst og = BigInt(0), Oc = BigInt(1), Q_ = BigInt(2), Hc = (e) => e instanceof Uint8Array, eE = /* @__PURE__ */ Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, \"0\"));\nfunction Lo(e) {\n  if (!Hc(e))\n    throw new Error(\"Uint8Array expected\");\n  let t = \"\";\n  for (let n = 0; n < e.length; n++)\n    t += eE[e[n]];\n  return t;\n}\nfunction ag(e) {\n  const t = e.toString(16);\n  return t.length & 1 ? `0${t}` : t;\n}\nfunction df(e) {\n  if (typeof e != \"string\")\n    throw new Error(\"hex string expected, got \" + typeof e);\n  return BigInt(e === \"\" ? \"0\" : `0x${e}`);\n}\nfunction Ao(e) {\n  if (typeof e != \"string\")\n    throw new Error(\"hex string expected, got \" + typeof e);\n  const t = e.length;\n  if (t % 2)\n    throw new Error(\"padded hex string expected, got unpadded hex of length \" + t);\n  const n = new Uint8Array(t / 2);\n  for (let r = 0; r < n.length; r++) {\n    const i = r * 2, o = e.slice(i, i + 2), a = Number.parseInt(o, 16);\n    if (Number.isNaN(a) || a < 0)\n      throw new Error(\"Invalid byte sequence\");\n    n[r] = a;\n  }\n  return n;\n}\nfunction un(e) {\n  return df(Lo(e));\n}\nfunction ff(e) {\n  if (!Hc(e))\n    throw new Error(\"Uint8Array expected\");\n  return df(Lo(Uint8Array.from(e).reverse()));\n}\nfunction si(e, t) {\n  return Ao(e.toString(16).padStart(t * 2, \"0\"));\n}\nfunction uf(e, t) {\n  return si(e, t).reverse();\n}\nfunction tE(e) {\n  return Ao(ag(e));\n}\nfunction nn(e, t, n) {\n  let r;\n  if (typeof t == \"string\")\n    try {\n      r = Ao(t);\n    } catch (o) {\n      throw new Error(`${e} must be valid hex string, got \"${t}\". Cause: ${o}`);\n    }\n  else if (Hc(t))\n    r = Uint8Array.from(t);\n  else\n    throw new Error(`${e} must be hex string or Uint8Array`);\n  const i = r.length;\n  if (typeof n == \"number\" && i !== n)\n    throw new Error(`${e} expected ${n} bytes, got ${i}`);\n  return r;\n}\nfunction Ui(...e) {\n  const t = new Uint8Array(e.reduce((r, i) => r + i.length, 0));\n  let n = 0;\n  return e.forEach((r) => {\n    if (!Hc(r))\n      throw new Error(\"Uint8Array expected\");\n    t.set(r, n), n += r.length;\n  }), t;\n}\nfunction nE(e, t) {\n  if (e.length !== t.length)\n    return !1;\n  for (let n = 0; n < e.length; n++)\n    if (e[n] !== t[n])\n      return !1;\n  return !0;\n}\nfunction rE(e) {\n  if (typeof e != \"string\")\n    throw new Error(`utf8ToBytes expected string, got ${typeof e}`);\n  return new Uint8Array(new TextEncoder().encode(e));\n}\nfunction iE(e) {\n  let t;\n  for (t = 0; e > og; e >>= Oc, t += 1)\n    ;\n  return t;\n}\nfunction oE(e, t) {\n  return e >> BigInt(t) & Oc;\n}\nconst aE = (e, t, n) => e | (n ? Oc : og) << BigInt(t), hf = (e) => (Q_ << BigInt(e - 1)) - Oc, Vl = (e) => new Uint8Array(e), dh = (e) => Uint8Array.from(e);\nfunction sg(e, t, n) {\n  if (typeof e != \"number\" || e < 2)\n    throw new Error(\"hashLen must be a number\");\n  if (typeof t != \"number\" || t < 2)\n    throw new Error(\"qByteLen must be a number\");\n  if (typeof n != \"function\")\n    throw new Error(\"hmacFn must be a function\");\n  let r = Vl(e), i = Vl(e), o = 0;\n  const a = () => {\n    r.fill(1), i.fill(0), o = 0;\n  }, s = (...f) => n(i, r, ...f), c = (f = Vl()) => {\n    i = s(dh([0]), f), r = s(), f.length !== 0 && (i = s(dh([1]), f), r = s());\n  }, l = () => {\n    if (o++ >= 1e3)\n      throw new Error(\"drbg: tried 1000 values\");\n    let f = 0;\n    const g = [];\n    for (; f < t; ) {\n      r = s();\n      const b = r.slice();\n      g.push(b), f += r.length;\n    }\n    return Ui(...g);\n  };\n  return (f, g) => {\n    a(), c(f);\n    let b;\n    for (; !(b = g(l())); )\n      c();\n    return a(), b;\n  };\n}\nconst sE = {\n  bigint: (e) => typeof e == \"bigint\",\n  function: (e) => typeof e == \"function\",\n  boolean: (e) => typeof e == \"boolean\",\n  string: (e) => typeof e == \"string\",\n  stringOrUint8Array: (e) => typeof e == \"string\" || e instanceof Uint8Array,\n  isSafeInteger: (e) => Number.isSafeInteger(e),\n  array: (e) => Array.isArray(e),\n  field: (e, t) => t.Fp.isValid(e),\n  hash: (e) => typeof e == \"function\" && Number.isSafeInteger(e.outputLen)\n};\nfunction es(e, t, n = {}) {\n  const r = (i, o, a) => {\n    const s = sE[o];\n    if (typeof s != \"function\")\n      throw new Error(`Invalid validator \"${o}\", expected function`);\n    const c = e[i];\n    if (!(a && c === void 0) && !s(c, e))\n      throw new Error(`Invalid param ${String(i)}=${c} (${typeof c}), expected ${o}`);\n  };\n  for (const [i, o] of Object.entries(t))\n    r(i, o, !1);\n  for (const [i, o] of Object.entries(n))\n    r(i, o, !0);\n  return e;\n}\nconst cE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  bitGet: oE,\n  bitLen: iE,\n  bitMask: hf,\n  bitSet: aE,\n  bytesToHex: Lo,\n  bytesToNumberBE: un,\n  bytesToNumberLE: ff,\n  concatBytes: Ui,\n  createHmacDrbg: sg,\n  ensureBytes: nn,\n  equalBytes: nE,\n  hexToBytes: Ao,\n  hexToNumber: df,\n  numberToBytesBE: si,\n  numberToBytesLE: uf,\n  numberToHexUnpadded: ag,\n  numberToVarBytesBE: tE,\n  utf8ToBytes: rE,\n  validateObject: es\n}, Symbol.toStringTag, { value: \"Module\" }));\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst zt = BigInt(0), It = BigInt(1), Ci = BigInt(2), lE = BigInt(3), q1 = BigInt(4), fh = BigInt(5), uh = BigInt(8);\nBigInt(9);\nBigInt(16);\nfunction Yt(e, t) {\n  const n = e % t;\n  return n >= zt ? n : t + n;\n}\nfunction dE(e, t, n) {\n  if (n <= zt || t < zt)\n    throw new Error(\"Expected power/modulo > 0\");\n  if (n === It)\n    return zt;\n  let r = It;\n  for (; t > zt; )\n    t & It && (r = r * e % n), e = e * e % n, t >>= It;\n  return r;\n}\nfunction _n(e, t, n) {\n  let r = e;\n  for (; t-- > zt; )\n    r *= r, r %= n;\n  return r;\n}\nfunction Z1(e, t) {\n  if (e === zt || t <= zt)\n    throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);\n  let n = Yt(e, t), r = t, i = zt, o = It;\n  for (; n !== zt; ) {\n    const s = r / n, c = r % n, l = i - o * s;\n    r = n, n = c, i = o, o = l;\n  }\n  if (r !== It)\n    throw new Error(\"invert: does not exist\");\n  return Yt(i, t);\n}\nfunction fE(e) {\n  const t = (e - It) / Ci;\n  let n, r, i;\n  for (n = e - It, r = 0; n % Ci === zt; n /= Ci, r++)\n    ;\n  for (i = Ci; i < e && dE(i, t, e) !== e - It; i++)\n    ;\n  if (r === 1) {\n    const a = (e + It) / q1;\n    return function(c, l) {\n      const d = c.pow(l, a);\n      if (!c.eql(c.sqr(d), l))\n        throw new Error(\"Cannot find square root\");\n      return d;\n    };\n  }\n  const o = (n + It) / Ci;\n  return function(s, c) {\n    if (s.pow(c, t) === s.neg(s.ONE))\n      throw new Error(\"Cannot find square root\");\n    let l = r, d = s.pow(s.mul(s.ONE, i), n), f = s.pow(c, o), g = s.pow(c, n);\n    for (; !s.eql(g, s.ONE); ) {\n      if (s.eql(g, s.ZERO))\n        return s.ZERO;\n      let b = 1;\n      for (let m = s.sqr(g); b < l && !s.eql(m, s.ONE); b++)\n        m = s.sqr(m);\n      const x = s.pow(d, It << BigInt(l - b - 1));\n      d = s.sqr(x), f = s.mul(f, x), g = s.mul(g, d), l = b;\n    }\n    return f;\n  };\n}\nfunction uE(e) {\n  if (e % q1 === lE) {\n    const t = (e + It) / q1;\n    return function(r, i) {\n      const o = r.pow(i, t);\n      if (!r.eql(r.sqr(o), i))\n        throw new Error(\"Cannot find square root\");\n      return o;\n    };\n  }\n  if (e % uh === fh) {\n    const t = (e - fh) / uh;\n    return function(r, i) {\n      const o = r.mul(i, Ci), a = r.pow(o, t), s = r.mul(i, a), c = r.mul(r.mul(s, Ci), a), l = r.mul(s, r.sub(c, r.ONE));\n      if (!r.eql(r.sqr(l), i))\n        throw new Error(\"Cannot find square root\");\n      return l;\n    };\n  }\n  return fE(e);\n}\nconst hE = [\n  \"create\",\n  \"isValid\",\n  \"is0\",\n  \"neg\",\n  \"inv\",\n  \"sqrt\",\n  \"sqr\",\n  \"eql\",\n  \"add\",\n  \"sub\",\n  \"mul\",\n  \"pow\",\n  \"div\",\n  \"addN\",\n  \"subN\",\n  \"mulN\",\n  \"sqrN\"\n];\nfunction pE(e) {\n  const t = {\n    ORDER: \"bigint\",\n    MASK: \"bigint\",\n    BYTES: \"isSafeInteger\",\n    BITS: \"isSafeInteger\"\n  }, n = hE.reduce((r, i) => (r[i] = \"function\", r), t);\n  return es(e, n);\n}\nfunction gE(e, t, n) {\n  if (n < zt)\n    throw new Error(\"Expected power > 0\");\n  if (n === zt)\n    return e.ONE;\n  if (n === It)\n    return t;\n  let r = e.ONE, i = t;\n  for (; n > zt; )\n    n & It && (r = e.mul(r, i)), i = e.sqr(i), n >>= It;\n  return r;\n}\nfunction mE(e, t) {\n  const n = new Array(t.length), r = t.reduce((o, a, s) => e.is0(a) ? o : (n[s] = o, e.mul(o, a)), e.ONE), i = e.inv(r);\n  return t.reduceRight((o, a, s) => e.is0(a) ? o : (n[s] = e.mul(o, n[s]), e.mul(o, a)), i), n;\n}\nfunction cg(e, t) {\n  const n = t !== void 0 ? t : e.toString(2).length, r = Math.ceil(n / 8);\n  return { nBitLength: n, nByteLength: r };\n}\nfunction vE(e, t, n = !1, r = {}) {\n  if (e <= zt)\n    throw new Error(`Expected Field ORDER > 0, got ${e}`);\n  const { nBitLength: i, nByteLength: o } = cg(e, t);\n  if (o > 2048)\n    throw new Error(\"Field lengths over 2048 bytes are not supported\");\n  const a = uE(e), s = Object.freeze({\n    ORDER: e,\n    BITS: i,\n    BYTES: o,\n    MASK: hf(i),\n    ZERO: zt,\n    ONE: It,\n    create: (c) => Yt(c, e),\n    isValid: (c) => {\n      if (typeof c != \"bigint\")\n        throw new Error(`Invalid field element: expected bigint, got ${typeof c}`);\n      return zt <= c && c < e;\n    },\n    is0: (c) => c === zt,\n    isOdd: (c) => (c & It) === It,\n    neg: (c) => Yt(-c, e),\n    eql: (c, l) => c === l,\n    sqr: (c) => Yt(c * c, e),\n    add: (c, l) => Yt(c + l, e),\n    sub: (c, l) => Yt(c - l, e),\n    mul: (c, l) => Yt(c * l, e),\n    pow: (c, l) => gE(s, c, l),\n    div: (c, l) => Yt(c * Z1(l, e), e),\n    // Same as above, but doesn't normalize\n    sqrN: (c) => c * c,\n    addN: (c, l) => c + l,\n    subN: (c, l) => c - l,\n    mulN: (c, l) => c * l,\n    inv: (c) => Z1(c, e),\n    sqrt: r.sqrt || ((c) => a(s, c)),\n    invertBatch: (c) => mE(s, c),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (c, l, d) => d ? l : c,\n    toBytes: (c) => n ? uf(c, o) : si(c, o),\n    fromBytes: (c) => {\n      if (c.length !== o)\n        throw new Error(`Fp.fromBytes: expected ${o}, got ${c.length}`);\n      return n ? ff(c) : un(c);\n    }\n  });\n  return Object.freeze(s);\n}\nfunction lg(e) {\n  if (typeof e != \"bigint\")\n    throw new Error(\"field order must be bigint\");\n  const t = e.toString(2).length;\n  return Math.ceil(t / 8);\n}\nfunction dg(e) {\n  const t = lg(e);\n  return t + Math.ceil(t / 2);\n}\nfunction yE(e, t, n = !1) {\n  const r = e.length, i = lg(t), o = dg(t);\n  if (r < 16 || r < o || r > 1024)\n    throw new Error(`expected ${o}-1024 bytes of input, got ${r}`);\n  const a = n ? un(e) : ff(e), s = Yt(a, t - It) + It;\n  return n ? uf(s, i) : si(s, i);\n}\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst bE = BigInt(0), zl = BigInt(1);\nfunction xE(e, t) {\n  const n = (i, o) => {\n    const a = o.negate();\n    return i ? a : o;\n  }, r = (i) => {\n    const o = Math.ceil(t / i) + 1, a = 2 ** (i - 1);\n    return { windows: o, windowSize: a };\n  };\n  return {\n    constTimeNegate: n,\n    // non-const time multiplication ladder\n    unsafeLadder(i, o) {\n      let a = e.ZERO, s = i;\n      for (; o > bE; )\n        o & zl && (a = a.add(s)), s = s.double(), o >>= zl;\n      return a;\n    },\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(i, o) {\n      const { windows: a, windowSize: s } = r(o), c = [];\n      let l = i, d = l;\n      for (let f = 0; f < a; f++) {\n        d = l, c.push(d);\n        for (let g = 1; g < s; g++)\n          d = d.add(l), c.push(d);\n        l = d.double();\n      }\n      return c;\n    },\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(i, o, a) {\n      const { windows: s, windowSize: c } = r(i);\n      let l = e.ZERO, d = e.BASE;\n      const f = BigInt(2 ** i - 1), g = 2 ** i, b = BigInt(i);\n      for (let x = 0; x < s; x++) {\n        const m = x * c;\n        let C = Number(a & f);\n        a >>= b, C > c && (C -= g, a += zl);\n        const S = m, T = m + Math.abs(C) - 1, N = x % 2 !== 0, W = C < 0;\n        C === 0 ? d = d.add(n(N, o[S])) : l = l.add(n(W, o[T]));\n      }\n      return { p: l, f: d };\n    },\n    wNAFCached(i, o, a, s) {\n      const c = i._WINDOW_SIZE || 1;\n      let l = o.get(i);\n      return l || (l = this.precomputeWindow(i, c), c !== 1 && o.set(i, s(l))), this.wNAF(c, l, a);\n    }\n  };\n}\nfunction fg(e) {\n  return pE(e.Fp), es(e, {\n    n: \"bigint\",\n    h: \"bigint\",\n    Gx: \"field\",\n    Gy: \"field\"\n  }, {\n    nBitLength: \"isSafeInteger\",\n    nByteLength: \"isSafeInteger\"\n  }), Object.freeze({\n    ...cg(e.n, e.nBitLength),\n    ...e,\n    p: e.Fp.ORDER\n  });\n}\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction wE(e) {\n  const t = fg(e);\n  es(t, {\n    a: \"field\",\n    b: \"field\"\n  }, {\n    allowedPrivateKeyLengths: \"array\",\n    wrapPrivateKey: \"boolean\",\n    isTorsionFree: \"function\",\n    clearCofactor: \"function\",\n    allowInfinityPoint: \"boolean\",\n    fromBytes: \"function\",\n    toBytes: \"function\"\n  });\n  const { endo: n, Fp: r, a: i } = t;\n  if (n) {\n    if (!r.eql(i, r.ZERO))\n      throw new Error(\"Endomorphism can only be defined for Koblitz curves that have a=0\");\n    if (typeof n != \"object\" || typeof n.beta != \"bigint\" || typeof n.splitScalar != \"function\")\n      throw new Error(\"Expected endomorphism with beta: bigint and splitScalar: function\");\n  }\n  return Object.freeze({ ...t });\n}\nconst { bytesToNumberBE: $E, hexToBytes: CE } = cE, Si = {\n  // asn.1 DER encoding utils\n  Err: class extends Error {\n    constructor(t = \"\") {\n      super(t);\n    }\n  },\n  _parseInt(e) {\n    const { Err: t } = Si;\n    if (e.length < 2 || e[0] !== 2)\n      throw new t(\"Invalid signature integer tag\");\n    const n = e[1], r = e.subarray(2, n + 2);\n    if (!n || r.length !== n)\n      throw new t(\"Invalid signature integer: wrong length\");\n    if (r[0] & 128)\n      throw new t(\"Invalid signature integer: negative\");\n    if (r[0] === 0 && !(r[1] & 128))\n      throw new t(\"Invalid signature integer: unnecessary leading zero\");\n    return { d: $E(r), l: e.subarray(n + 2) };\n  },\n  toSig(e) {\n    const { Err: t } = Si, n = typeof e == \"string\" ? CE(e) : e;\n    if (!(n instanceof Uint8Array))\n      throw new Error(\"ui8a expected\");\n    let r = n.length;\n    if (r < 2 || n[0] != 48)\n      throw new t(\"Invalid signature tag\");\n    if (n[1] !== r - 2)\n      throw new t(\"Invalid signature: incorrect length\");\n    const { d: i, l: o } = Si._parseInt(n.subarray(2)), { d: a, l: s } = Si._parseInt(o);\n    if (s.length)\n      throw new t(\"Invalid signature: left bytes after parsing\");\n    return { r: i, s: a };\n  },\n  hexFromSig(e) {\n    const t = (l) => Number.parseInt(l[0], 16) & 8 ? \"00\" + l : l, n = (l) => {\n      const d = l.toString(16);\n      return d.length & 1 ? `0${d}` : d;\n    }, r = t(n(e.s)), i = t(n(e.r)), o = r.length / 2, a = i.length / 2, s = n(o), c = n(a);\n    return `30${n(a + o + 4)}02${c}${i}02${s}${r}`;\n  }\n}, Ar = BigInt(0), Bn = BigInt(1);\nBigInt(2);\nconst hh = BigInt(3);\nBigInt(4);\nfunction SE(e) {\n  const t = wE(e), { Fp: n } = t, r = t.toBytes || ((x, m, C) => {\n    const S = m.toAffine();\n    return Ui(Uint8Array.from([4]), n.toBytes(S.x), n.toBytes(S.y));\n  }), i = t.fromBytes || ((x) => {\n    const m = x.subarray(1), C = n.fromBytes(m.subarray(0, n.BYTES)), S = n.fromBytes(m.subarray(n.BYTES, 2 * n.BYTES));\n    return { x: C, y: S };\n  });\n  function o(x) {\n    const { a: m, b: C } = t, S = n.sqr(x), T = n.mul(S, x);\n    return n.add(n.add(T, n.mul(x, m)), C);\n  }\n  if (!n.eql(n.sqr(t.Gy), o(t.Gx)))\n    throw new Error(\"bad generator point: equation left != right\");\n  function a(x) {\n    return typeof x == \"bigint\" && Ar < x && x < t.n;\n  }\n  function s(x) {\n    if (!a(x))\n      throw new Error(\"Expected valid bigint: 0 < bigint < curve.n\");\n  }\n  function c(x) {\n    const { allowedPrivateKeyLengths: m, nByteLength: C, wrapPrivateKey: S, n: T } = t;\n    if (m && typeof x != \"bigint\") {\n      if (x instanceof Uint8Array && (x = Lo(x)), typeof x != \"string\" || !m.includes(x.length))\n        throw new Error(\"Invalid key\");\n      x = x.padStart(C * 2, \"0\");\n    }\n    let N;\n    try {\n      N = typeof x == \"bigint\" ? x : un(nn(\"private key\", x, C));\n    } catch {\n      throw new Error(`private key must be ${C} bytes, hex or bigint, not ${typeof x}`);\n    }\n    return S && (N = Yt(N, T)), s(N), N;\n  }\n  const l = /* @__PURE__ */ new Map();\n  function d(x) {\n    if (!(x instanceof f))\n      throw new Error(\"ProjectivePoint expected\");\n  }\n  class f {\n    constructor(m, C, S) {\n      if (this.px = m, this.py = C, this.pz = S, m == null || !n.isValid(m))\n        throw new Error(\"x required\");\n      if (C == null || !n.isValid(C))\n        throw new Error(\"y required\");\n      if (S == null || !n.isValid(S))\n        throw new Error(\"z required\");\n    }\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(m) {\n      const { x: C, y: S } = m || {};\n      if (!m || !n.isValid(C) || !n.isValid(S))\n        throw new Error(\"invalid affine point\");\n      if (m instanceof f)\n        throw new Error(\"projective point not allowed\");\n      const T = (N) => n.eql(N, n.ZERO);\n      return T(C) && T(S) ? f.ZERO : new f(C, S, n.ONE);\n    }\n    get x() {\n      return this.toAffine().x;\n    }\n    get y() {\n      return this.toAffine().y;\n    }\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(m) {\n      const C = n.invertBatch(m.map((S) => S.pz));\n      return m.map((S, T) => S.toAffine(C[T])).map(f.fromAffine);\n    }\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(m) {\n      const C = f.fromAffine(i(nn(\"pointHex\", m)));\n      return C.assertValidity(), C;\n    }\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(m) {\n      return f.BASE.multiply(c(m));\n    }\n    // \"Private method\", don't use it directly\n    _setWindowSize(m) {\n      this._WINDOW_SIZE = m, l.delete(this);\n    }\n    // A point on curve is valid if it conforms to equation.\n    assertValidity() {\n      if (this.is0()) {\n        if (t.allowInfinityPoint && !n.is0(this.py))\n          return;\n        throw new Error(\"bad point: ZERO\");\n      }\n      const { x: m, y: C } = this.toAffine();\n      if (!n.isValid(m) || !n.isValid(C))\n        throw new Error(\"bad point: x or y not FE\");\n      const S = n.sqr(C), T = o(m);\n      if (!n.eql(S, T))\n        throw new Error(\"bad point: equation left != right\");\n      if (!this.isTorsionFree())\n        throw new Error(\"bad point: not in prime-order subgroup\");\n    }\n    hasEvenY() {\n      const { y: m } = this.toAffine();\n      if (n.isOdd)\n        return !n.isOdd(m);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n    /**\n     * Compare one point to another.\n     */\n    equals(m) {\n      d(m);\n      const { px: C, py: S, pz: T } = this, { px: N, py: W, pz: U } = m, F = n.eql(n.mul(C, U), n.mul(N, T)), j = n.eql(n.mul(S, U), n.mul(W, T));\n      return F && j;\n    }\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate() {\n      return new f(this.px, n.neg(this.py), this.pz);\n    }\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a: m, b: C } = t, S = n.mul(C, hh), { px: T, py: N, pz: W } = this;\n      let U = n.ZERO, F = n.ZERO, j = n.ZERO, K = n.mul(T, T), J = n.mul(N, N), X = n.mul(W, W), _ = n.mul(T, N);\n      return _ = n.add(_, _), j = n.mul(T, W), j = n.add(j, j), U = n.mul(m, j), F = n.mul(S, X), F = n.add(U, F), U = n.sub(J, F), F = n.add(J, F), F = n.mul(U, F), U = n.mul(_, U), j = n.mul(S, j), X = n.mul(m, X), _ = n.sub(K, X), _ = n.mul(m, _), _ = n.add(_, j), j = n.add(K, K), K = n.add(j, K), K = n.add(K, X), K = n.mul(K, _), F = n.add(F, K), X = n.mul(N, W), X = n.add(X, X), K = n.mul(X, _), U = n.sub(U, K), j = n.mul(X, J), j = n.add(j, j), j = n.add(j, j), new f(U, F, j);\n    }\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(m) {\n      d(m);\n      const { px: C, py: S, pz: T } = this, { px: N, py: W, pz: U } = m;\n      let F = n.ZERO, j = n.ZERO, K = n.ZERO;\n      const J = t.a, X = n.mul(t.b, hh);\n      let _ = n.mul(C, N), u = n.mul(S, W), v = n.mul(T, U), w = n.add(C, S), y = n.add(N, W);\n      w = n.mul(w, y), y = n.add(_, u), w = n.sub(w, y), y = n.add(C, T);\n      let $ = n.add(N, U);\n      return y = n.mul(y, $), $ = n.add(_, v), y = n.sub(y, $), $ = n.add(S, T), F = n.add(W, U), $ = n.mul($, F), F = n.add(u, v), $ = n.sub($, F), K = n.mul(J, y), F = n.mul(X, v), K = n.add(F, K), F = n.sub(u, K), K = n.add(u, K), j = n.mul(F, K), u = n.add(_, _), u = n.add(u, _), v = n.mul(J, v), y = n.mul(X, y), u = n.add(u, v), v = n.sub(_, v), v = n.mul(J, v), y = n.add(y, v), _ = n.mul(u, y), j = n.add(j, _), _ = n.mul($, y), F = n.mul(w, F), F = n.sub(F, _), _ = n.mul(w, u), K = n.mul($, K), K = n.add(K, _), new f(F, j, K);\n    }\n    subtract(m) {\n      return this.add(m.negate());\n    }\n    is0() {\n      return this.equals(f.ZERO);\n    }\n    wNAF(m) {\n      return b.wNAFCached(this, l, m, (C) => {\n        const S = n.invertBatch(C.map((T) => T.pz));\n        return C.map((T, N) => T.toAffine(S[N])).map(f.fromAffine);\n      });\n    }\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(m) {\n      const C = f.ZERO;\n      if (m === Ar)\n        return C;\n      if (s(m), m === Bn)\n        return this;\n      const { endo: S } = t;\n      if (!S)\n        return b.unsafeLadder(this, m);\n      let { k1neg: T, k1: N, k2neg: W, k2: U } = S.splitScalar(m), F = C, j = C, K = this;\n      for (; N > Ar || U > Ar; )\n        N & Bn && (F = F.add(K)), U & Bn && (j = j.add(K)), K = K.double(), N >>= Bn, U >>= Bn;\n      return T && (F = F.negate()), W && (j = j.negate()), j = new f(n.mul(j.px, S.beta), j.py, j.pz), F.add(j);\n    }\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(m) {\n      s(m);\n      let C = m, S, T;\n      const { endo: N } = t;\n      if (N) {\n        const { k1neg: W, k1: U, k2neg: F, k2: j } = N.splitScalar(C);\n        let { p: K, f: J } = this.wNAF(U), { p: X, f: _ } = this.wNAF(j);\n        K = b.constTimeNegate(W, K), X = b.constTimeNegate(F, X), X = new f(n.mul(X.px, N.beta), X.py, X.pz), S = K.add(X), T = J.add(_);\n      } else {\n        const { p: W, f: U } = this.wNAF(C);\n        S = W, T = U;\n      }\n      return f.normalizeZ([S, T])[0];\n    }\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(m, C, S) {\n      const T = f.BASE, N = (U, F) => F === Ar || F === Bn || !U.equals(T) ? U.multiplyUnsafe(F) : U.multiply(F), W = N(this, C).add(N(m, S));\n      return W.is0() ? void 0 : W;\n    }\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(m) {\n      const { px: C, py: S, pz: T } = this, N = this.is0();\n      m == null && (m = N ? n.ONE : n.inv(T));\n      const W = n.mul(C, m), U = n.mul(S, m), F = n.mul(T, m);\n      if (N)\n        return { x: n.ZERO, y: n.ZERO };\n      if (!n.eql(F, n.ONE))\n        throw new Error(\"invZ was invalid\");\n      return { x: W, y: U };\n    }\n    isTorsionFree() {\n      const { h: m, isTorsionFree: C } = t;\n      if (m === Bn)\n        return !0;\n      if (C)\n        return C(f, this);\n      throw new Error(\"isTorsionFree() has not been declared for the elliptic curve\");\n    }\n    clearCofactor() {\n      const { h: m, clearCofactor: C } = t;\n      return m === Bn ? this : C ? C(f, this) : this.multiplyUnsafe(t.h);\n    }\n    toRawBytes(m = !0) {\n      return this.assertValidity(), r(f, this, m);\n    }\n    toHex(m = !0) {\n      return Lo(this.toRawBytes(m));\n    }\n  }\n  f.BASE = new f(t.Gx, t.Gy, n.ONE), f.ZERO = new f(n.ZERO, n.ONE, n.ZERO);\n  const g = t.nBitLength, b = xE(f, t.endo ? Math.ceil(g / 2) : g);\n  return {\n    CURVE: t,\n    ProjectivePoint: f,\n    normPrivateKeyToScalar: c,\n    weierstrassEquation: o,\n    isWithinCurveOrder: a\n  };\n}\nfunction ME(e) {\n  const t = fg(e);\n  return es(t, {\n    hash: \"hash\",\n    hmac: \"function\",\n    randomBytes: \"function\"\n  }, {\n    bits2int: \"function\",\n    bits2int_modN: \"function\",\n    lowS: \"boolean\"\n  }), Object.freeze({ lowS: !0, ...t });\n}\nfunction LE(e) {\n  const t = ME(e), { Fp: n, n: r } = t, i = n.BYTES + 1, o = 2 * n.BYTES + 1;\n  function a(y) {\n    return Ar < y && y < n.ORDER;\n  }\n  function s(y) {\n    return Yt(y, r);\n  }\n  function c(y) {\n    return Z1(y, r);\n  }\n  const { ProjectivePoint: l, normPrivateKeyToScalar: d, weierstrassEquation: f, isWithinCurveOrder: g } = SE({\n    ...t,\n    toBytes(y, $, A) {\n      const H = $.toAffine(), M = n.toBytes(H.x), h = Ui;\n      return A ? h(Uint8Array.from([$.hasEvenY() ? 2 : 3]), M) : h(Uint8Array.from([4]), M, n.toBytes(H.y));\n    },\n    fromBytes(y) {\n      const $ = y.length, A = y[0], H = y.subarray(1);\n      if ($ === i && (A === 2 || A === 3)) {\n        const M = un(H);\n        if (!a(M))\n          throw new Error(\"Point is not on curve\");\n        const h = f(M);\n        let L = n.sqrt(h);\n        const Y = (L & Bn) === Bn;\n        return (A & 1) === 1 !== Y && (L = n.neg(L)), { x: M, y: L };\n      } else if ($ === o && A === 4) {\n        const M = n.fromBytes(H.subarray(0, n.BYTES)), h = n.fromBytes(H.subarray(n.BYTES, 2 * n.BYTES));\n        return { x: M, y: h };\n      } else\n        throw new Error(`Point of length ${$} was invalid. Expected ${i} compressed bytes or ${o} uncompressed bytes`);\n    }\n  }), b = (y) => Lo(si(y, t.nByteLength));\n  function x(y) {\n    const $ = r >> Bn;\n    return y > $;\n  }\n  function m(y) {\n    return x(y) ? s(-y) : y;\n  }\n  const C = (y, $, A) => un(y.slice($, A));\n  class S {\n    constructor($, A, H) {\n      this.r = $, this.s = A, this.recovery = H, this.assertValidity();\n    }\n    // pair (bytes of r, bytes of s)\n    static fromCompact($) {\n      const A = t.nByteLength;\n      return $ = nn(\"compactSignature\", $, A * 2), new S(C($, 0, A), C($, A, 2 * A));\n    }\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER($) {\n      const { r: A, s: H } = Si.toSig(nn(\"DER\", $));\n      return new S(A, H);\n    }\n    assertValidity() {\n      if (!g(this.r))\n        throw new Error(\"r must be 0 < r < CURVE.n\");\n      if (!g(this.s))\n        throw new Error(\"s must be 0 < s < CURVE.n\");\n    }\n    addRecoveryBit($) {\n      return new S(this.r, this.s, $);\n    }\n    recoverPublicKey($) {\n      const { r: A, s: H, recovery: M } = this, h = j(nn(\"msgHash\", $));\n      if (M == null || ![0, 1, 2, 3].includes(M))\n        throw new Error(\"recovery id invalid\");\n      const L = M === 2 || M === 3 ? A + t.n : A;\n      if (L >= n.ORDER)\n        throw new Error(\"recovery id 2 or 3 invalid\");\n      const Y = M & 1 ? \"03\" : \"02\", ne = l.fromHex(Y + b(L)), ie = c(L), se = s(-h * ie), ye = s(H * ie), ge = l.BASE.multiplyAndAddUnsafe(ne, se, ye);\n      if (!ge)\n        throw new Error(\"point at infinify\");\n      return ge.assertValidity(), ge;\n    }\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS() {\n      return x(this.s);\n    }\n    normalizeS() {\n      return this.hasHighS() ? new S(this.r, s(-this.s), this.recovery) : this;\n    }\n    // DER-encoded\n    toDERRawBytes() {\n      return Ao(this.toDERHex());\n    }\n    toDERHex() {\n      return Si.hexFromSig({ r: this.r, s: this.s });\n    }\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return Ao(this.toCompactHex());\n    }\n    toCompactHex() {\n      return b(this.r) + b(this.s);\n    }\n  }\n  const T = {\n    isValidPrivateKey(y) {\n      try {\n        return d(y), !0;\n      } catch {\n        return !1;\n      }\n    },\n    normPrivateKeyToScalar: d,\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: () => {\n      const y = dg(t.n);\n      return yE(t.randomBytes(y), t.n);\n    },\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(y = 8, $ = l.BASE) {\n      return $._setWindowSize(y), $.multiply(BigInt(3)), $;\n    }\n  };\n  function N(y, $ = !0) {\n    return l.fromPrivateKey(y).toRawBytes($);\n  }\n  function W(y) {\n    const $ = y instanceof Uint8Array, A = typeof y == \"string\", H = ($ || A) && y.length;\n    return $ ? H === i || H === o : A ? H === 2 * i || H === 2 * o : y instanceof l;\n  }\n  function U(y, $, A = !0) {\n    if (W(y))\n      throw new Error(\"first arg must be private key\");\n    if (!W($))\n      throw new Error(\"second arg must be public key\");\n    return l.fromHex($).multiply(d(y)).toRawBytes(A);\n  }\n  const F = t.bits2int || function(y) {\n    const $ = un(y), A = y.length * 8 - t.nBitLength;\n    return A > 0 ? $ >> BigInt(A) : $;\n  }, j = t.bits2int_modN || function(y) {\n    return s(F(y));\n  }, K = hf(t.nBitLength);\n  function J(y) {\n    if (typeof y != \"bigint\")\n      throw new Error(\"bigint expected\");\n    if (!(Ar <= y && y < K))\n      throw new Error(`bigint expected < 2^${t.nBitLength}`);\n    return si(y, t.nByteLength);\n  }\n  function X(y, $, A = _) {\n    if ([\"recovered\", \"canonical\"].some((me) => me in A))\n      throw new Error(\"sign() legacy options not supported\");\n    const { hash: H, randomBytes: M } = t;\n    let { lowS: h, prehash: L, extraEntropy: Y } = A;\n    h == null && (h = !0), y = nn(\"msgHash\", y), L && (y = nn(\"prehashed msgHash\", H(y)));\n    const ne = j(y), ie = d($), se = [J(ie), J(ne)];\n    if (Y != null) {\n      const me = Y === !0 ? M(n.BYTES) : Y;\n      se.push(nn(\"extraEntropy\", me));\n    }\n    const ye = Ui(...se), ge = ne;\n    function _e(me) {\n      const de = F(me);\n      if (!g(de))\n        return;\n      const Ge = c(de), Me = l.BASE.multiply(de).toAffine(), te = s(Me.x);\n      if (te === Ar)\n        return;\n      const Lt = s(Ge * s(ge + te * ie));\n      if (Lt === Ar)\n        return;\n      let Se = (Me.x === te ? 0 : 2) | Number(Me.y & Bn), De = Lt;\n      return h && x(Lt) && (De = m(Lt), Se ^= 1), new S(te, De, Se);\n    }\n    return { seed: ye, k2sig: _e };\n  }\n  const _ = { lowS: t.lowS, prehash: !1 }, u = { lowS: t.lowS, prehash: !1 };\n  function v(y, $, A = _) {\n    const { seed: H, k2sig: M } = X(y, $, A), h = t;\n    return sg(h.hash.outputLen, h.nByteLength, h.hmac)(H, M);\n  }\n  l.BASE._setWindowSize(8);\n  function w(y, $, A, H = u) {\n    var Me;\n    const M = y;\n    if ($ = nn(\"msgHash\", $), A = nn(\"publicKey\", A), \"strict\" in H)\n      throw new Error(\"options.strict was renamed to lowS\");\n    const { lowS: h, prehash: L } = H;\n    let Y, ne;\n    try {\n      if (typeof M == \"string\" || M instanceof Uint8Array)\n        try {\n          Y = S.fromDER(M);\n        } catch (te) {\n          if (!(te instanceof Si.Err))\n            throw te;\n          Y = S.fromCompact(M);\n        }\n      else if (typeof M == \"object\" && typeof M.r == \"bigint\" && typeof M.s == \"bigint\") {\n        const { r: te, s: Lt } = M;\n        Y = new S(te, Lt);\n      } else\n        throw new Error(\"PARSE\");\n      ne = l.fromHex(A);\n    } catch (te) {\n      if (te.message === \"PARSE\")\n        throw new Error(\"signature must be Signature instance, Uint8Array or hex string\");\n      return !1;\n    }\n    if (h && Y.hasHighS())\n      return !1;\n    L && ($ = t.hash($));\n    const { r: ie, s: se } = Y, ye = j($), ge = c(se), _e = s(ye * ge), me = s(ie * ge), de = (Me = l.BASE.multiplyAndAddUnsafe(ne, _e, me)) == null ? void 0 : Me.toAffine();\n    return de ? s(de.x) === ie : !1;\n  }\n  return {\n    CURVE: t,\n    getPublicKey: N,\n    getSharedSecret: U,\n    sign: v,\n    verify: w,\n    ProjectivePoint: l,\n    Signature: S,\n    utils: T\n  };\n}\nlet ug = class extends rg {\n  constructor(t, n) {\n    super(), this.finished = !1, this.destroyed = !1, V_(t);\n    const r = lf(n);\n    if (this.iHash = t.create(), typeof this.iHash.update != \"function\")\n      throw new Error(\"Expected instance of class which extends utils.Hash\");\n    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;\n    const i = this.blockLen, o = new Uint8Array(i);\n    o.set(r.length > i ? t.create().update(r).digest() : r);\n    for (let a = 0; a < o.length; a++)\n      o[a] ^= 54;\n    this.iHash.update(o), this.oHash = t.create();\n    for (let a = 0; a < o.length; a++)\n      o[a] ^= 106;\n    this.oHash.update(o), o.fill(0);\n  }\n  update(t) {\n    return Ys(this), this.iHash.update(t), this;\n  }\n  digestInto(t) {\n    Ys(this), tg(t, this.outputLen), this.finished = !0, this.iHash.digestInto(t), this.oHash.update(t), this.oHash.digestInto(t), this.destroy();\n  }\n  digest() {\n    const t = new Uint8Array(this.oHash.outputLen);\n    return this.digestInto(t), t;\n  }\n  _cloneInto(t) {\n    t || (t = Object.create(Object.getPrototypeOf(this), {}));\n    const { oHash: n, iHash: r, finished: i, destroyed: o, blockLen: a, outputLen: s } = this;\n    return t = t, t.finished = i, t.destroyed = o, t.blockLen = a, t.outputLen = s, t.oHash = n._cloneInto(t.oHash), t.iHash = r._cloneInto(t.iHash), t;\n  }\n  destroy() {\n    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy();\n  }\n};\nconst hg = (e, t, n) => new ug(e, t).update(n).digest();\nhg.create = (e, t) => new ug(e, t);\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction AE(e) {\n  return {\n    hash: e,\n    hmac: (t, ...n) => hg(e, t, j_(...n)),\n    randomBytes: ig\n  };\n}\nfunction kE(e, t) {\n  const n = (r) => LE({ ...e, ...AE(r) });\n  return Object.freeze({ ...n(t), create: n });\n}\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst Uc = BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\"), Xs = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"), pg = BigInt(1), Js = BigInt(2), ph = (e, t) => (e + t / Js) / t;\nfunction gg(e) {\n  const t = Uc, n = BigInt(3), r = BigInt(6), i = BigInt(11), o = BigInt(22), a = BigInt(23), s = BigInt(44), c = BigInt(88), l = e * e * e % t, d = l * l * e % t, f = _n(d, n, t) * d % t, g = _n(f, n, t) * d % t, b = _n(g, Js, t) * l % t, x = _n(b, i, t) * b % t, m = _n(x, o, t) * x % t, C = _n(m, s, t) * m % t, S = _n(C, c, t) * C % t, T = _n(S, s, t) * m % t, N = _n(T, n, t) * d % t, W = _n(N, a, t) * x % t, U = _n(W, r, t) * l % t, F = _n(U, Js, t);\n  if (!K1.eql(K1.sqr(F), e))\n    throw new Error(\"Cannot find square root\");\n  return F;\n}\nconst K1 = vE(Uc, void 0, void 0, { sqrt: gg }), qo = kE({\n  a: BigInt(0),\n  b: BigInt(7),\n  Fp: K1,\n  n: Xs,\n  // Base point (x, y) aka generator point\n  Gx: BigInt(\"55066263022277343669578718895168534326250603453777594175500187360389116729240\"),\n  Gy: BigInt(\"32670510020758816978083085130507043184471273380659243275938904335757337482424\"),\n  h: BigInt(1),\n  lowS: !0,\n  /**\n   * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n   * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n   * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n   * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n   */\n  endo: {\n    beta: BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\"),\n    splitScalar: (e) => {\n      const t = Xs, n = BigInt(\"0x3086d221a7d46bcde86c90e49284eb15\"), r = -pg * BigInt(\"0xe4437ed6010e88286f547fa90abfe4c3\"), i = BigInt(\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\"), o = n, a = BigInt(\"0x100000000000000000000000000000000\"), s = ph(o * e, t), c = ph(-r * e, t);\n      let l = Yt(e - s * n - c * i, t), d = Yt(-s * r - c * o, t);\n      const f = l > a, g = d > a;\n      if (f && (l = t - l), g && (d = t - d), l > a || d > a)\n        throw new Error(\"splitScalar: Endomorphism failed, k=\" + e);\n      return { k1neg: f, k1: l, k2neg: g, k2: d };\n    }\n  }\n}, j1), Nc = BigInt(0), mg = (e) => typeof e == \"bigint\" && Nc < e && e < Uc, _E = (e) => typeof e == \"bigint\" && Nc < e && e < Xs, gh = {};\nfunction Qs(e, ...t) {\n  let n = gh[e];\n  if (n === void 0) {\n    const r = j1(Uint8Array.from(e, (i) => i.charCodeAt(0)));\n    n = Ui(r, r), gh[e] = n;\n  }\n  return j1(Ui(n, ...t));\n}\nconst pf = (e) => e.toRawBytes(!0).slice(1), G1 = (e) => si(e, 32), Wl = (e) => Yt(e, Uc), Da = (e) => Yt(e, Xs), gf = qo.ProjectivePoint, EE = (e, t, n) => gf.BASE.multiplyAndAddUnsafe(e, t, n);\nfunction Y1(e) {\n  let t = qo.utils.normPrivateKeyToScalar(e), n = gf.fromPrivateKey(t);\n  return { scalar: n.hasEvenY() ? t : Da(-t), bytes: pf(n) };\n}\nfunction vg(e) {\n  if (!mg(e))\n    throw new Error(\"bad x: need 0 < x < p\");\n  const t = Wl(e * e), n = Wl(t * e + BigInt(7));\n  let r = gg(n);\n  r % Js !== Nc && (r = Wl(-r));\n  const i = new gf(e, r, pg);\n  return i.assertValidity(), i;\n}\nfunction yg(...e) {\n  return Da(un(Qs(\"BIP0340/challenge\", ...e)));\n}\nfunction TE(e) {\n  return Y1(e).bytes;\n}\nfunction BE(e, t, n = ig(32)) {\n  const r = nn(\"message\", e), { bytes: i, scalar: o } = Y1(t), a = nn(\"auxRand\", n, 32), s = G1(o ^ un(Qs(\"BIP0340/aux\", a))), c = Qs(\"BIP0340/nonce\", s, i, r), l = Da(un(c));\n  if (l === Nc)\n    throw new Error(\"sign failed: k is zero\");\n  const { bytes: d, scalar: f } = Y1(l), g = yg(d, i, r), b = new Uint8Array(64);\n  if (b.set(d, 0), b.set(G1(Da(f + g * o)), 32), !bg(b, r, i))\n    throw new Error(\"sign: Invalid signature produced\");\n  return b;\n}\nfunction bg(e, t, n) {\n  const r = nn(\"signature\", e, 64), i = nn(\"message\", t), o = nn(\"publicKey\", n, 32);\n  try {\n    const a = vg(un(o)), s = un(r.subarray(0, 32));\n    if (!mg(s))\n      return !1;\n    const c = un(r.subarray(32, 64));\n    if (!_E(c))\n      return !1;\n    const l = yg(G1(s), pf(a), i), d = EE(a, c, Da(-l));\n    return !(!d || !d.hasEvenY() || d.toAffine().x !== s);\n  } catch {\n    return !1;\n  }\n}\nconst ca = {\n  getPublicKey: TE,\n  sign: BE,\n  verify: bg,\n  utils: {\n    randomPrivateKey: qo.utils.randomPrivateKey,\n    lift_x: vg,\n    pointToBytes: pf,\n    numberToBytesBE: si,\n    bytesToNumberBE: un,\n    taggedHash: Qs,\n    mod: Yt\n  }\n}, Fl = typeof globalThis == \"object\" && \"crypto\" in globalThis ? globalThis.crypto : void 0;\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst mf = (e) => e instanceof Uint8Array, jl = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength), Xn = (e, t) => e << 32 - t | e >>> t, IE = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;\nif (!IE)\n  throw new Error(\"Non little-endian hardware is not supported\");\nconst DE = Array.from({ length: 256 }, (e, t) => t.toString(16).padStart(2, \"0\"));\nfunction dn(e) {\n  if (!mf(e))\n    throw new Error(\"Uint8Array expected\");\n  let t = \"\";\n  for (let n = 0; n < e.length; n++)\n    t += DE[e[n]];\n  return t;\n}\nfunction ko(e) {\n  if (typeof e != \"string\")\n    throw new Error(\"hex string expected, got \" + typeof e);\n  const t = e.length;\n  if (t % 2)\n    throw new Error(\"padded hex string expected, got unpadded hex of length \" + t);\n  const n = new Uint8Array(t / 2);\n  for (let r = 0; r < n.length; r++) {\n    const i = r * 2, o = e.slice(i, i + 2), a = Number.parseInt(o, 16);\n    if (Number.isNaN(a) || a < 0)\n      throw new Error(\"Invalid byte sequence\");\n    n[r] = a;\n  }\n  return n;\n}\nfunction RE(e) {\n  if (typeof e != \"string\")\n    throw new Error(`utf8ToBytes expected string, got ${typeof e}`);\n  return new Uint8Array(new TextEncoder().encode(e));\n}\nfunction Ra(e) {\n  if (typeof e == \"string\" && (e = RE(e)), !mf(e))\n    throw new Error(`expected Uint8Array, got ${typeof e}`);\n  return e;\n}\nfunction Vc(...e) {\n  const t = new Uint8Array(e.reduce((r, i) => r + i.length, 0));\n  let n = 0;\n  return e.forEach((r) => {\n    if (!mf(r))\n      throw new Error(\"Uint8Array expected\");\n    t.set(r, n), n += r.length;\n  }), t;\n}\nclass xg {\n  // Safe version that clones internal state\n  clone() {\n    return this._cloneInto();\n  }\n}\nfunction wg(e) {\n  const t = (r) => e().update(Ra(r)).digest(), n = e();\n  return t.outputLen = n.outputLen, t.blockLen = n.blockLen, t.create = () => e(), t;\n}\nfunction $g(e = 32) {\n  if (Fl && typeof Fl.getRandomValues == \"function\")\n    return Fl.getRandomValues(new Uint8Array(e));\n  throw new Error(\"crypto.getRandomValues must be defined\");\n}\nfunction X1(e) {\n  if (!Number.isSafeInteger(e) || e < 0)\n    throw new Error(`Wrong positive integer: ${e}`);\n}\nfunction PE(e) {\n  if (typeof e != \"boolean\")\n    throw new Error(`Expected boolean, not ${e}`);\n}\nfunction Cg(e, ...t) {\n  if (!(e instanceof Uint8Array))\n    throw new Error(\"Expected Uint8Array\");\n  if (t.length > 0 && !t.includes(e.length))\n    throw new Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`);\n}\nfunction OE(e) {\n  if (typeof e != \"function\" || typeof e.create != \"function\")\n    throw new Error(\"Hash should be wrapped by utils.wrapConstructor\");\n  X1(e.outputLen), X1(e.blockLen);\n}\nfunction HE(e, t = !0) {\n  if (e.destroyed)\n    throw new Error(\"Hash instance has been destroyed\");\n  if (t && e.finished)\n    throw new Error(\"Hash#digest() has already been called\");\n}\nfunction UE(e, t) {\n  Cg(e);\n  const n = t.outputLen;\n  if (e.length < n)\n    throw new Error(`digestInto() expects output buffer of length at least ${n}`);\n}\nconst nr = {\n  number: X1,\n  bool: PE,\n  bytes: Cg,\n  hash: OE,\n  exists: HE,\n  output: UE\n};\nfunction NE(e, t, n, r) {\n  if (typeof e.setBigUint64 == \"function\")\n    return e.setBigUint64(t, n, r);\n  const i = BigInt(32), o = BigInt(4294967295), a = Number(n >> i & o), s = Number(n & o), c = r ? 4 : 0, l = r ? 0 : 4;\n  e.setUint32(t + c, a, r), e.setUint32(t + l, s, r);\n}\nclass VE extends xg {\n  constructor(t, n, r, i) {\n    super(), this.blockLen = t, this.outputLen = n, this.padOffset = r, this.isLE = i, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(t), this.view = jl(this.buffer);\n  }\n  update(t) {\n    nr.exists(this);\n    const { view: n, buffer: r, blockLen: i } = this;\n    t = Ra(t);\n    const o = t.length;\n    for (let a = 0; a < o; ) {\n      const s = Math.min(i - this.pos, o - a);\n      if (s === i) {\n        const c = jl(t);\n        for (; i <= o - a; a += i)\n          this.process(c, a);\n        continue;\n      }\n      r.set(t.subarray(a, a + s), this.pos), this.pos += s, a += s, this.pos === i && (this.process(n, 0), this.pos = 0);\n    }\n    return this.length += t.length, this.roundClean(), this;\n  }\n  digestInto(t) {\n    nr.exists(this), nr.output(t, this), this.finished = !0;\n    const { buffer: n, view: r, blockLen: i, isLE: o } = this;\n    let { pos: a } = this;\n    n[a++] = 128, this.buffer.subarray(a).fill(0), this.padOffset > i - a && (this.process(r, 0), a = 0);\n    for (let f = a; f < i; f++)\n      n[f] = 0;\n    NE(r, i - 8, BigInt(this.length * 8), o), this.process(r, 0);\n    const s = jl(t), c = this.outputLen;\n    if (c % 4)\n      throw new Error(\"_sha2: outputLen should be aligned to 32bit\");\n    const l = c / 4, d = this.get();\n    if (l > d.length)\n      throw new Error(\"_sha2: outputLen bigger than state\");\n    for (let f = 0; f < l; f++)\n      s.setUint32(4 * f, d[f], o);\n  }\n  digest() {\n    const { buffer: t, outputLen: n } = this;\n    this.digestInto(t);\n    const r = t.slice(0, n);\n    return this.destroy(), r;\n  }\n  _cloneInto(t) {\n    t || (t = new this.constructor()), t.set(...this.get());\n    const { blockLen: n, buffer: r, length: i, finished: o, destroyed: a, pos: s } = this;\n    return t.length = i, t.pos = s, t.finished = o, t.destroyed = a, i % n && t.buffer.set(r), t;\n  }\n}\nconst zE = (e, t, n) => e & t ^ ~e & n, WE = (e, t, n) => e & t ^ e & n ^ t & n, FE = new Uint32Array([\n  1116352408,\n  1899447441,\n  3049323471,\n  3921009573,\n  961987163,\n  1508970993,\n  2453635748,\n  2870763221,\n  3624381080,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  2162078206,\n  2614888103,\n  3248222580,\n  3835390401,\n  4022224774,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  2554220882,\n  2821834349,\n  2952996808,\n  3210313671,\n  3336571891,\n  3584528711,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  2177026350,\n  2456956037,\n  2730485921,\n  2820302411,\n  3259730800,\n  3345764771,\n  3516065817,\n  3600352804,\n  4094571909,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  2227730452,\n  2361852424,\n  2428436474,\n  2756734187,\n  3204031479,\n  3329325298\n]), Gr = new Uint32Array([\n  1779033703,\n  3144134277,\n  1013904242,\n  2773480762,\n  1359893119,\n  2600822924,\n  528734635,\n  1541459225\n]), Yr = new Uint32Array(64);\nclass Sg extends VE {\n  constructor() {\n    super(64, 32, 8, !1), this.A = Gr[0] | 0, this.B = Gr[1] | 0, this.C = Gr[2] | 0, this.D = Gr[3] | 0, this.E = Gr[4] | 0, this.F = Gr[5] | 0, this.G = Gr[6] | 0, this.H = Gr[7] | 0;\n  }\n  get() {\n    const { A: t, B: n, C: r, D: i, E: o, F: a, G: s, H: c } = this;\n    return [t, n, r, i, o, a, s, c];\n  }\n  // prettier-ignore\n  set(t, n, r, i, o, a, s, c) {\n    this.A = t | 0, this.B = n | 0, this.C = r | 0, this.D = i | 0, this.E = o | 0, this.F = a | 0, this.G = s | 0, this.H = c | 0;\n  }\n  process(t, n) {\n    for (let f = 0; f < 16; f++, n += 4)\n      Yr[f] = t.getUint32(n, !1);\n    for (let f = 16; f < 64; f++) {\n      const g = Yr[f - 15], b = Yr[f - 2], x = Xn(g, 7) ^ Xn(g, 18) ^ g >>> 3, m = Xn(b, 17) ^ Xn(b, 19) ^ b >>> 10;\n      Yr[f] = m + Yr[f - 7] + x + Yr[f - 16] | 0;\n    }\n    let { A: r, B: i, C: o, D: a, E: s, F: c, G: l, H: d } = this;\n    for (let f = 0; f < 64; f++) {\n      const g = Xn(s, 6) ^ Xn(s, 11) ^ Xn(s, 25), b = d + g + zE(s, c, l) + FE[f] + Yr[f] | 0, m = (Xn(r, 2) ^ Xn(r, 13) ^ Xn(r, 22)) + WE(r, i, o) | 0;\n      d = l, l = c, c = s, s = a + b | 0, a = o, o = i, i = r, r = b + m | 0;\n    }\n    r = r + this.A | 0, i = i + this.B | 0, o = o + this.C | 0, a = a + this.D | 0, s = s + this.E | 0, c = c + this.F | 0, l = l + this.G | 0, d = d + this.H | 0, this.set(r, i, o, a, s, c, l, d);\n  }\n  roundClean() {\n    Yr.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);\n  }\n}\nclass jE extends Sg {\n  constructor() {\n    super(), this.A = -1056596264, this.B = 914150663, this.C = 812702999, this.D = -150054599, this.E = -4191439, this.F = 1750603025, this.G = 1694076839, this.H = -1090891868, this.outputLen = 28;\n  }\n}\nconst ts = wg(() => new Sg());\nwg(() => new jE());\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction Zo(e) {\n  if (!Number.isSafeInteger(e))\n    throw new Error(`Wrong integer: ${e}`);\n}\nfunction zr(...e) {\n  const t = (i, o) => (a) => i(o(a)), n = Array.from(e).reverse().reduce((i, o) => i ? t(i, o.encode) : o.encode, void 0), r = e.reduce((i, o) => i ? t(i, o.decode) : o.decode, void 0);\n  return { encode: n, decode: r };\n}\nfunction Wr(e) {\n  return {\n    encode: (t) => {\n      if (!Array.isArray(t) || t.length && typeof t[0] != \"number\")\n        throw new Error(\"alphabet.encode input should be an array of numbers\");\n      return t.map((n) => {\n        if (Zo(n), n < 0 || n >= e.length)\n          throw new Error(`Digit index outside alphabet: ${n} (alphabet: ${e.length})`);\n        return e[n];\n      });\n    },\n    decode: (t) => {\n      if (!Array.isArray(t) || t.length && typeof t[0] != \"string\")\n        throw new Error(\"alphabet.decode input should be array of strings\");\n      return t.map((n) => {\n        if (typeof n != \"string\")\n          throw new Error(`alphabet.decode: not string element=${n}`);\n        const r = e.indexOf(n);\n        if (r === -1)\n          throw new Error(`Unknown letter: \"${n}\". Allowed: ${e}`);\n        return r;\n      });\n    }\n  };\n}\nfunction Fr(e = \"\") {\n  if (typeof e != \"string\")\n    throw new Error(\"join separator should be string\");\n  return {\n    encode: (t) => {\n      if (!Array.isArray(t) || t.length && typeof t[0] != \"string\")\n        throw new Error(\"join.encode input should be array of strings\");\n      for (let n of t)\n        if (typeof n != \"string\")\n          throw new Error(`join.encode: non-string input=${n}`);\n      return t.join(e);\n    },\n    decode: (t) => {\n      if (typeof t != \"string\")\n        throw new Error(\"join.decode input should be string\");\n      return t.split(e);\n    }\n  };\n}\nfunction zc(e, t = \"=\") {\n  if (Zo(e), typeof t != \"string\")\n    throw new Error(\"padding chr should be string\");\n  return {\n    encode(n) {\n      if (!Array.isArray(n) || n.length && typeof n[0] != \"string\")\n        throw new Error(\"padding.encode input should be array of strings\");\n      for (let r of n)\n        if (typeof r != \"string\")\n          throw new Error(`padding.encode: non-string input=${r}`);\n      for (; n.length * e % 8; )\n        n.push(t);\n      return n;\n    },\n    decode(n) {\n      if (!Array.isArray(n) || n.length && typeof n[0] != \"string\")\n        throw new Error(\"padding.encode input should be array of strings\");\n      for (let i of n)\n        if (typeof i != \"string\")\n          throw new Error(`padding.decode: non-string input=${i}`);\n      let r = n.length;\n      if (r * e % 8)\n        throw new Error(\"Invalid padding: string should have whole number of bytes\");\n      for (; r > 0 && n[r - 1] === t; r--)\n        if (!((r - 1) * e % 8))\n          throw new Error(\"Invalid padding: string has too much padding\");\n      return n.slice(0, r);\n    }\n  };\n}\nfunction Mg(e) {\n  if (typeof e != \"function\")\n    throw new Error(\"normalize fn should be function\");\n  return { encode: (t) => t, decode: (t) => e(t) };\n}\nfunction mh(e, t, n) {\n  if (t < 2)\n    throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);\n  if (n < 2)\n    throw new Error(`convertRadix: wrong to=${n}, base cannot be less than 2`);\n  if (!Array.isArray(e))\n    throw new Error(\"convertRadix: data should be array\");\n  if (!e.length)\n    return [];\n  let r = 0;\n  const i = [], o = Array.from(e);\n  for (o.forEach((a) => {\n    if (Zo(a), a < 0 || a >= t)\n      throw new Error(`Wrong integer: ${a}`);\n  }); ; ) {\n    let a = 0, s = !0;\n    for (let c = r; c < o.length; c++) {\n      const l = o[c], d = t * a + l;\n      if (!Number.isSafeInteger(d) || t * a / t !== a || d - l !== t * a)\n        throw new Error(\"convertRadix: carry overflow\");\n      if (a = d % n, o[c] = Math.floor(d / n), !Number.isSafeInteger(o[c]) || o[c] * n + a !== d)\n        throw new Error(\"convertRadix: carry overflow\");\n      if (s)\n        o[c] ? s = !1 : r = c;\n      else continue;\n    }\n    if (i.push(a), s)\n      break;\n  }\n  for (let a = 0; a < e.length - 1 && e[a] === 0; a++)\n    i.push(0);\n  return i.reverse();\n}\nconst Lg = (e, t) => t ? Lg(t, e % t) : e, ec = (e, t) => e + (t - Lg(e, t));\nfunction J1(e, t, n, r) {\n  if (!Array.isArray(e))\n    throw new Error(\"convertRadix2: data should be array\");\n  if (t <= 0 || t > 32)\n    throw new Error(`convertRadix2: wrong from=${t}`);\n  if (n <= 0 || n > 32)\n    throw new Error(`convertRadix2: wrong to=${n}`);\n  if (ec(t, n) > 32)\n    throw new Error(`convertRadix2: carry overflow from=${t} to=${n} carryBits=${ec(t, n)}`);\n  let i = 0, o = 0;\n  const a = 2 ** n - 1, s = [];\n  for (const c of e) {\n    if (Zo(c), c >= 2 ** t)\n      throw new Error(`convertRadix2: invalid data word=${c} from=${t}`);\n    if (i = i << t | c, o + t > 32)\n      throw new Error(`convertRadix2: carry overflow pos=${o} from=${t}`);\n    for (o += t; o >= n; o -= n)\n      s.push((i >> o - n & a) >>> 0);\n    i &= 2 ** o - 1;\n  }\n  if (i = i << n - o & a, !r && o >= t)\n    throw new Error(\"Excess padding\");\n  if (!r && i)\n    throw new Error(`Non-zero padding: ${i}`);\n  return r && o > 0 && s.push(i >>> 0), s;\n}\nfunction qE(e) {\n  return Zo(e), {\n    encode: (t) => {\n      if (!(t instanceof Uint8Array))\n        throw new Error(\"radix.encode input should be Uint8Array\");\n      return mh(Array.from(t), 2 ** 8, e);\n    },\n    decode: (t) => {\n      if (!Array.isArray(t) || t.length && typeof t[0] != \"number\")\n        throw new Error(\"radix.decode input should be array of strings\");\n      return Uint8Array.from(mh(t, e, 2 ** 8));\n    }\n  };\n}\nfunction gi(e, t = !1) {\n  if (Zo(e), e <= 0 || e > 32)\n    throw new Error(\"radix2: bits should be in (0..32]\");\n  if (ec(8, e) > 32 || ec(e, 8) > 32)\n    throw new Error(\"radix2: carry overflow\");\n  return {\n    encode: (n) => {\n      if (!(n instanceof Uint8Array))\n        throw new Error(\"radix2.encode input should be Uint8Array\");\n      return J1(Array.from(n), 8, e, !t);\n    },\n    decode: (n) => {\n      if (!Array.isArray(n) || n.length && typeof n[0] != \"number\")\n        throw new Error(\"radix2.decode input should be array of strings\");\n      return Uint8Array.from(J1(n, e, 8, t));\n    }\n  };\n}\nfunction vh(e) {\n  if (typeof e != \"function\")\n    throw new Error(\"unsafeWrapper fn should be function\");\n  return function(...t) {\n    try {\n      return e.apply(null, t);\n    } catch {\n    }\n  };\n}\nconst ZE = zr(gi(4), Wr(\"0123456789ABCDEF\"), Fr(\"\")), KE = zr(gi(5), Wr(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"), zc(5), Fr(\"\"));\nzr(gi(5), Wr(\"0123456789ABCDEFGHIJKLMNOPQRSTUV\"), zc(5), Fr(\"\"));\nzr(gi(5), Wr(\"0123456789ABCDEFGHJKMNPQRSTVWXYZ\"), Fr(\"\"), Mg((e) => e.toUpperCase().replace(/O/g, \"0\").replace(/[IL]/g, \"1\")));\nconst Or = zr(gi(6), Wr(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"), zc(6), Fr(\"\")), GE = zr(gi(6), Wr(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"), zc(6), Fr(\"\")), vf = (e) => zr(qE(58), Wr(e), Fr(\"\")), Q1 = vf(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nvf(\"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\");\nvf(\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\");\nconst yh = [0, 2, 3, 5, 6, 7, 9, 10, 11], YE = {\n  encode(e) {\n    let t = \"\";\n    for (let n = 0; n < e.length; n += 8) {\n      const r = e.subarray(n, n + 8);\n      t += Q1.encode(r).padStart(yh[r.length], \"1\");\n    }\n    return t;\n  },\n  decode(e) {\n    let t = [];\n    for (let n = 0; n < e.length; n += 11) {\n      const r = e.slice(n, n + 11), i = yh.indexOf(r.length), o = Q1.decode(r);\n      for (let a = 0; a < o.length - i; a++)\n        if (o[a] !== 0)\n          throw new Error(\"base58xmr: wrong padding\");\n      t = t.concat(Array.from(o.slice(o.length - i)));\n    }\n    return Uint8Array.from(t);\n  }\n}, ed = zr(Wr(\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\"), Fr(\"\")), bh = [996825010, 642813549, 513874426, 1027748829, 705979059];\nfunction la(e) {\n  const t = e >> 25;\n  let n = (e & 33554431) << 5;\n  for (let r = 0; r < bh.length; r++)\n    (t >> r & 1) === 1 && (n ^= bh[r]);\n  return n;\n}\nfunction xh(e, t, n = 1) {\n  const r = e.length;\n  let i = 1;\n  for (let o = 0; o < r; o++) {\n    const a = e.charCodeAt(o);\n    if (a < 33 || a > 126)\n      throw new Error(`Invalid prefix (${e})`);\n    i = la(i) ^ a >> 5;\n  }\n  i = la(i);\n  for (let o = 0; o < r; o++)\n    i = la(i) ^ e.charCodeAt(o) & 31;\n  for (let o of t)\n    i = la(i) ^ o;\n  for (let o = 0; o < 6; o++)\n    i = la(i);\n  return i ^= n, ed.encode(J1([i % 2 ** 30], 30, 5, !1));\n}\nfunction Ag(e) {\n  const t = e === \"bech32\" ? 1 : 734539939, n = gi(5), r = n.decode, i = n.encode, o = vh(r);\n  function a(d, f, g = 90) {\n    if (typeof d != \"string\")\n      throw new Error(`bech32.encode prefix should be string, not ${typeof d}`);\n    if (!Array.isArray(f) || f.length && typeof f[0] != \"number\")\n      throw new Error(`bech32.encode words should be array of numbers, not ${typeof f}`);\n    const b = d.length + 7 + f.length;\n    if (g !== !1 && b > g)\n      throw new TypeError(`Length ${b} exceeds limit ${g}`);\n    return d = d.toLowerCase(), `${d}1${ed.encode(f)}${xh(d, f, t)}`;\n  }\n  function s(d, f = 90) {\n    if (typeof d != \"string\")\n      throw new Error(`bech32.decode input should be string, not ${typeof d}`);\n    if (d.length < 8 || f !== !1 && d.length > f)\n      throw new TypeError(`Wrong string length: ${d.length} (${d}). Expected (8..${f})`);\n    const g = d.toLowerCase();\n    if (d !== g && d !== d.toUpperCase())\n      throw new Error(\"String must be lowercase or uppercase\");\n    d = g;\n    const b = d.lastIndexOf(\"1\");\n    if (b === 0 || b === -1)\n      throw new Error('Letter \"1\" must be present between prefix and data only');\n    const x = d.slice(0, b), m = d.slice(b + 1);\n    if (m.length < 6)\n      throw new Error(\"Data must be at least 6 characters long\");\n    const C = ed.decode(m).slice(0, -6), S = xh(x, C, t);\n    if (!m.endsWith(S))\n      throw new Error(`Invalid checksum in ${d}: expected \"${S}\"`);\n    return { prefix: x, words: C };\n  }\n  const c = vh(s);\n  function l(d) {\n    const { prefix: f, words: g } = s(d, !1);\n    return { prefix: f, words: g, bytes: r(g) };\n  }\n  return { encode: a, decode: s, decodeToBytes: l, decodeUnsafe: c, fromWords: r, fromWordsUnsafe: o, toWords: i };\n}\nconst _o = Ag(\"bech32\");\nAg(\"bech32m\");\nconst XE = {\n  encode: (e) => new TextDecoder().decode(e),\n  decode: (e) => new TextEncoder().encode(e)\n}, JE = zr(gi(4), Wr(\"0123456789abcdef\"), Fr(\"\"), Mg((e) => {\n  if (typeof e != \"string\" || e.length % 2)\n    throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);\n  return e.toLowerCase();\n})), QE = {\n  utf8: XE,\n  hex: JE,\n  base16: ZE,\n  base32: KE,\n  base64: Or,\n  base64url: GE,\n  base58: Q1,\n  base58xmr: YE\n};\n`${Object.keys(QE).join(\", \")}`;\nfunction ql(e) {\n  if (!Number.isSafeInteger(e) || e < 0)\n    throw new Error(`positive integer expected, not ${e}`);\n}\nfunction wh(e) {\n  if (typeof e != \"boolean\")\n    throw new Error(`boolean expected, not ${e}`);\n}\nfunction eT(e) {\n  return e instanceof Uint8Array || e != null && typeof e == \"object\" && e.constructor.name === \"Uint8Array\";\n}\nfunction _r(e, ...t) {\n  if (!eT(e))\n    throw new Error(\"Uint8Array expected\");\n  if (t.length > 0 && !t.includes(e.length))\n    throw new Error(`Uint8Array expected of length ${t}, not of length=${e.length}`);\n}\n/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nconst rn = (e) => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)), tT = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68;\nif (!tT)\n  throw new Error(\"Non little-endian hardware is not supported\");\nfunction nT(e, t) {\n  if (t == null || typeof t != \"object\")\n    throw new Error(\"options must be defined\");\n  return Object.assign(e, t);\n}\nfunction rT(e, t) {\n  if (e.length !== t.length)\n    return !1;\n  let n = 0;\n  for (let r = 0; r < e.length; r++)\n    n |= e[r] ^ t[r];\n  return n === 0;\n}\nconst iT = /* @__NO_SIDE_EFFECTS__ */ (e, t) => (Object.assign(t, e), t), ti = 16, oT = 283;\nfunction yf(e) {\n  return e << 1 ^ oT & -(e >> 7);\n}\nfunction ro(e, t) {\n  let n = 0;\n  for (; t > 0; t >>= 1)\n    n ^= e & -(t & 1), e = yf(e);\n  return n;\n}\nconst td = /* @__PURE__ */ (() => {\n  let e = new Uint8Array(256);\n  for (let n = 0, r = 1; n < 256; n++, r ^= yf(r))\n    e[n] = r;\n  const t = new Uint8Array(256);\n  t[0] = 99;\n  for (let n = 0; n < 255; n++) {\n    let r = e[255 - n];\n    r |= r << 8, t[e[n]] = (r ^ r >> 4 ^ r >> 5 ^ r >> 6 ^ r >> 7 ^ 99) & 255;\n  }\n  return t;\n})(), aT = /* @__PURE__ */ td.map((e, t) => td.indexOf(t)), sT = (e) => e << 24 | e >>> 8, Zl = (e) => e << 8 | e >>> 24;\nfunction kg(e, t) {\n  if (e.length !== 256)\n    throw new Error(\"Wrong sbox length\");\n  const n = new Uint32Array(256).map((l, d) => t(e[d])), r = n.map(Zl), i = r.map(Zl), o = i.map(Zl), a = new Uint32Array(256 * 256), s = new Uint32Array(256 * 256), c = new Uint16Array(256 * 256);\n  for (let l = 0; l < 256; l++)\n    for (let d = 0; d < 256; d++) {\n      const f = l * 256 + d;\n      a[f] = n[l] ^ r[d], s[f] = i[l] ^ o[d], c[f] = e[l] << 8 | e[d];\n    }\n  return { sbox: e, sbox2: c, T0: n, T1: r, T2: i, T3: o, T01: a, T23: s };\n}\nconst bf = /* @__PURE__ */ kg(td, (e) => ro(e, 3) << 24 | e << 16 | e << 8 | ro(e, 2)), _g = /* @__PURE__ */ kg(aT, (e) => ro(e, 11) << 24 | ro(e, 13) << 16 | ro(e, 9) << 8 | ro(e, 14)), cT = /* @__PURE__ */ (() => {\n  const e = new Uint8Array(16);\n  for (let t = 0, n = 1; t < 16; t++, n = yf(n))\n    e[t] = n;\n  return e;\n})();\nfunction Eg(e) {\n  _r(e);\n  const t = e.length;\n  if (![16, 24, 32].includes(t))\n    throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${t}`);\n  const { sbox2: n } = bf, r = rn(e), i = r.length, o = (s) => rr(n, s, s, s, s), a = new Uint32Array(t + 28);\n  a.set(r);\n  for (let s = i; s < a.length; s++) {\n    let c = a[s - 1];\n    s % i === 0 ? c = o(sT(c)) ^ cT[s / i - 1] : i > 6 && s % i === 4 && (c = o(c)), a[s] = a[s - i] ^ c;\n  }\n  return a;\n}\nfunction lT(e) {\n  const t = Eg(e), n = t.slice(), r = t.length, { sbox2: i } = bf, { T0: o, T1: a, T2: s, T3: c } = _g;\n  for (let l = 0; l < r; l += 4)\n    for (let d = 0; d < 4; d++)\n      n[l + d] = t[r - l - 4 + d];\n  t.fill(0);\n  for (let l = 4; l < r - 4; l++) {\n    const d = n[l], f = rr(i, d, d, d, d);\n    n[l] = o[f & 255] ^ a[f >>> 8 & 255] ^ s[f >>> 16 & 255] ^ c[f >>> 24];\n  }\n  return n;\n}\nfunction Qr(e, t, n, r, i, o) {\n  return e[n << 8 & 65280 | r >>> 8 & 255] ^ t[i >>> 8 & 65280 | o >>> 24 & 255];\n}\nfunction rr(e, t, n, r, i) {\n  return e[t & 255 | n & 65280] | e[r >>> 16 & 255 | i >>> 16 & 65280] << 16;\n}\nfunction $h(e, t, n, r, i) {\n  const { sbox2: o, T01: a, T23: s } = bf;\n  let c = 0;\n  t ^= e[c++], n ^= e[c++], r ^= e[c++], i ^= e[c++];\n  const l = e.length / 4 - 2;\n  for (let x = 0; x < l; x++) {\n    const m = e[c++] ^ Qr(a, s, t, n, r, i), C = e[c++] ^ Qr(a, s, n, r, i, t), S = e[c++] ^ Qr(a, s, r, i, t, n), T = e[c++] ^ Qr(a, s, i, t, n, r);\n    t = m, n = C, r = S, i = T;\n  }\n  const d = e[c++] ^ rr(o, t, n, r, i), f = e[c++] ^ rr(o, n, r, i, t), g = e[c++] ^ rr(o, r, i, t, n), b = e[c++] ^ rr(o, i, t, n, r);\n  return { s0: d, s1: f, s2: g, s3: b };\n}\nfunction dT(e, t, n, r, i) {\n  const { sbox2: o, T01: a, T23: s } = _g;\n  let c = 0;\n  t ^= e[c++], n ^= e[c++], r ^= e[c++], i ^= e[c++];\n  const l = e.length / 4 - 2;\n  for (let x = 0; x < l; x++) {\n    const m = e[c++] ^ Qr(a, s, t, i, r, n), C = e[c++] ^ Qr(a, s, n, t, i, r), S = e[c++] ^ Qr(a, s, r, n, t, i), T = e[c++] ^ Qr(a, s, i, r, n, t);\n    t = m, n = C, r = S, i = T;\n  }\n  const d = e[c++] ^ rr(o, t, i, r, n), f = e[c++] ^ rr(o, n, t, i, r), g = e[c++] ^ rr(o, r, n, t, i), b = e[c++] ^ rr(o, i, r, n, t);\n  return { s0: d, s1: f, s2: g, s3: b };\n}\nfunction Tg(e, t) {\n  if (!t)\n    return new Uint8Array(e);\n  if (_r(t), t.length < e)\n    throw new Error(`aes: wrong destination length, expected at least ${e}, got: ${t.length}`);\n  return t;\n}\nfunction fT(e) {\n  if (_r(e), e.length % ti !== 0)\n    throw new Error(`aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${ti}`);\n}\nfunction uT(e, t, n) {\n  let r = e.length;\n  const i = r % ti;\n  if (!t && i !== 0)\n    throw new Error(\"aec/(cbc-ecb): unpadded plaintext with disabled padding\");\n  const o = rn(e);\n  if (t) {\n    let c = ti - i;\n    c || (c = ti), r = r + c;\n  }\n  const a = Tg(r, n), s = rn(a);\n  return { b: o, o: s, out: a };\n}\nfunction hT(e, t) {\n  if (!t)\n    return e;\n  const n = e.length;\n  if (!n)\n    throw new Error(\"aes/pcks5: empty ciphertext not allowed\");\n  const r = e[n - 1];\n  if (r <= 0 || r > 16)\n    throw new Error(`aes/pcks5: wrong padding byte: ${r}`);\n  const i = e.subarray(0, -r);\n  for (let o = 0; o < r; o++)\n    if (e[n - o - 1] !== r)\n      throw new Error(\"aes/pcks5: wrong padding\");\n  return i;\n}\nfunction pT(e) {\n  const t = new Uint8Array(16), n = rn(t);\n  t.set(e);\n  const r = ti - e.length;\n  for (let i = ti - r; i < ti; i++)\n    t[i] = r;\n  return n;\n}\nconst Bg = /* @__PURE__ */ iT({ blockSize: 16, nonceLength: 16 }, function(t, n, r = {}) {\n  _r(t), _r(n, 16);\n  const i = !r.disablePadding;\n  return {\n    encrypt: (o, a) => {\n      const s = Eg(t), { b: c, o: l, out: d } = uT(o, i, a), f = rn(n);\n      let g = f[0], b = f[1], x = f[2], m = f[3], C = 0;\n      for (; C + 4 <= c.length; )\n        g ^= c[C + 0], b ^= c[C + 1], x ^= c[C + 2], m ^= c[C + 3], { s0: g, s1: b, s2: x, s3: m } = $h(s, g, b, x, m), l[C++] = g, l[C++] = b, l[C++] = x, l[C++] = m;\n      if (i) {\n        const S = pT(o.subarray(C * 4));\n        g ^= S[0], b ^= S[1], x ^= S[2], m ^= S[3], { s0: g, s1: b, s2: x, s3: m } = $h(s, g, b, x, m), l[C++] = g, l[C++] = b, l[C++] = x, l[C++] = m;\n      }\n      return s.fill(0), d;\n    },\n    decrypt: (o, a) => {\n      fT(o);\n      const s = lT(t), c = rn(n), l = Tg(o.length, a), d = rn(o), f = rn(l);\n      let g = c[0], b = c[1], x = c[2], m = c[3];\n      for (let C = 0; C + 4 <= d.length; ) {\n        const S = g, T = b, N = x, W = m;\n        g = d[C + 0], b = d[C + 1], x = d[C + 2], m = d[C + 3];\n        const { s0: U, s1: F, s2: j, s3: K } = dT(s, g, b, x, m);\n        f[C++] = U ^ S, f[C++] = F ^ T, f[C++] = j ^ N, f[C++] = K ^ W;\n      }\n      return s.fill(0), hT(l, i);\n    }\n  };\n}), Ig = (e) => Uint8Array.from(e.split(\"\").map((t) => t.charCodeAt(0))), gT = Ig(\"expand 16-byte k\"), mT = Ig(\"expand 32-byte k\"), vT = rn(gT), Dg = rn(mT);\nDg.slice();\nfunction Ye(e, t) {\n  return e << t | e >>> 32 - t;\n}\nfunction nd(e) {\n  return e.byteOffset % 4 === 0;\n}\nconst us = 64, yT = 16, Rg = 2 ** 32 - 1, Ch = new Uint32Array();\nfunction bT(e, t, n, r, i, o, a, s) {\n  const c = i.length, l = new Uint8Array(us), d = rn(l), f = nd(i) && nd(o), g = f ? rn(i) : Ch, b = f ? rn(o) : Ch;\n  for (let x = 0; x < c; a++) {\n    if (e(t, n, r, d, a, s), a >= Rg)\n      throw new Error(\"arx: counter overflow\");\n    const m = Math.min(us, c - x);\n    if (f && m === us) {\n      const C = x / 4;\n      if (x % 4 !== 0)\n        throw new Error(\"arx: invalid block position\");\n      for (let S = 0, T; S < yT; S++)\n        T = C + S, b[T] = g[T] ^ d[S];\n      x += us;\n      continue;\n    }\n    for (let C = 0, S; C < m; C++)\n      S = x + C, o[S] = i[S] ^ l[C];\n    x += m;\n  }\n}\nfunction xT(e, t) {\n  const { allowShortKeys: n, extendNonceFn: r, counterLength: i, counterRight: o, rounds: a } = nT({ allowShortKeys: !1, counterLength: 8, counterRight: !1, rounds: 20 }, t);\n  if (typeof e != \"function\")\n    throw new Error(\"core must be a function\");\n  return ql(i), ql(a), wh(o), wh(n), (s, c, l, d, f = 0) => {\n    _r(s), _r(c), _r(l);\n    const g = l.length;\n    if (d || (d = new Uint8Array(g)), _r(d), ql(f), f < 0 || f >= Rg)\n      throw new Error(\"arx: counter overflow\");\n    if (d.length < g)\n      throw new Error(`arx: output (${d.length}) is shorter than data (${g})`);\n    const b = [];\n    let x = s.length, m, C;\n    if (x === 32)\n      m = s.slice(), b.push(m), C = Dg;\n    else if (x === 16 && n)\n      m = new Uint8Array(32), m.set(s), m.set(s, 16), C = vT, b.push(m);\n    else\n      throw new Error(`arx: invalid 32-byte key, got length=${x}`);\n    nd(c) || (c = c.slice(), b.push(c));\n    const S = rn(m);\n    if (r) {\n      if (c.length !== 24)\n        throw new Error(\"arx: extended nonce must be 24 bytes\");\n      r(C, S, rn(c.subarray(0, 16)), S), c = c.subarray(16);\n    }\n    const T = 16 - i;\n    if (T !== c.length)\n      throw new Error(`arx: nonce must be ${T} or 16 bytes`);\n    if (T !== 12) {\n      const W = new Uint8Array(12);\n      W.set(c, o ? 0 : 12 - c.length), c = W, b.push(c);\n    }\n    const N = rn(c);\n    for (bT(e, C, S, N, l, d, f, a); b.length > 0; )\n      b.pop().fill(0);\n    return d;\n  };\n}\nfunction wT(e, t, n, r, i, o = 20) {\n  let a = e[0], s = e[1], c = e[2], l = e[3], d = t[0], f = t[1], g = t[2], b = t[3], x = t[4], m = t[5], C = t[6], S = t[7], T = i, N = n[0], W = n[1], U = n[2], F = a, j = s, K = c, J = l, X = d, _ = f, u = g, v = b, w = x, y = m, $ = C, A = S, H = T, M = N, h = W, L = U;\n  for (let ne = 0; ne < o; ne += 2)\n    F = F + X | 0, H = Ye(H ^ F, 16), w = w + H | 0, X = Ye(X ^ w, 12), F = F + X | 0, H = Ye(H ^ F, 8), w = w + H | 0, X = Ye(X ^ w, 7), j = j + _ | 0, M = Ye(M ^ j, 16), y = y + M | 0, _ = Ye(_ ^ y, 12), j = j + _ | 0, M = Ye(M ^ j, 8), y = y + M | 0, _ = Ye(_ ^ y, 7), K = K + u | 0, h = Ye(h ^ K, 16), $ = $ + h | 0, u = Ye(u ^ $, 12), K = K + u | 0, h = Ye(h ^ K, 8), $ = $ + h | 0, u = Ye(u ^ $, 7), J = J + v | 0, L = Ye(L ^ J, 16), A = A + L | 0, v = Ye(v ^ A, 12), J = J + v | 0, L = Ye(L ^ J, 8), A = A + L | 0, v = Ye(v ^ A, 7), F = F + _ | 0, L = Ye(L ^ F, 16), $ = $ + L | 0, _ = Ye(_ ^ $, 12), F = F + _ | 0, L = Ye(L ^ F, 8), $ = $ + L | 0, _ = Ye(_ ^ $, 7), j = j + u | 0, H = Ye(H ^ j, 16), A = A + H | 0, u = Ye(u ^ A, 12), j = j + u | 0, H = Ye(H ^ j, 8), A = A + H | 0, u = Ye(u ^ A, 7), K = K + v | 0, M = Ye(M ^ K, 16), w = w + M | 0, v = Ye(v ^ w, 12), K = K + v | 0, M = Ye(M ^ K, 8), w = w + M | 0, v = Ye(v ^ w, 7), J = J + X | 0, h = Ye(h ^ J, 16), y = y + h | 0, X = Ye(X ^ y, 12), J = J + X | 0, h = Ye(h ^ J, 8), y = y + h | 0, X = Ye(X ^ y, 7);\n  let Y = 0;\n  r[Y++] = a + F | 0, r[Y++] = s + j | 0, r[Y++] = c + K | 0, r[Y++] = l + J | 0, r[Y++] = d + X | 0, r[Y++] = f + _ | 0, r[Y++] = g + u | 0, r[Y++] = b + v | 0, r[Y++] = x + w | 0, r[Y++] = m + y | 0, r[Y++] = C + $ | 0, r[Y++] = S + A | 0, r[Y++] = T + H | 0, r[Y++] = N + M | 0, r[Y++] = W + h | 0, r[Y++] = U + L | 0;\n}\nconst Pg = /* @__PURE__ */ xT(wT, {\n  counterRight: !1,\n  counterLength: 4,\n  allowShortKeys: !1\n});\nclass Og extends xg {\n  constructor(t, n) {\n    super(), this.finished = !1, this.destroyed = !1, nr.hash(t);\n    const r = Ra(n);\n    if (this.iHash = t.create(), typeof this.iHash.update != \"function\")\n      throw new Error(\"Expected instance of class which extends utils.Hash\");\n    this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;\n    const i = this.blockLen, o = new Uint8Array(i);\n    o.set(r.length > i ? t.create().update(r).digest() : r);\n    for (let a = 0; a < o.length; a++)\n      o[a] ^= 54;\n    this.iHash.update(o), this.oHash = t.create();\n    for (let a = 0; a < o.length; a++)\n      o[a] ^= 106;\n    this.oHash.update(o), o.fill(0);\n  }\n  update(t) {\n    return nr.exists(this), this.iHash.update(t), this;\n  }\n  digestInto(t) {\n    nr.exists(this), nr.bytes(t, this.outputLen), this.finished = !0, this.iHash.digestInto(t), this.oHash.update(t), this.oHash.digestInto(t), this.destroy();\n  }\n  digest() {\n    const t = new Uint8Array(this.oHash.outputLen);\n    return this.digestInto(t), t;\n  }\n  _cloneInto(t) {\n    t || (t = Object.create(Object.getPrototypeOf(this), {}));\n    const { oHash: n, iHash: r, finished: i, destroyed: o, blockLen: a, outputLen: s } = this;\n    return t = t, t.finished = i, t.destroyed = o, t.blockLen = a, t.outputLen = s, t.oHash = n._cloneInto(t.oHash), t.iHash = r._cloneInto(t.iHash), t;\n  }\n  destroy() {\n    this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy();\n  }\n}\nconst Wc = (e, t, n) => new Og(e, t).update(n).digest();\nWc.create = (e, t) => new Og(e, t);\nfunction $T(e, t, n) {\n  return nr.hash(e), Wc(e, Ra(n), Ra(t));\n}\nconst Kl = new Uint8Array([0]), Sh = new Uint8Array();\nfunction CT(e, t, n, r = 32) {\n  if (nr.hash(e), nr.number(r), r > 255 * e.outputLen)\n    throw new Error(\"Length should be <= 255*HashLen\");\n  const i = Math.ceil(r / e.outputLen);\n  n === void 0 && (n = Sh);\n  const o = new Uint8Array(i * e.outputLen), a = Wc.create(e, t), s = a._cloneInto(), c = new Uint8Array(a.outputLen);\n  for (let l = 0; l < i; l++)\n    Kl[0] = l + 1, s.update(l === 0 ? Sh : c).update(n).update(Kl).digestInto(c), o.set(c, e.outputLen * l), a._cloneInto(s);\n  return a.destroy(), s.destroy(), c.fill(0), Kl.fill(0), o.slice(0, r);\n}\nvar ST = Object.defineProperty, Pt = (e, t) => {\n  for (var n in t)\n    ST(e, n, { get: t[n], enumerable: !0 });\n}, Ji = Symbol(\"verified\"), MT = (e) => e instanceof Object;\nfunction Hg(e) {\n  if (!MT(e) || typeof e.kind != \"number\" || typeof e.content != \"string\" || typeof e.created_at != \"number\" || typeof e.pubkey != \"string\" || !e.pubkey.match(/^[a-f0-9]{64}$/) || !Array.isArray(e.tags))\n    return !1;\n  for (let t = 0; t < e.tags.length; t++) {\n    let n = e.tags[t];\n    if (!Array.isArray(n))\n      return !1;\n    for (let r = 0; r < n.length; r++)\n      if (typeof n[r] == \"object\")\n        return !1;\n  }\n  return !0;\n}\nvar LT = {};\nPt(LT, {\n  Queue: () => Vg,\n  QueueNode: () => Ng,\n  binarySearch: () => xf,\n  insertEventIntoAscendingList: () => kT,\n  insertEventIntoDescendingList: () => AT,\n  normalizeURL: () => Ug,\n  utf8Decoder: () => tr,\n  utf8Encoder: () => jn\n});\nvar tr = new TextDecoder(\"utf-8\"), jn = new TextEncoder();\nfunction Ug(e) {\n  e.indexOf(\"://\") === -1 && (e = \"wss://\" + e);\n  let t = new URL(e);\n  return t.pathname = t.pathname.replace(/\\/+/g, \"/\"), t.pathname.endsWith(\"/\") && (t.pathname = t.pathname.slice(0, -1)), (t.port === \"80\" && t.protocol === \"ws:\" || t.port === \"443\" && t.protocol === \"wss:\") && (t.port = \"\"), t.searchParams.sort(), t.hash = \"\", t.toString();\n}\nfunction AT(e, t) {\n  const [n, r] = xf(e, (i) => t.id === i.id ? 0 : t.created_at === i.created_at ? -1 : i.created_at - t.created_at);\n  return r || e.splice(n, 0, t), e;\n}\nfunction kT(e, t) {\n  const [n, r] = xf(e, (i) => t.id === i.id ? 0 : t.created_at === i.created_at ? -1 : t.created_at - i.created_at);\n  return r || e.splice(n, 0, t), e;\n}\nfunction xf(e, t) {\n  let n = 0, r = e.length - 1;\n  for (; n <= r; ) {\n    const i = Math.floor((n + r) / 2), o = t(e[i]);\n    if (o === 0)\n      return [i, !0];\n    o < 0 ? r = i - 1 : n = i + 1;\n  }\n  return [n, !1];\n}\nvar Ng = class {\n  constructor(e) {\n    we(this, \"value\");\n    we(this, \"next\", null);\n    we(this, \"prev\", null);\n    this.value = e;\n  }\n}, Vg = class {\n  constructor() {\n    we(this, \"first\");\n    we(this, \"last\");\n    this.first = null, this.last = null;\n  }\n  enqueue(e) {\n    const t = new Ng(e);\n    return this.last ? this.last === this.first ? (this.last = t, this.last.prev = this.first, this.first.next = t) : (t.prev = this.last, this.last.next = t, this.last = t) : (this.first = t, this.last = t), !0;\n  }\n  dequeue() {\n    if (!this.first)\n      return null;\n    if (this.first === this.last) {\n      const t = this.first;\n      return this.first = null, this.last = null, t.value;\n    }\n    const e = this.first;\n    return this.first = e.next, e.value;\n  }\n}, _T = class {\n  generateSecretKey() {\n    return ca.utils.randomPrivateKey();\n  }\n  getPublicKey(e) {\n    return dn(ca.getPublicKey(e));\n  }\n  finalizeEvent(e, t) {\n    const n = e;\n    return n.pubkey = dn(ca.getPublicKey(t)), n.id = Es(n), n.sig = dn(ca.sign(Es(n), t)), n[Ji] = !0, n;\n  }\n  verifyEvent(e) {\n    if (typeof e[Ji] == \"boolean\")\n      return e[Ji];\n    const t = Es(e);\n    if (t !== e.id)\n      return e[Ji] = !1, !1;\n    try {\n      const n = ca.verify(e.sig, t, e.pubkey);\n      return e[Ji] = n, n;\n    } catch {\n      return e[Ji] = !1, !1;\n    }\n  }\n};\nfunction ET(e) {\n  if (!Hg(e))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([0, e.pubkey, e.created_at, e.kind, e.tags, e.content]);\n}\nfunction Es(e) {\n  let t = ts(jn.encode(ET(e)));\n  return dn(t);\n}\nvar Fc = new _T();\nFc.generateSecretKey;\nvar TT = Fc.getPublicKey, jr = Fc.finalizeEvent, jc = Fc.verifyEvent, BT = {};\nPt(BT, {\n  Application: () => BB,\n  BadgeAward: () => VT,\n  BadgeDefinition: () => MB,\n  BlockedRelaysList: () => dB,\n  BookmarkList: () => sB,\n  Bookmarksets: () => $B,\n  Calendar: () => UB,\n  CalendarEventRSVP: () => NB,\n  ChannelCreation: () => qg,\n  ChannelHideMessage: () => Gg,\n  ChannelMessage: () => Kg,\n  ChannelMetadata: () => Zg,\n  ChannelMuteUser: () => Yg,\n  ClassifiedListing: () => RB,\n  ClientAuth: () => Xg,\n  CommunitiesList: () => cB,\n  CommunityDefinition: () => WB,\n  CommunityPostApproval: () => YT,\n  Contacts: () => OT,\n  CreateOrUpdateProduct: () => kB,\n  CreateOrUpdateStall: () => AB,\n  Curationsets: () => CB,\n  Date: () => OB,\n  DraftClassifiedListing: () => PB,\n  DraftLong: () => EB,\n  Emojisets: () => TB,\n  EncryptedDirectMessage: () => HT,\n  EncryptedDirectMessages: () => UT,\n  EventDeletion: () => NT,\n  FileMetadata: () => FT,\n  FileServerPreference: () => pB,\n  Followsets: () => bB,\n  GenericRepost: () => zT,\n  Genericlists: () => xB,\n  HTTPAuth: () => Cf,\n  Handlerinformation: () => zB,\n  Handlerrecommendation: () => VB,\n  Highlights: () => rB,\n  InterestsList: () => uB,\n  Interestsets: () => LB,\n  JobFeedback: () => QT,\n  JobRequest: () => XT,\n  JobResult: () => JT,\n  Label: () => GT,\n  LightningPubRPC: () => mB,\n  LiveChatMessage: () => jT,\n  LiveEvent: () => IB,\n  LongFormArticle: () => _B,\n  Metadata: () => DT,\n  Mutelist: () => iB,\n  NWCWalletInfo: () => gB,\n  NWCWalletRequest: () => Jg,\n  NWCWalletResponse: () => vB,\n  NostrConnect: () => yB,\n  OpenTimestamps: () => WT,\n  Pinlist: () => oB,\n  ProblemTracker: () => qT,\n  ProfileBadges: () => SB,\n  PublicChatsList: () => lB,\n  Reaction: () => $f,\n  RecommendRelay: () => PT,\n  RelayList: () => aB,\n  Relaysets: () => wB,\n  Report: () => ZT,\n  Reporting: () => KT,\n  Repost: () => wf,\n  SearchRelaysList: () => fB,\n  ShortTextNote: () => RT,\n  Time: () => HB,\n  UserEmojiList: () => hB,\n  UserStatuses: () => DB,\n  Zap: () => nB,\n  ZapGoal: () => eB,\n  ZapRequest: () => tB,\n  classifyKind: () => IT,\n  isEphemeralKind: () => Fg,\n  isParameterizedReplaceableKind: () => jg,\n  isRegularKind: () => zg,\n  isReplaceableKind: () => Wg\n});\nfunction zg(e) {\n  return 1e3 <= e && e < 1e4 || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(e);\n}\nfunction Wg(e) {\n  return [0, 3].includes(e) || 1e4 <= e && e < 2e4;\n}\nfunction Fg(e) {\n  return 2e4 <= e && e < 3e4;\n}\nfunction jg(e) {\n  return 3e4 <= e && e < 4e4;\n}\nfunction IT(e) {\n  return zg(e) ? \"regular\" : Wg(e) ? \"replaceable\" : Fg(e) ? \"ephemeral\" : jg(e) ? \"parameterized\" : \"unknown\";\n}\nvar DT = 0, RT = 1, PT = 2, OT = 3, HT = 4, UT = 4, NT = 5, wf = 6, $f = 7, VT = 8, zT = 16, qg = 40, Zg = 41, Kg = 42, Gg = 43, Yg = 44, WT = 1040, FT = 1063, jT = 1311, qT = 1971, ZT = 1984, KT = 1984, GT = 1985, YT = 4550, XT = 5999, JT = 6999, QT = 7e3, eB = 9041, tB = 9734, nB = 9735, rB = 9802, iB = 1e4, oB = 10001, aB = 10002, sB = 10003, cB = 10004, lB = 10005, dB = 10006, fB = 10007, uB = 10015, hB = 10030, pB = 10096, gB = 13194, mB = 21e3, Xg = 22242, Jg = 23194, vB = 23195, yB = 24133, Cf = 27235, bB = 3e4, xB = 30001, wB = 30002, $B = 30003, CB = 30004, SB = 30008, MB = 30009, LB = 30015, AB = 30017, kB = 30018, _B = 30023, EB = 30024, TB = 30030, BB = 30078, IB = 30311, DB = 30315, RB = 30402, PB = 30403, OB = 31922, HB = 31923, UB = 31924, NB = 31925, VB = 31989, zB = 31990, WB = 34550;\nfunction FB(e, t) {\n  if (e.ids && e.ids.indexOf(t.id) === -1 || e.kinds && e.kinds.indexOf(t.kind) === -1 || e.authors && e.authors.indexOf(t.pubkey) === -1)\n    return !1;\n  for (let n in e)\n    if (n[0] === \"#\") {\n      let r = n.slice(1), i = e[`#${r}`];\n      if (i && !t.tags.find(([o, a]) => o === n.slice(1) && i.indexOf(a) !== -1))\n        return !1;\n    }\n  return !(e.since && t.created_at < e.since || e.until && t.created_at > e.until);\n}\nfunction jB(e, t) {\n  for (let n = 0; n < e.length; n++)\n    if (FB(e[n], t))\n      return !0;\n  return !1;\n}\nvar qB = {};\nPt(qB, {\n  getHex64: () => qc,\n  getInt: () => Qg,\n  getSubscriptionId: () => e5,\n  matchEventId: () => ZB,\n  matchEventKind: () => GB,\n  matchEventPubkey: () => KB\n});\nfunction qc(e, t) {\n  let n = t.length + 3, r = e.indexOf(`\"${t}\":`) + n, i = e.slice(r).indexOf('\"') + r + 1;\n  return e.slice(i, i + 64);\n}\nfunction Qg(e, t) {\n  let n = t.length, r = e.indexOf(`\"${t}\":`) + n + 3, i = e.slice(r), o = Math.min(i.indexOf(\",\"), i.indexOf(\"}\"));\n  return parseInt(i.slice(0, o), 10);\n}\nfunction e5(e) {\n  let t = e.slice(0, 22).indexOf('\"EVENT\"');\n  if (t === -1)\n    return null;\n  let n = e.slice(t + 7 + 1).indexOf('\"');\n  if (n === -1)\n    return null;\n  let r = t + 7 + 1 + n, i = e.slice(r + 1, 80).indexOf('\"');\n  if (i === -1)\n    return null;\n  let o = r + 1 + i;\n  return e.slice(r + 1, o);\n}\nfunction ZB(e, t) {\n  return t === qc(e, \"id\");\n}\nfunction KB(e, t) {\n  return t === qc(e, \"pubkey\");\n}\nfunction GB(e, t) {\n  return t === Qg(e, \"kind\");\n}\nvar YB = {};\nPt(YB, {\n  makeAuthEvent: () => t5\n});\nfunction t5(e, t) {\n  return {\n    kind: Xg,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", e],\n      [\"challenge\", t]\n    ],\n    content: \"\"\n  };\n}\nasync function XB() {\n  return new Promise((e) => {\n    const t = new MessageChannel(), n = () => {\n      t.port1.removeEventListener(\"message\", n), e();\n    };\n    t.port1.addEventListener(\"message\", n), t.port2.postMessage(0), t.port1.start();\n  });\n}\nvar n5 = class {\n  constructor(e, t) {\n    we(this, \"url\");\n    we(this, \"_connected\", !1);\n    we(this, \"onclose\", null);\n    we(this, \"onnotice\", (e) => console.debug(`NOTICE from ${this.url}: ${e}`));\n    we(this, \"_onauth\", null);\n    we(this, \"baseEoseTimeout\", 4400);\n    we(this, \"connectionTimeout\", 4400);\n    we(this, \"openSubs\", /* @__PURE__ */ new Map());\n    we(this, \"connectionTimeoutHandle\");\n    we(this, \"connectionPromise\");\n    we(this, \"openCountRequests\", /* @__PURE__ */ new Map());\n    we(this, \"openEventPublishes\", /* @__PURE__ */ new Map());\n    we(this, \"ws\");\n    we(this, \"incomingMessageQueue\", new Vg());\n    we(this, \"queueRunning\", !1);\n    we(this, \"challenge\");\n    we(this, \"serial\", 0);\n    we(this, \"verifyEvent\");\n    we(this, \"_WebSocket\");\n    this.url = Ug(e), this.verifyEvent = t.verifyEvent, this._WebSocket = t.websocketImplementation || WebSocket;\n  }\n  static async connect(e, t) {\n    const n = new n5(e, t);\n    return await n.connect(), n;\n  }\n  closeAllSubscriptions(e) {\n    for (let [t, n] of this.openSubs)\n      n.close(e);\n    this.openSubs.clear();\n    for (let [t, n] of this.openEventPublishes)\n      n.reject(new Error(e));\n    this.openEventPublishes.clear();\n    for (let [t, n] of this.openCountRequests)\n      n.reject(new Error(e));\n    this.openCountRequests.clear();\n  }\n  get connected() {\n    return this._connected;\n  }\n  async connect() {\n    return this.connectionPromise ? this.connectionPromise : (this.challenge = void 0, this.connectionPromise = new Promise((e, t) => {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        var n;\n        t(\"connection timed out\"), this.connectionPromise = void 0, (n = this.onclose) == null || n.call(this), this.closeAllSubscriptions(\"relay connection timed out\");\n      }, this.connectionTimeout);\n      try {\n        this.ws = new this._WebSocket(this.url);\n      } catch (n) {\n        t(n);\n        return;\n      }\n      this.ws.onopen = () => {\n        clearTimeout(this.connectionTimeoutHandle), this._connected = !0, e();\n      }, this.ws.onerror = (n) => {\n        var r;\n        t(n.message || \"websocket error\"), this._connected && (this._connected = !1, this.connectionPromise = void 0, (r = this.onclose) == null || r.call(this), this.closeAllSubscriptions(\"relay connection errored\"));\n      }, this.ws.onclose = async () => {\n        var n;\n        this._connected && (this._connected = !1, this.connectionPromise = void 0, (n = this.onclose) == null || n.call(this), this.closeAllSubscriptions(\"relay connection closed\"));\n      }, this.ws.onmessage = this._onmessage.bind(this);\n    }), this.connectionPromise);\n  }\n  async runQueue() {\n    for (this.queueRunning = !0; this.handleNext() !== !1; )\n      await XB();\n    this.queueRunning = !1;\n  }\n  handleNext() {\n    var n, r, i;\n    const e = this.incomingMessageQueue.dequeue();\n    if (!e)\n      return !1;\n    const t = e5(e);\n    if (t) {\n      const o = this.openSubs.get(t);\n      if (!o)\n        return;\n      const a = qc(e, \"id\"), s = (n = o.alreadyHaveEvent) == null ? void 0 : n.call(o, a);\n      if ((r = o.receivedEvent) == null || r.call(o, this, a), s)\n        return;\n    }\n    try {\n      let o = JSON.parse(e);\n      switch (o[0]) {\n        case \"EVENT\": {\n          const a = this.openSubs.get(o[1]), s = o[2];\n          this.verifyEvent(s) && jB(a.filters, s) && a.onevent(s);\n          return;\n        }\n        case \"COUNT\": {\n          const a = o[1], s = o[2], c = this.openCountRequests.get(a);\n          c && (c.resolve(s.count), this.openCountRequests.delete(a));\n          return;\n        }\n        case \"EOSE\": {\n          const a = this.openSubs.get(o[1]);\n          if (!a)\n            return;\n          a.receivedEose();\n          return;\n        }\n        case \"OK\": {\n          const a = o[1], s = o[2], c = o[3], l = this.openEventPublishes.get(a);\n          s ? l.resolve(c) : l.reject(new Error(c)), this.openEventPublishes.delete(a);\n          return;\n        }\n        case \"CLOSED\": {\n          const a = o[1], s = this.openSubs.get(a);\n          if (!s)\n            return;\n          s.closed = !0, s.close(o[2]);\n          return;\n        }\n        case \"NOTICE\":\n          this.onnotice(o[1]);\n          return;\n        case \"AUTH\": {\n          this.challenge = o[1], (i = this._onauth) == null || i.call(this, o[1]);\n          return;\n        }\n      }\n    } catch {\n      return;\n    }\n  }\n  async send(e) {\n    if (!this.connectionPromise)\n      throw new Error(\"sending on closed connection\");\n    this.connectionPromise.then(() => {\n      var t;\n      (t = this.ws) == null || t.send(e);\n    });\n  }\n  async auth(e) {\n    if (!this.challenge)\n      throw new Error(\"can't perform auth, no challenge was received\");\n    const t = await e(t5(this.url, this.challenge)), n = new Promise((r, i) => {\n      this.openEventPublishes.set(t.id, { resolve: r, reject: i });\n    });\n    return this.send('[\"AUTH\",' + JSON.stringify(t) + \"]\"), n;\n  }\n  async publish(e) {\n    const t = new Promise((n, r) => {\n      this.openEventPublishes.set(e.id, { resolve: n, reject: r });\n    });\n    return this.send('[\"EVENT\",' + JSON.stringify(e) + \"]\"), t;\n  }\n  async count(e, t) {\n    this.serial++;\n    const n = (t == null ? void 0 : t.id) || \"count:\" + this.serial, r = new Promise((i, o) => {\n      this.openCountRequests.set(n, { resolve: i, reject: o });\n    });\n    return this.send('[\"COUNT\",\"' + n + '\",' + JSON.stringify(e).substring(1)), r;\n  }\n  subscribe(e, t) {\n    const n = this.prepareSubscription(e, t);\n    return n.fire(), n;\n  }\n  prepareSubscription(e, t) {\n    this.serial++;\n    const n = t.id || \"sub:\" + this.serial, r = new JB(this, n, e, t);\n    return this.openSubs.set(n, r), r;\n  }\n  close() {\n    var e;\n    this.closeAllSubscriptions(\"relay connection closed by us\"), this._connected = !1, (e = this.ws) == null || e.close();\n  }\n  _onmessage(e) {\n    this.incomingMessageQueue.enqueue(e.data), this.queueRunning || this.runQueue();\n  }\n}, JB = class {\n  constructor(e, t, n, r) {\n    we(this, \"relay\");\n    we(this, \"id\");\n    we(this, \"closed\", !1);\n    we(this, \"eosed\", !1);\n    we(this, \"filters\");\n    we(this, \"alreadyHaveEvent\");\n    we(this, \"receivedEvent\");\n    we(this, \"onevent\");\n    we(this, \"oneose\");\n    we(this, \"onclose\");\n    we(this, \"eoseTimeout\");\n    we(this, \"eoseTimeoutHandle\");\n    this.relay = e, this.filters = n, this.id = t, this.alreadyHaveEvent = r.alreadyHaveEvent, this.receivedEvent = r.receivedEvent, this.eoseTimeout = r.eoseTimeout || e.baseEoseTimeout, this.oneose = r.oneose, this.onclose = r.onclose, this.onevent = r.onevent || ((i) => {\n      console.warn(\n        `onevent() callback not defined for subscription '${this.id}' in relay ${this.relay.url}. event received:`,\n        i\n      );\n    });\n  }\n  fire() {\n    this.relay.send('[\"REQ\",\"' + this.id + '\",' + JSON.stringify(this.filters).substring(1)), this.eoseTimeoutHandle = setTimeout(this.receivedEose.bind(this), this.eoseTimeout);\n  }\n  receivedEose() {\n    var e;\n    this.eosed || (clearTimeout(this.eoseTimeoutHandle), this.eosed = !0, (e = this.oneose) == null || e.call(this));\n  }\n  close(e = \"closed by caller\") {\n    var t;\n    !this.closed && this.relay.connected && (this.relay.send('[\"CLOSE\",' + JSON.stringify(this.id) + \"]\"), this.closed = !0), this.relay.openSubs.delete(this.id), (t = this.onclose) == null || t.call(this, e);\n  }\n}, r5;\ntry {\n  r5 = WebSocket;\n} catch {\n}\nvar i5 = class extends n5 {\n  constructor(e) {\n    super(e, { verifyEvent: jc, websocketImplementation: r5 });\n  }\n  static async connect(e) {\n    const t = new i5(e);\n    return await t.connect(), t;\n  }\n}, QB;\ntry {\n  QB = WebSocket;\n} catch {\n}\nvar eI = {};\nPt(eI, {\n  BECH32_REGEX: () => o5,\n  Bech32MaxSize: () => Sf,\n  decode: () => Zc,\n  encodeBytes: () => Kc,\n  naddrEncode: () => sI,\n  neventEncode: () => aI,\n  noteEncode: () => iI,\n  nprofileEncode: () => oI,\n  npubEncode: () => rI,\n  nrelayEncode: () => cI,\n  nsecEncode: () => nI\n});\nvar Sf = 5e3, o5 = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction tI(e) {\n  const t = new Uint8Array(4);\n  return t[0] = e >> 24 & 255, t[1] = e >> 16 & 255, t[2] = e >> 8 & 255, t[3] = e & 255, t;\n}\nfunction Zc(e) {\n  var i, o, a, s, c, l, d, f;\n  let { prefix: t, words: n } = _o.decode(e, Sf), r = new Uint8Array(_o.fromWords(n));\n  switch (t) {\n    case \"nprofile\": {\n      let g = hs(r);\n      if (!((i = g[0]) != null && i[0]))\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (g[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: dn(g[0][0]),\n          relays: g[1] ? g[1].map((b) => tr.decode(b)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let g = hs(r);\n      if (!((o = g[0]) != null && o[0]))\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (g[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (g[2] && g[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (g[3] && g[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: dn(g[0][0]),\n          relays: g[1] ? g[1].map((b) => tr.decode(b)) : [],\n          author: (a = g[2]) != null && a[0] ? dn(g[2][0]) : void 0,\n          kind: (s = g[3]) != null && s[0] ? parseInt(dn(g[3][0]), 16) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let g = hs(r);\n      if (!((c = g[0]) != null && c[0]))\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!((l = g[2]) != null && l[0]))\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (g[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!((d = g[3]) != null && d[0]))\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (g[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: tr.decode(g[0][0]),\n          pubkey: dn(g[2][0]),\n          kind: parseInt(dn(g[3][0]), 16),\n          relays: g[1] ? g[1].map((b) => tr.decode(b)) : []\n        }\n      };\n    }\n    case \"nrelay\": {\n      let g = hs(r);\n      if (!((f = g[0]) != null && f[0]))\n        throw new Error(\"missing TLV 0 for nrelay\");\n      return {\n        type: \"nrelay\",\n        data: tr.decode(g[0][0])\n      };\n    }\n    case \"nsec\":\n      return { type: t, data: r };\n    case \"npub\":\n    case \"note\":\n      return { type: t, data: dn(r) };\n    default:\n      throw new Error(`unknown prefix ${t}`);\n  }\n}\nfunction hs(e) {\n  let t = {}, n = e;\n  for (; n.length > 0; ) {\n    let r = n[0], i = n[1], o = n.slice(2, 2 + i);\n    if (n = n.slice(2 + i), o.length < i)\n      throw new Error(`not enough data to read on TLV ${r}`);\n    t[r] = t[r] || [], t[r].push(o);\n  }\n  return t;\n}\nfunction nI(e) {\n  return Kc(\"nsec\", e);\n}\nfunction rI(e) {\n  return Kc(\"npub\", ko(e));\n}\nfunction iI(e) {\n  return Kc(\"note\", ko(e));\n}\nfunction ns(e, t) {\n  let n = _o.toWords(t);\n  return _o.encode(e, n, Sf);\n}\nfunction Kc(e, t) {\n  return ns(e, t);\n}\nfunction oI(e) {\n  let t = Gc({\n    0: [ko(e.pubkey)],\n    1: (e.relays || []).map((n) => jn.encode(n))\n  });\n  return ns(\"nprofile\", t);\n}\nfunction aI(e) {\n  let t;\n  e.kind !== void 0 && (t = tI(e.kind));\n  let n = Gc({\n    0: [ko(e.id)],\n    1: (e.relays || []).map((r) => jn.encode(r)),\n    2: e.author ? [ko(e.author)] : [],\n    3: t ? [new Uint8Array(t)] : []\n  });\n  return ns(\"nevent\", n);\n}\nfunction sI(e) {\n  let t = new ArrayBuffer(4);\n  new DataView(t).setUint32(0, e.kind, !1);\n  let n = Gc({\n    0: [jn.encode(e.identifier)],\n    1: (e.relays || []).map((r) => jn.encode(r)),\n    2: [ko(e.pubkey)],\n    3: [new Uint8Array(t)]\n  });\n  return ns(\"naddr\", n);\n}\nfunction cI(e) {\n  let t = Gc({\n    0: [jn.encode(e)]\n  });\n  return ns(\"nrelay\", t);\n}\nfunction Gc(e) {\n  let t = [];\n  return Object.entries(e).reverse().forEach(([n, r]) => {\n    r.forEach((i) => {\n      let o = new Uint8Array(i.length + 2);\n      o.set([parseInt(n)], 0), o.set([i.length], 1), o.set(i, 2), t.push(o);\n    });\n  }), Vc(...t);\n}\nvar rd = {};\nPt(rd, {\n  decrypt: () => lI,\n  encrypt: () => a5\n});\nasync function a5(e, t, n) {\n  const r = e instanceof Uint8Array ? dn(e) : e, i = qo.getSharedSecret(r, \"02\" + t), o = s5(i);\n  let a = Uint8Array.from($g(16)), s = jn.encode(n), c = Bg(o, a).encrypt(s), l = Or.encode(new Uint8Array(c)), d = Or.encode(new Uint8Array(a.buffer));\n  return `${l}?iv=${d}`;\n}\nasync function lI(e, t, n) {\n  const r = e instanceof Uint8Array ? dn(e) : e;\n  let [i, o] = n.split(\"?iv=\"), a = qo.getSharedSecret(r, \"02\" + t), s = s5(a), c = Or.decode(o), l = Or.decode(i), d = Bg(s, c).decrypt(l);\n  return tr.decode(d);\n}\nfunction s5(e) {\n  return e.slice(1, 33);\n}\nvar dI = {};\nPt(dI, {\n  NIP05_REGEX: () => c5,\n  isValid: () => hI,\n  queryProfile: () => l5,\n  searchDomain: () => uI,\n  useFetchImplementation: () => fI\n});\nvar c5 = /^(?:([\\w.+-]+)@)?([\\w_-]+(\\.[\\w_-]+)+)$/, Yc;\ntry {\n  Yc = fetch;\n} catch {\n}\nfunction fI(e) {\n  Yc = e;\n}\nasync function uI(e, t = \"\") {\n  try {\n    const n = `https://${e}/.well-known/nostr.json?name=${t}`;\n    return (await (await Yc(n, { redirect: \"error\" })).json()).names;\n  } catch {\n    return {};\n  }\n}\nasync function l5(e) {\n  var o;\n  const t = e.match(c5);\n  if (!t)\n    return null;\n  const [n, r = \"_\", i] = t;\n  try {\n    const a = `https://${i}/.well-known/nostr.json?name=${r}`, s = await (await Yc(a, { redirect: \"error\" })).json();\n    let c = s.names[r];\n    return c ? { pubkey: c, relays: (o = s.relays) == null ? void 0 : o[c] } : null;\n  } catch {\n    return null;\n  }\n}\nasync function hI(e, t) {\n  let n = await l5(t);\n  return n ? n.pubkey === e : !1;\n}\nvar pI = {};\nPt(pI, {\n  parse: () => gI\n});\nfunction gI(e) {\n  const t = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: []\n  }, n = [];\n  for (const r of e.tags)\n    r[0] === \"e\" && r[1] && n.push(r), r[0] === \"p\" && r[1] && t.profiles.push({\n      pubkey: r[1],\n      relays: r[2] ? [r[2]] : []\n    });\n  for (let r = 0; r < n.length; r++) {\n    const i = n[r], [o, a, s, c] = i, l = {\n      id: a,\n      relays: s ? [s] : []\n    }, d = r === 0, f = r === n.length - 1;\n    if (c === \"root\") {\n      t.root = l;\n      continue;\n    }\n    if (c === \"reply\") {\n      t.reply = l;\n      continue;\n    }\n    if (c === \"mention\") {\n      t.mentions.push(l);\n      continue;\n    }\n    if (d) {\n      t.root = l;\n      continue;\n    }\n    if (f) {\n      t.reply = l;\n      continue;\n    }\n    t.mentions.push(l);\n  }\n  return t;\n}\nvar mI = {};\nPt(mI, {\n  fetchRelayInformation: () => yI,\n  useFetchImplementation: () => vI\n});\nvar d5;\ntry {\n  d5 = fetch;\n} catch {\n}\nfunction vI(e) {\n  d5 = e;\n}\nasync function yI(e) {\n  return await (await fetch(e.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\"), {\n    headers: { Accept: \"application/nostr+json\" }\n  })).json();\n}\nvar bI = {};\nPt(bI, {\n  getPow: () => f5,\n  minePow: () => xI\n});\nfunction f5(e) {\n  let t = 0;\n  for (let n = 0; n < e.length; n++) {\n    const r = parseInt(e[n], 16);\n    if (r === 0)\n      t += 4;\n    else {\n      t += Math.clz32(r) - 28;\n      break;\n    }\n  }\n  return t;\n}\nfunction xI(e, t) {\n  let n = 0;\n  const r = e, i = [\"nonce\", n.toString(), t.toString()];\n  for (r.tags.push(i); ; ) {\n    const o = Math.floor((/* @__PURE__ */ new Date()).getTime() / 1e3);\n    if (o !== r.created_at && (n = 0, r.created_at = o), i[1] = (++n).toString(), r.id = Es(r), f5(r.id) >= t)\n      break;\n  }\n  return r;\n}\nvar wI = {};\nPt(wI, {\n  finishRepostEvent: () => $I,\n  getRepostedEvent: () => CI,\n  getRepostedEventPointer: () => u5\n});\nfunction $I(e, t, n, r) {\n  return jr(\n    {\n      kind: wf,\n      tags: [...e.tags ?? [], [\"e\", t.id, n], [\"p\", t.pubkey]],\n      content: e.content === \"\" ? \"\" : JSON.stringify(t),\n      created_at: e.created_at\n    },\n    r\n  );\n}\nfunction u5(e) {\n  if (e.kind !== wf)\n    return;\n  let t, n;\n  for (let r = e.tags.length - 1; r >= 0 && (t === void 0 || n === void 0); r--) {\n    const i = e.tags[r];\n    i.length >= 2 && (i[0] === \"e\" && t === void 0 ? t = i : i[0] === \"p\" && n === void 0 && (n = i));\n  }\n  if (t !== void 0)\n    return {\n      id: t[1],\n      relays: [t[2], n == null ? void 0 : n[2]].filter((r) => typeof r == \"string\"),\n      author: n == null ? void 0 : n[1]\n    };\n}\nfunction CI(e, { skipVerification: t } = {}) {\n  const n = u5(e);\n  if (n === void 0 || e.content === \"\")\n    return;\n  let r;\n  try {\n    r = JSON.parse(e.content);\n  } catch {\n    return;\n  }\n  if (r.id === n.id && !(!t && !jc(r)))\n    return r;\n}\nvar SI = {};\nPt(SI, {\n  NOSTR_URI_REGEX: () => Xc,\n  parse: () => LI,\n  test: () => MI\n});\nvar Xc = new RegExp(`nostr:(${o5.source})`);\nfunction MI(e) {\n  return typeof e == \"string\" && new RegExp(`^${Xc.source}$`).test(e);\n}\nfunction LI(e) {\n  const t = e.match(new RegExp(`^${Xc.source}$`));\n  if (!t)\n    throw new Error(`Invalid Nostr URI: ${e}`);\n  return {\n    uri: t[0],\n    value: t[1],\n    decoded: Zc(t[1])\n  };\n}\nvar AI = {};\nPt(AI, {\n  finishReactionEvent: () => kI,\n  getReactedEventPointer: () => _I\n});\nfunction kI(e, t, n) {\n  const r = t.tags.filter((i) => i.length >= 2 && (i[0] === \"e\" || i[0] === \"p\"));\n  return jr(\n    {\n      ...e,\n      kind: $f,\n      tags: [...e.tags ?? [], ...r, [\"e\", t.id], [\"p\", t.pubkey]],\n      content: e.content ?? \"+\"\n    },\n    n\n  );\n}\nfunction _I(e) {\n  if (e.kind !== $f)\n    return;\n  let t, n;\n  for (let r = e.tags.length - 1; r >= 0 && (t === void 0 || n === void 0); r--) {\n    const i = e.tags[r];\n    i.length >= 2 && (i[0] === \"e\" && t === void 0 ? t = i : i[0] === \"p\" && n === void 0 && (n = i));\n  }\n  if (!(t === void 0 || n === void 0))\n    return {\n      id: t[1],\n      relays: [t[2], n[2]].filter((r) => r !== void 0),\n      author: n[1]\n    };\n}\nvar EI = {};\nPt(EI, {\n  matchAll: () => TI,\n  regex: () => Mf,\n  replaceAll: () => BI\n});\nvar Mf = () => new RegExp(`\\\\b${Xc.source}\\\\b`, \"g\");\nfunction* TI(e) {\n  const t = e.matchAll(Mf());\n  for (const n of t)\n    try {\n      const [r, i] = n;\n      yield {\n        uri: r,\n        value: i,\n        decoded: Zc(i),\n        start: n.index,\n        end: n.index + r.length\n      };\n    } catch {\n    }\n}\nfunction BI(e, t) {\n  return e.replaceAll(Mf(), (n, r) => t({\n    uri: n,\n    value: r,\n    decoded: Zc(r)\n  }));\n}\nvar II = {};\nPt(II, {\n  channelCreateEvent: () => DI,\n  channelHideMessageEvent: () => OI,\n  channelMessageEvent: () => PI,\n  channelMetadataEvent: () => RI,\n  channelMuteUserEvent: () => HI\n});\nvar DI = (e, t) => {\n  let n;\n  if (typeof e.content == \"object\")\n    n = JSON.stringify(e.content);\n  else if (typeof e.content == \"string\")\n    n = e.content;\n  else\n    return;\n  return jr(\n    {\n      kind: qg,\n      tags: [...e.tags ?? []],\n      content: n,\n      created_at: e.created_at\n    },\n    t\n  );\n}, RI = (e, t) => {\n  let n;\n  if (typeof e.content == \"object\")\n    n = JSON.stringify(e.content);\n  else if (typeof e.content == \"string\")\n    n = e.content;\n  else\n    return;\n  return jr(\n    {\n      kind: Zg,\n      tags: [[\"e\", e.channel_create_event_id], ...e.tags ?? []],\n      content: n,\n      created_at: e.created_at\n    },\n    t\n  );\n}, PI = (e, t) => {\n  const n = [[\"e\", e.channel_create_event_id, e.relay_url, \"root\"]];\n  return e.reply_to_channel_message_event_id && n.push([\"e\", e.reply_to_channel_message_event_id, e.relay_url, \"reply\"]), jr(\n    {\n      kind: Kg,\n      tags: [...n, ...e.tags ?? []],\n      content: e.content,\n      created_at: e.created_at\n    },\n    t\n  );\n}, OI = (e, t) => {\n  let n;\n  if (typeof e.content == \"object\")\n    n = JSON.stringify(e.content);\n  else if (typeof e.content == \"string\")\n    n = e.content;\n  else\n    return;\n  return jr(\n    {\n      kind: Gg,\n      tags: [[\"e\", e.channel_message_event_id], ...e.tags ?? []],\n      content: n,\n      created_at: e.created_at\n    },\n    t\n  );\n}, HI = (e, t) => {\n  let n;\n  if (typeof e.content == \"object\")\n    n = JSON.stringify(e.content);\n  else if (typeof e.content == \"string\")\n    n = e.content;\n  else\n    return;\n  return jr(\n    {\n      kind: Yg,\n      tags: [[\"p\", e.pubkey_to_mute], ...e.tags ?? []],\n      content: n,\n      created_at: e.created_at\n    },\n    t\n  );\n}, UI = {};\nPt(UI, {\n  EMOJI_SHORTCODE_REGEX: () => h5,\n  matchAll: () => NI,\n  regex: () => Lf,\n  replaceAll: () => VI\n});\nvar h5 = /:(\\w+):/, Lf = () => new RegExp(`\\\\B${h5.source}\\\\B`, \"g\");\nfunction* NI(e) {\n  const t = e.matchAll(Lf());\n  for (const n of t)\n    try {\n      const [r, i] = n;\n      yield {\n        shortcode: r,\n        name: i,\n        start: n.index,\n        end: n.index + r.length\n      };\n    } catch {\n    }\n}\nfunction VI(e, t) {\n  return e.replaceAll(Lf(), (n, r) => t({\n    shortcode: n,\n    name: r\n  }));\n}\nvar zI = {};\nPt(zI, {\n  useFetchImplementation: () => WI,\n  validateGithub: () => FI\n});\nvar Af;\ntry {\n  Af = fetch;\n} catch {\n}\nfunction WI(e) {\n  Af = e;\n}\nasync function FI(e, t, n) {\n  try {\n    return await (await Af(`https://gist.github.com/${t}/${n}/raw`)).text() === `Verifying that I control the following Nostr public key: ${e}`;\n  } catch {\n    return !1;\n  }\n}\nvar ua = {};\nPt(ua, {\n  decrypt: () => x5,\n  encrypt: () => b5,\n  getConversationKey: () => m5,\n  v2: () => GI\n});\nvar p5 = 1, g5 = 65535;\nfunction m5(e, t) {\n  const n = qo.getSharedSecret(e, \"02\" + t).subarray(1, 33);\n  return $T(ts, n, \"nip44-v2\");\n}\nfunction v5(e, t) {\n  const n = CT(ts, e, t, 76);\n  return {\n    chacha_key: n.subarray(0, 32),\n    chacha_nonce: n.subarray(32, 44),\n    hmac_key: n.subarray(44, 76)\n  };\n}\nfunction kf(e) {\n  if (!Number.isSafeInteger(e) || e < 1)\n    throw new Error(\"expected positive integer\");\n  if (e <= 32)\n    return 32;\n  const t = 1 << Math.floor(Math.log2(e - 1)) + 1, n = t <= 256 ? 32 : t / 8;\n  return n * (Math.floor((e - 1) / n) + 1);\n}\nfunction jI(e) {\n  if (!Number.isSafeInteger(e) || e < p5 || e > g5)\n    throw new Error(\"invalid plaintext size: must be between 1 and 65535 bytes\");\n  const t = new Uint8Array(2);\n  return new DataView(t.buffer).setUint16(0, e, !1), t;\n}\nfunction qI(e) {\n  const t = jn.encode(e), n = t.length, r = jI(n), i = new Uint8Array(kf(n) - n);\n  return Vc(r, t, i);\n}\nfunction ZI(e) {\n  const t = new DataView(e.buffer).getUint16(0), n = e.subarray(2, 2 + t);\n  if (t < p5 || t > g5 || n.length !== t || e.length !== 2 + kf(t))\n    throw new Error(\"invalid padding\");\n  return tr.decode(n);\n}\nfunction y5(e, t, n) {\n  if (n.length !== 32)\n    throw new Error(\"AAD associated data must be 32 bytes\");\n  const r = Vc(n, t);\n  return Wc(ts, e, r);\n}\nfunction KI(e) {\n  if (typeof e != \"string\")\n    throw new Error(\"payload must be a valid string\");\n  const t = e.length;\n  if (t < 132 || t > 87472)\n    throw new Error(\"invalid payload length: \" + t);\n  if (e[0] === \"#\")\n    throw new Error(\"unknown encryption version\");\n  let n;\n  try {\n    n = Or.decode(e);\n  } catch (o) {\n    throw new Error(\"invalid base64: \" + o.message);\n  }\n  const r = n.length;\n  if (r < 99 || r > 65603)\n    throw new Error(\"invalid data length: \" + r);\n  const i = n[0];\n  if (i !== 2)\n    throw new Error(\"unknown encryption version \" + i);\n  return {\n    nonce: n.subarray(1, 33),\n    ciphertext: n.subarray(33, -32),\n    mac: n.subarray(-32)\n  };\n}\nfunction b5(e, t, n = $g(32)) {\n  const { chacha_key: r, chacha_nonce: i, hmac_key: o } = v5(t, n), a = qI(e), s = Pg(r, i, a), c = y5(o, s, n);\n  return Or.encode(Vc(new Uint8Array([2]), n, s, c));\n}\nfunction x5(e, t) {\n  const { nonce: n, ciphertext: r, mac: i } = KI(e), { chacha_key: o, chacha_nonce: a, hmac_key: s } = v5(t, n), c = y5(s, r, n);\n  if (!rT(c, i))\n    throw new Error(\"invalid MAC\");\n  const l = Pg(o, a, r);\n  return ZI(l);\n}\nvar GI = {\n  utils: {\n    getConversationKey: m5,\n    calcPaddedLen: kf\n  },\n  encrypt: b5,\n  decrypt: x5\n}, YI = {};\nPt(YI, {\n  makeNwcRequestEvent: () => JI,\n  parseConnectionString: () => XI\n});\nfunction XI(e) {\n  const { pathname: t, searchParams: n } = new URL(e), r = t, i = n.get(\"relay\"), o = n.get(\"secret\");\n  if (!r || !i || !o)\n    throw new Error(\"invalid connection string\");\n  return { pubkey: r, relay: i, secret: o };\n}\nasync function JI(e, t, n) {\n  const i = await a5(t, e, JSON.stringify({\n    method: \"pay_invoice\",\n    params: {\n      invoice: n\n    }\n  })), o = {\n    kind: Jg,\n    created_at: Math.round(Date.now() / 1e3),\n    content: i,\n    tags: [[\"p\", e]]\n  };\n  return jr(o, t);\n}\nvar QI = {};\nPt(QI, {\n  getZapEndpoint: () => tD,\n  makeZapReceipt: () => iD,\n  makeZapRequest: () => nD,\n  useFetchImplementation: () => eD,\n  validateZapRequest: () => rD\n});\nvar _f;\ntry {\n  _f = fetch;\n} catch {\n}\nfunction eD(e) {\n  _f = e;\n}\nasync function tD(e) {\n  try {\n    let t = \"\", { lud06: n, lud16: r } = JSON.parse(e.content);\n    if (n) {\n      let { words: a } = _o.decode(n, 1e3), s = _o.fromWords(a);\n      t = tr.decode(s);\n    } else if (r) {\n      let [a, s] = r.split(\"@\");\n      t = new URL(`/.well-known/lnurlp/${a}`, `https://${s}`).toString();\n    } else\n      return null;\n    let o = await (await _f(t)).json();\n    if (o.allowsNostr && o.nostrPubkey)\n      return o.callback;\n  } catch {\n  }\n  return null;\n}\nfunction nD({\n  profile: e,\n  event: t,\n  amount: n,\n  relays: r,\n  comment: i = \"\"\n}) {\n  if (!n)\n    throw new Error(\"amount not given\");\n  if (!e)\n    throw new Error(\"profile not given\");\n  let o = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: i,\n    tags: [\n      [\"p\", e],\n      [\"amount\", n.toString()],\n      [\"relays\", ...r]\n    ]\n  };\n  return t && o.tags.push([\"e\", t]), o;\n}\nfunction rD(e) {\n  let t;\n  try {\n    t = JSON.parse(e);\n  } catch {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!Hg(t))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!jc(t))\n    return \"Invalid signature on zap request.\";\n  let n = t.tags.find(([o, a]) => o === \"p\" && a);\n  if (!n)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!n[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let r = t.tags.find(([o, a]) => o === \"e\" && a);\n  return r && !r[1].match(/^[a-f0-9]{64}$/) ? \"Zap request 'e' tag is not valid hex.\" : t.tags.find(([o, a]) => o === \"relays\" && a) ? null : \"Zap request doesn't have a 'relays' tag.\";\n}\nfunction iD({\n  zapRequest: e,\n  preimage: t,\n  bolt11: n,\n  paidAt: r\n}) {\n  let i = JSON.parse(e), o = i.tags.filter(([s]) => s === \"e\" || s === \"p\" || s === \"a\"), a = {\n    kind: 9735,\n    created_at: Math.round(r.getTime() / 1e3),\n    content: \"\",\n    tags: [...o, [\"P\", i.pubkey], [\"bolt11\", n], [\"description\", e]]\n  };\n  return t && a.tags.push([\"preimage\", t]), a;\n}\nvar oD = {};\nPt(oD, {\n  getToken: () => aD,\n  hashPayload: () => Ef,\n  unpackEventFromToken: () => $5,\n  validateEvent: () => k5,\n  validateEventKind: () => S5,\n  validateEventMethodTag: () => L5,\n  validateEventPayloadTag: () => A5,\n  validateEventTimestamp: () => C5,\n  validateEventUrlTag: () => M5,\n  validateToken: () => sD\n});\nvar w5 = \"Nostr \";\nasync function aD(e, t, n, r = !1, i) {\n  const o = {\n    kind: Cf,\n    tags: [\n      [\"u\", e],\n      [\"method\", t]\n    ],\n    created_at: Math.round((/* @__PURE__ */ new Date()).getTime() / 1e3),\n    content: \"\"\n  };\n  i && o.tags.push([\"payload\", Ef(i)]);\n  const a = await n(o);\n  return (r ? w5 : \"\") + Or.encode(jn.encode(JSON.stringify(a)));\n}\nasync function sD(e, t, n) {\n  const r = await $5(e).catch((o) => {\n    throw o;\n  });\n  return await k5(r, t, n).catch((o) => {\n    throw o;\n  });\n}\nasync function $5(e) {\n  if (!e)\n    throw new Error(\"Missing token\");\n  e = e.replace(w5, \"\");\n  const t = tr.decode(Or.decode(e));\n  if (!t || t.length === 0 || !t.startsWith(\"{\"))\n    throw new Error(\"Invalid token\");\n  return JSON.parse(t);\n}\nfunction C5(e) {\n  return e.created_at ? Math.round((/* @__PURE__ */ new Date()).getTime() / 1e3) - e.created_at < 60 : !1;\n}\nfunction S5(e) {\n  return e.kind === Cf;\n}\nfunction M5(e, t) {\n  const n = e.tags.find((r) => r[0] === \"u\");\n  return n ? n.length > 0 && n[1] === t : !1;\n}\nfunction L5(e, t) {\n  const n = e.tags.find((r) => r[0] === \"method\");\n  return n ? n.length > 0 && n[1].toLowerCase() === t.toLowerCase() : !1;\n}\nfunction Ef(e) {\n  const t = ts(jn.encode(JSON.stringify(e)));\n  return dn(t);\n}\nfunction A5(e, t) {\n  const n = e.tags.find((i) => i[0] === \"payload\");\n  if (!n)\n    return !1;\n  const r = Ef(t);\n  return n.length > 0 && n[1] === r;\n}\nasync function k5(e, t, n, r) {\n  if (!jc(e))\n    throw new Error(\"Invalid nostr event, signature invalid\");\n  if (!S5(e))\n    throw new Error(\"Invalid nostr event, kind invalid\");\n  if (!C5(e))\n    throw new Error(\"Invalid nostr event, created_at timestamp invalid\");\n  if (!M5(e, t))\n    throw new Error(\"Invalid nostr event, url tag invalid\");\n  if (!L5(e, n))\n    throw new Error(\"Invalid nostr event, method tag invalid\");\n  if (r && typeof r == \"object\" && Object.keys(r).length > 0 && !A5(e, r))\n    throw new Error(\"Invalid nostr event, payload tag does not match request body hash\");\n  return !0;\n}\nclass Ko extends Error {\n  constructor(n, r) {\n    super(n);\n    we(this, \"code\");\n    this.code = r;\n  }\n}\nclass cD extends Ko {\n}\nclass _5 extends Ko {\n}\nclass lD extends _5 {\n}\nclass dD extends _5 {\n}\nclass fD extends Ko {\n}\nclass uD extends Ko {\n}\nclass hD extends Ko {\n}\nclass yN extends Ko {\n}\nclass tc {\n  constructor(t, n, r) {\n    we(this, \"relay\");\n    we(this, \"relayUrl\");\n    we(this, \"walletPubkey\");\n    we(this, \"secret\");\n    we(this, \"lud16\");\n    we(this, \"useNip44\");\n    we(this, \"clearUserAuth\");\n    we(this, \"tokenRefresh\");\n    this.initNwcConnection(tc.parseWalletConnectUrl(t)), this.clearUserAuth = n, this.useNip44 = !!r, r && (this.tokenRefresh = r);\n  }\n  static parseWalletConnectUrl(t) {\n    t = t.replace(\"nostrwalletconnect://\", \"http://\").replace(\"nostr+walletconnect://\", \"http://\").replace(\"nostrwalletconnect:\", \"http://\").replace(\"nostr+walletconnect:\", \"http://\");\n    const n = new URL(t), r = n.searchParams.get(\"relay\");\n    if (!r)\n      throw new Error(\"No relay URL found in connection string\");\n    const i = n.searchParams.get(\"secret\");\n    if (!i)\n      throw new Error(\"No secret key found in connection string\");\n    const o = {\n      walletPubkey: n.host,\n      relayUrl: r,\n      secret: pD(i)\n    }, a = n.searchParams.get(\"lud16\");\n    return a && (o.lud16 = a), o;\n  }\n  initNwcConnection(t) {\n    this.relayUrl = t.relayUrl, this.relay = new i5(this.relayUrl), this.secret = t.secret, this.lud16 = t.lud16, this.walletPubkey = t.walletPubkey, globalThis.WebSocket === void 0 && console.error(\n      \"WebSocket is undefined. Make sure to `import websocket-polyfill` for nodejs environments\"\n    );\n  }\n  get publicKey() {\n    if (!this.secret)\n      throw new Error(\"Missing secret key\");\n    return TT(this.secret);\n  }\n  signEvent(t) {\n    if (!this.secret)\n      throw new Error(\"Missing secret key\");\n    return Promise.resolve(jr(t, this.secret));\n  }\n  close() {\n    return this.relay.close();\n  }\n  async encrypt(t, n) {\n    if (!this.secret)\n      throw new Error(\"Missing secret\");\n    if (this.useNip44) {\n      const r = await ua.getConversationKey(this.secret, t);\n      return ua.encrypt(n, r);\n    }\n    return await rd.encrypt(this.secret, t, n);\n  }\n  async decrypt(t, n) {\n    if (!this.secret)\n      throw new Error(\"Missing secret\");\n    if (this.useNip44) {\n      const r = await ua.getConversationKey(this.secret, t);\n      return ua.decrypt(n, r);\n    }\n    return await rd.decrypt(this.secret, t, n);\n  }\n  async getInfo() {\n    try {\n      return await this.executeNip47Request(\n        \"get_info\",\n        {},\n        (n) => !!n.methods\n      );\n    } catch (t) {\n      throw console.error(\"Failed to request get_info\", t), t;\n    }\n  }\n  async getBudget() {\n    try {\n      return await this.executeNip47Request(\n        \"get_budget\",\n        {},\n        (n) => !0\n      );\n    } catch (t) {\n      throw console.error(\"Failed to request get_budget\", t), t;\n    }\n  }\n  async getBalance(t = {}) {\n    try {\n      return await this.executeNip47Request(\n        \"get_balance\",\n        t,\n        (r) => r.balance !== void 0\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request get_balance\", n), n;\n    }\n  }\n  async payInvoice(t) {\n    try {\n      return await this.executeNip47Request(\n        \"pay_invoice\",\n        t,\n        (r) => !!r.preimage\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request pay_invoice\", n), n;\n    }\n  }\n  async payKeysend(t) {\n    try {\n      return await this.executeNip47Request(\n        \"pay_keysend\",\n        t,\n        (r) => !!r.preimage\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request pay_keysend\", n), n;\n    }\n  }\n  async makeInvoice(t) {\n    try {\n      if (!t.amount)\n        throw new Error(\"No amount specified\");\n      return await this.executeNip47Request(\n        \"make_invoice\",\n        t,\n        (r) => !!r.invoice\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request make_invoice\", n), n;\n    }\n  }\n  async lookupInvoice(t) {\n    try {\n      return await this.executeNip47Request(\n        \"lookup_invoice\",\n        t,\n        (r) => !!r.invoice\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request lookup_invoice\", n), n;\n    }\n  }\n  async listTransactions(t) {\n    try {\n      return await this.executeNip47Request(\n        \"list_transactions\",\n        t,\n        (r) => !!r.transactions\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request list_transactions\", n), n;\n    }\n  }\n  async lookupUser(t) {\n    try {\n      return await this.executeNip47Request(\n        \"lookup_user\",\n        t,\n        (r) => !!r.currencies\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request lookup_user\", n), n;\n    }\n  }\n  async fetchQuote(t) {\n    try {\n      return await this.executeNip47Request(\n        \"fetch_quote\",\n        t,\n        (r) => !!r.multiplier\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request fetch_quote\", n), n;\n    }\n  }\n  async executeQuote(t) {\n    try {\n      return await this.executeNip47Request(\n        \"execute_quote\",\n        t,\n        (r) => !!r.preimage\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request execute_quote\", n), n;\n    }\n  }\n  async payToAddress(t) {\n    try {\n      return await this.executeNip47Request(\n        \"pay_to_address\",\n        t,\n        (r) => !!r.preimage\n      );\n    } catch (n) {\n      throw console.error(\"Failed to request pay_to_address\", n), n;\n    }\n  }\n  async executeNip47Request(t, n, r) {\n    return await this._checkConnected(), new Promise((i, o) => {\n      (async () => {\n        const a = {\n          method: t,\n          params: n\n        }, s = await this.encrypt(\n          this.walletPubkey,\n          JSON.stringify(a)\n        ), c = {\n          kind: 23194,\n          created_at: Math.floor(Date.now() / 1e3),\n          tags: [[\"p\", this.walletPubkey]],\n          content: s,\n          pubkey: this.publicKey\n        }, l = await this.signEvent(c), d = this.relay.subscribe(\n          [\n            {\n              kinds: [23195],\n              authors: [this.walletPubkey],\n              \"#e\": [l.id]\n            }\n          ],\n          {\n            onevent: async (m) => {\n              var T, N, W;\n              clearTimeout(g), d.close();\n              const C = await this.decrypt(\n                this.walletPubkey,\n                m.content\n              );\n              let S;\n              try {\n                S = JSON.parse(C);\n              } catch {\n                clearTimeout(g), d.close(), o(\n                  new uD(\n                    \"failed to deserialize response\",\n                    \"INTERNAL\"\n                  )\n                );\n                return;\n              }\n              S.result ? r(S.result) ? i(S.result) : (clearTimeout(g), d.close(), o(\n                new hD(\n                  \"response from NWC failed validation: \" + JSON.stringify(S.result),\n                  \"INTERNAL\"\n                )\n              )) : (clearTimeout(g), d.close(), ((T = S.error) == null ? void 0 : T.code) === \"UNAUTHORIZED\" && this.clearUserAuth(), o(\n                new cD(\n                  ((N = S.error) == null ? void 0 : N.message) || \"unknown Error\",\n                  ((W = S.error) == null ? void 0 : W.code) || \"INTERNAL\"\n                )\n              ));\n            }\n          }\n        );\n        function f() {\n          d.close(), o(\n            new dD(\n              `reply timeout: event ${l.id}`,\n              \"INTERNAL\"\n            )\n          );\n        }\n        const g = setTimeout(f, 6e4);\n        function b() {\n          d.close(), o(\n            new lD(\n              `publish timeout: ${l.id}`,\n              \"INTERNAL\"\n            )\n          );\n        }\n        const x = setTimeout(b, 5e3);\n        try {\n          await this.relay.publish(l), clearTimeout(x);\n        } catch (m) {\n          clearTimeout(x), o(\n            new fD(\n              `failed to publish: ${m}`,\n              \"INTERNAL\"\n            )\n          );\n        }\n      })();\n    });\n  }\n  async _checkConnected() {\n    if (!this.secret)\n      throw new Error(\"Missing secret key\");\n    if (this.tokenRefresh) {\n      const { nwcConnectionUri: t } = await this.tokenRefresh();\n      if (!t)\n        throw new Error(\"Missing nwcConnectionUri upon refreshing token\");\n      const n = tc.parseWalletConnectUrl(t);\n      n.secret !== this.secret && this.initNwcConnection(n);\n    }\n    await this.relay.connect();\n  }\n}\nconst pD = (e) => {\n  if (e.length % 2 !== 0)\n    throw new Error(\"Invalid hex string\");\n  return new Uint8Array(\n    e.match(/.{1,2}/g).map((t) => parseInt(t, 16))\n  );\n}, gD = Pc((e) => ({\n  nwcRequester: void 0,\n  setNwcRequester: (t, n, r) => e((i) => i.nwcRequester ? i : {\n    nwcRequester: new tc(\n      t,\n      n,\n      r\n    )\n  }),\n  resetNwcRequester: () => e({ nwcRequester: void 0 })\n})), Jc = () => {\n  const { nwcRequester: e, setNwcRequester: t, resetNwcRequester: n } = gD(), {\n    isConnectionValid: r,\n    nwcConnectionUri: i,\n    oAuthTokenExchange: o,\n    clearUserAuth: a,\n    token: s\n  } = vn();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    r() && i && (s ? t(i, a, o) : t(i, a));\n  }, [\n    r,\n    i,\n    s,\n    o,\n    t,\n    a\n  ]), { nwcRequester: e, resetNwcRequester: n };\n}, mD = {\n  code: \"SAT\",\n  name: \"Satoshi\",\n  symbol: \"\",\n  decimals: 0\n}, vD = (e, t) => {\n  var a;\n  const [n, r] = ((a = e == null ? void 0 : e.budget) == null ? void 0 : a.split(\".\")) || [];\n  if (!n || !r)\n    return mD;\n  const i = r.split(\"/\")[0], o = t.find(\n    (s) => s.code.toLowerCase() === i.toLowerCase()\n  );\n  if (!o)\n    throw new Error(\n      \"Connection currency not found in currencies provided by NWC\"\n    );\n  return o;\n}, yD = () => {\n  const [e, t] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), [n, r] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0), { nwcRequester: i } = Jc(), { token: o } = vn();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    i && (async (s) => {\n      r(!0);\n      try {\n        const l = (await s.getInfo()).currencies;\n        if (!l)\n          throw new Error(\"Currencies not found in get_info response\");\n        const d = vD(\n          o,\n          l.map((f) => ({\n            code: f.currency.code,\n            name: f.currency.name,\n            symbol: f.currency.symbol,\n            decimals: f.currency.decimals\n          }))\n        );\n        t(d);\n      } catch (c) {\n        console.error(\"Error fetching currency:\", c);\n      }\n      r(!1);\n    })(i);\n  }, [i, o]), { currency: e, isLoading: n };\n}, bD = () => {\n  const [e, t] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), [n, r] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0), { nwcRequester: i } = Jc(), { currency: o, isLoading: a } = yD();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    i && !a && (async (c) => {\n      r(!0);\n      try {\n        const l = await c.getBalance({\n          currency_code: (o == null ? void 0 : o.code) || \"SAT\"\n        });\n        t(l);\n      } catch (l) {\n        console.error(\"Error fetching balance:\", l);\n      }\n      r(!1);\n    })(i);\n  }, [i, a, o]), { balance: e, isLoading: n };\n}, xD = () => {\n  const [e, t] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), [n, r] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0), [i, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), { nwcRequester: a } = Jc(), { token: s } = vn();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    a && (async (l) => {\n      r(!0);\n      try {\n        const d = await l.getBudget();\n        t(d);\n      } catch (d) {\n        console.error(\"Error fetching getBudget:\", d), o(d.message);\n      }\n      r(!1);\n    })(a);\n  }, [a, s]), { getBudgetResponse: e, isLoading: n, error: i };\n}, wD = (e, t) => {\n  const n = fo(e * 1e3);\n  if (t.expiration && n.isAfter(fo(t.expiration)))\n    return `Expires in ${n.diff(t.expiration, \"days\")} days`;\n  const r = n.diff(fo(), \"days\");\n  return r === 0 ? `Renews today at ${n.format(\"HH:mm\")}` : r === 1 ? `Renews tomorrow at ${n.format(\"HH:mm\")}` : `Renews in ${r} days`;\n}, Mh = () => {\n  const { discoveryDocument: e, isLoading: t } = M_(), { nwcExpiresAt: n, address: r } = vn(), { balance: i, isLoading: o } = bD(), { getBudgetResponse: a, isLoading: s } = xD(), { setStep: c } = Kn(), l = o || s || t;\n  if (!l && !a)\n    return /* @__PURE__ */ p(Lh, { children: \"Error loading currency data\" });\n  const d = () => {\n    c(kt.DisconnectConfirmation);\n  }, f = fo(n).format(\"YYYY-MM-DD\"), g = Math.round(\n    ((a == null ? void 0 : a.total_budget) || 0) / 1e3\n  ), b = Math.round(\n    ((a == null ? void 0 : a.used_budget) || 0) / 1e3\n  ), x = a != null && a.currency ? {\n    code: a.currency.code,\n    name: a.currency.name,\n    symbol: a.currency.symbol,\n    decimals: a.currency.decimals\n  } : {\n    code: \"SAT\",\n    name: \"Satoshi\",\n    symbol: \"\",\n    decimals: 0\n  }, m = {\n    amountInLowestDenom: a != null && a.currency ? a.currency.total_budget : g,\n    amountInLowestDenomUsed: a != null && a.currency ? a.currency.used_budget : b,\n    limitEnabled: !!(a != null && a.total_budget),\n    currency: x,\n    renewalPeriod: a == null ? void 0 : a.renewal_period,\n    expiration: f\n  };\n  let C = \"\";\n  m.limitEnabled && (a != null && a.renews_at) && (C = wD(a.renews_at, m) || \"\");\n  const S = m.renewalPeriod !== \"never\" ? `${m.renewalPeriod} spending limit remaining` : \"\";\n  return /* @__PURE__ */ q(Lh, { children: [\n    /* @__PURE__ */ q($D, { children: [\n      /* @__PURE__ */ p(\n        R_,\n        {\n          address: r,\n          connection: m,\n          balance: {\n            amountInLowestDenom: (i == null ? void 0 : i.balance) || 0,\n            currency: x\n          },\n          isLoading: l\n        }\n      ),\n      /* @__PURE__ */ q(CD, { children: [\n        l ? /* @__PURE__ */ q(ps, { children: [\n          /* @__PURE__ */ p(no, { width: 20, height: 20 }),\n          /* @__PURE__ */ p(no, { width: 238, height: 18 })\n        ] }) : i ? /* @__PURE__ */ q(ps, { children: [\n          /* @__PURE__ */ p(vt, { name: \"Limit\", width: 16 }),\n          /* @__PURE__ */ p(Ah, { children: m.limitEnabled ? /* @__PURE__ */ q(xt, { children: [\n            /* @__PURE__ */ p(\n              to,\n              {\n                size: \"Large\",\n                content: F1({\n                  amountInLowestDenom: m.amountInLowestDenom - m.amountInLowestDenomUsed,\n                  currency: x\n                })\n              }\n            ),\n            \" \",\n            /* @__PURE__ */ p(\n              Ks,\n              {\n                size: \"Large\",\n                content: `${S}${S && C ? \" · \" : \"\"}${C}`\n              }\n            )\n          ] }) : /* @__PURE__ */ p(to, { content: \"No spending limit set\" }) })\n        ] }) : null,\n        l ? /* @__PURE__ */ q(ps, { children: [\n          /* @__PURE__ */ p(no, { width: 20, height: 20 }),\n          /* @__PURE__ */ p(no, { width: 214, height: 18 })\n        ] }) : /* @__PURE__ */ q(ps, { children: [\n          /* @__PURE__ */ p(vt, { name: \"CalendarClock\", width: 16 }),\n          /* @__PURE__ */ p(Ah, { children: f ? /* @__PURE__ */ q(xt, { children: [\n            /* @__PURE__ */ p(Ks, { size: \"Large\", content: \"Connection expires\" }),\n            \" \",\n            /* @__PURE__ */ p(\n              to,\n              {\n                size: \"Large\",\n                content: fo(f).format(\"MMM DD, YYYY\")\n              }\n            )\n          ] }) : /* @__PURE__ */ p(to, { content: \"No expiration\" }) })\n        ] })\n      ] })\n    ] }),\n    /* @__PURE__ */ q(SD, { children: [\n      /* @__PURE__ */ p(\n        Dt,\n        {\n          icon: { name: \"LinkIcon\" },\n          text: \"Manage connection\",\n          kind: \"secondary\",\n          loading: t,\n          externalLink: e && e.connection_management_endpoint ? `${new URL(e.connection_management_endpoint)}` : void 0,\n          fullWidth: !0\n        }\n      ),\n      /* @__PURE__ */ p(\n        Dt,\n        {\n          icon: { name: \"Logout\" },\n          text: \"Disconnect\",\n          kind: \"warning\",\n          onClick: d,\n          fullWidth: !0\n        }\n      )\n    ] })\n  ] });\n}, Lh = G.div`\n  display: flex;\n  flex-direction: column;\n  padding: 24px 32px 32px 32px;\n  gap: 24px;\n`, $D = G.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 16px;\n  border: 1px solid #c0c9d6;\n`, CD = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 24px;\n`, ps = G.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n`, Ah = G.div``, SD = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\nfunction Go(e) {\n  const t = x3(e);\n  let n = e.children || null;\n  return e.content && (n = $o(e.content)), /* @__PURE__ */ p(w3, Ie(ve({}, t), { children: n }));\n}\nfunction Ni(e) {\n  const t = y3(e);\n  let n = e.children || null;\n  return e.content && (n = $o(e.content)), /* @__PURE__ */ p(b3, Ie(ve({}, t), { children: n }));\n}\nconst MD = () => {\n  const { setStep: e, onBack: t } = Kn(), { clearUserAuth: n } = vn();\n  return /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ p(LD, { children: /* @__PURE__ */ q(AD, { children: [\n      /* @__PURE__ */ p(Ni, { size: \"Large\", content: \"Disconnect now\" }),\n      /* @__PURE__ */ p(\n        Go,\n        {\n          size: \"Large\",\n          content: \"You will no longer be able to use your UMA with this app.\",\n          color: [\"content\", \"secondary\"]\n        }\n      )\n    ] }) }),\n    /* @__PURE__ */ q(kD, { children: [\n      /* @__PURE__ */ p(\n        Dt,\n        {\n          text: \"Disconnect\",\n          onClick: () => {\n            n(), e(kt.DisconnectSuccess);\n          },\n          typography: {\n            type: \"Title\"\n          },\n          kind: \"quaternary\",\n          fullWidth: !0\n        }\n      ),\n      /* @__PURE__ */ p(\n        Dt,\n        {\n          text: \"Cancel\",\n          onClick: t,\n          typography: {\n            type: \"Title\"\n          },\n          kind: \"tertiary\",\n          fullWidth: !0\n        }\n      )\n    ] })\n  ] });\n}, LD = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 32px 0px 32px;\n  gap: 24px;\n`, AD = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 300px;\n  gap: 8px;\n  text-align: center;\n`, kD = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n  padding: 32px;\n`, _D = () => {\n  const { setIsModalOpen: e } = Kn();\n  return /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ q(ED, { children: [\n      /* @__PURE__ */ p(ID, { children: /* @__PURE__ */ p(\n        \"svg\",\n        {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"41\",\n          height: \"40\",\n          viewBox: \"0 0 41 40\",\n          fill: \"none\",\n          children: /* @__PURE__ */ p(\n            \"path\",\n            {\n              d: \"M5.5 25L16.4813 33.236C16.8567 33.5175 17.3905 33.4338 17.6615 33.0507L36.3333 6.66667\",\n              stroke: \"white\",\n              strokeWidth: \"2.5\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }\n          )\n        }\n      ) }),\n      /* @__PURE__ */ q(TD, { children: [\n        /* @__PURE__ */ p(Ni, { size: \"Large\", content: \"Your UMA is disconnected\" }),\n        /* @__PURE__ */ p(\n          Go,\n          {\n            size: \"Large\",\n            content: \"All access to this UMA has been revoked.\",\n            color: [\"content\", \"secondary\"]\n          }\n        )\n      ] })\n    ] }),\n    /* @__PURE__ */ p(BD, { children: /* @__PURE__ */ p(\n      Dt,\n      {\n        text: \"Done\",\n        onClick: () => {\n          e(!1);\n        },\n        typography: {\n          type: \"Title\"\n        },\n        kind: \"tertiary\",\n        fullWidth: !0\n      }\n    ) })\n  ] });\n}, ED = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 32px 0px 32px;\n  gap: 24px;\n`, TD = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`, BD = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n  padding: 32px;\n`, ID = G.div`\n  display: flex;\n  width: 96px;\n  height: 96px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 999px;\n  background: #19981e;\n`, DD = () => {\n  const { setIsModalOpen: e } = Kn(), { address: t } = vn();\n  return /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ q(RD, { children: [\n      /* @__PURE__ */ p(OD, { children: /* @__PURE__ */ p(HD, { children: /* @__PURE__ */ p(o9, { address: t }) }) }),\n      /* @__PURE__ */ q(PD, { children: [\n        /* @__PURE__ */ p(Ni, { size: \"Large\", content: \"You're connected\" }),\n        /* @__PURE__ */ p(\n          Go,\n          {\n            size: \"Large\",\n            content: \"You can now use your UMA\",\n            color: [\"content\", \"secondary\"]\n          }\n        )\n      ] })\n    ] }),\n    /* @__PURE__ */ p(UD, { children: /* @__PURE__ */ p(\n      Dt,\n      {\n        text: \"Done\",\n        onClick: () => e(!1),\n        typography: {\n          type: \"Title\"\n        },\n        kind: \"secondary\",\n        fullWidth: !0\n      }\n    ) })\n  ] });\n}, RD = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 32px 0px 32px;\n  gap: 24px;\n`, PD = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 300px;\n`, OD = G.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 16px 0;\n`, HD = G.div`\n  padding: 12px;\n  align-items: center;\n`, UD = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n  padding: 32px;\n`, Qc = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  transformPagePoint: (e) => e,\n  isStatic: !1,\n  reducedMotion: \"never\"\n}), el = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({}), Tf = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null), Bf = typeof window < \"u\", E5 = Bf ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect, T5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({ strict: !1 }), tl = (e) => e.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase(), ND = \"framerAppearId\", B5 = \"data-\" + tl(ND), VD = {\n  skipAnimations: !1,\n  useManualTiming: !1\n};\nfunction zD(e) {\n  let t = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ new Set(), r = !1, i = !1;\n  const o = /* @__PURE__ */ new WeakSet();\n  let a = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: !1\n  };\n  function s(l) {\n    o.has(l) && (c.schedule(l), e()), l(a);\n  }\n  const c = {\n    /**\n     * Schedule a process to run on the next frame.\n     */\n    schedule: (l, d = !1, f = !1) => {\n      const b = f && r ? t : n;\n      return d && o.add(l), b.has(l) || b.add(l), l;\n    },\n    /**\n     * Cancel the provided callback from running on the next frame.\n     */\n    cancel: (l) => {\n      n.delete(l), o.delete(l);\n    },\n    /**\n     * Execute all schedule callbacks.\n     */\n    process: (l) => {\n      if (a = l, r) {\n        i = !0;\n        return;\n      }\n      r = !0, [t, n] = [n, t], n.clear(), t.forEach(s), r = !1, i && (i = !1, c.process(l));\n    }\n  };\n  return c;\n}\nconst gs = [\n  \"read\",\n  // Read\n  \"resolveKeyframes\",\n  // Write/Read/Write/Read\n  \"update\",\n  // Compute\n  \"preRender\",\n  // Compute\n  \"render\",\n  // Write\n  \"postRender\"\n  // Compute\n], WD = 40;\nfunction I5(e, t) {\n  let n = !1, r = !0;\n  const i = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: !1\n  }, o = () => n = !0, a = gs.reduce((S, T) => (S[T] = zD(o), S), {}), { read: s, resolveKeyframes: c, update: l, preRender: d, render: f, postRender: g } = a, b = () => {\n    const S = performance.now();\n    n = !1, i.delta = r ? 1e3 / 60 : Math.max(Math.min(S - i.timestamp, WD), 1), i.timestamp = S, i.isProcessing = !0, s.process(i), c.process(i), l.process(i), d.process(i), f.process(i), g.process(i), i.isProcessing = !1, n && t && (r = !1, e(b));\n  }, x = () => {\n    n = !0, r = !0, i.isProcessing || e(b);\n  };\n  return { schedule: gs.reduce((S, T) => {\n    const N = a[T];\n    return S[T] = (W, U = !1, F = !1) => (n || x(), N.schedule(W, U, F)), S;\n  }, {}), cancel: (S) => {\n    for (let T = 0; T < gs.length; T++)\n      a[gs[T]].cancel(S);\n  }, state: i, steps: a };\n}\nconst { schedule: If, cancel: bN } = I5(queueMicrotask, !1);\nfunction io(e) {\n  return e && typeof e == \"object\" && Object.prototype.hasOwnProperty.call(e, \"current\");\n}\nconst D5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nlet kh = !1;\nfunction FD(e, t, n, r, i) {\n  var o;\n  const { visualElement: a } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(el), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(T5), c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Tf), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Qc).reducedMotion, d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  r = r || s.renderer, !d.current && r && (d.current = r(e, {\n    visualState: t,\n    parent: a,\n    props: n,\n    presenceContext: c,\n    blockInitialAnimation: c ? c.initial === !1 : !1,\n    reducedMotionConfig: l\n  }));\n  const f = d.current, g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(D5);\n  f && !f.projection && i && (f.type === \"html\" || f.type === \"svg\") && qD(d.current, n, i, g), (0,react__WEBPACK_IMPORTED_MODULE_0__.useInsertionEffect)(() => {\n    f && f.update(n, c);\n  });\n  const b = n[B5], x = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!!b && !window.MotionHandoffIsComplete && ((o = window.MotionHasOptimisedAnimation) === null || o === void 0 ? void 0 : o.call(window, b)));\n  return E5(() => {\n    f && (f.updateFeatures(), If.render(f.render), x.current && f.animationState && f.animationState.animateChanges());\n  }), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    f && (!x.current && f.animationState && f.animationState.animateChanges(), x.current = !1, kh || (kh = !0, queueMicrotask(jD)));\n  }), f;\n}\nfunction jD() {\n  window.MotionHandoffIsComplete = !0;\n}\nfunction qD(e, t, n, r) {\n  const { layoutId: i, layout: o, drag: a, dragConstraints: s, layoutScroll: c, layoutRoot: l } = t;\n  e.projection = new n(e.latestValues, t[\"data-framer-portal-id\"] ? void 0 : R5(e.parent)), e.projection.setOptions({\n    layoutId: i,\n    layout: o,\n    alwaysMeasureLayout: !!a || s && io(s),\n    visualElement: e,\n    /**\n     * TODO: Update options in an effect. This could be tricky as it'll be too late\n     * to update by the time layout animations run.\n     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n     * ensuring it gets called if there's no potential layout animations.\n     *\n     */\n    animationType: typeof o == \"string\" ? o : \"both\",\n    initialPromotionConfig: r,\n    layoutScroll: c,\n    layoutRoot: l\n  });\n}\nfunction R5(e) {\n  if (e)\n    return e.options.allowProjection !== !1 ? e.projection : R5(e.parent);\n}\nfunction ZD(e, t, n) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (r) => {\n      r && e.mount && e.mount(r), t && (r ? t.mount(r) : t.unmount()), n && (typeof n == \"function\" ? n(r) : io(n) && (n.current = r));\n    },\n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [t]\n  );\n}\nfunction Pa(e) {\n  return typeof e == \"string\" || Array.isArray(e);\n}\nfunction Oa(e) {\n  return e !== null && typeof e == \"object\" && typeof e.start == \"function\";\n}\nconst Df = [\n  \"animate\",\n  \"whileInView\",\n  \"whileFocus\",\n  \"whileHover\",\n  \"whileTap\",\n  \"whileDrag\",\n  \"exit\"\n], Rf = [\"initial\", ...Df];\nfunction nl(e) {\n  return Oa(e.animate) || Rf.some((t) => Pa(e[t]));\n}\nfunction P5(e) {\n  return !!(nl(e) || e.variants);\n}\nfunction KD(e, t) {\n  if (nl(e)) {\n    const { initial: n, animate: r } = e;\n    return {\n      initial: n === !1 || Pa(n) ? n : void 0,\n      animate: Pa(r) ? r : void 0\n    };\n  }\n  return e.inherit !== !1 ? t : {};\n}\nfunction GD(e) {\n  const { initial: t, animate: n } = KD(e, (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(el));\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({ initial: t, animate: n }), [_h(t), _h(n)]);\n}\nfunction _h(e) {\n  return Array.isArray(e) ? e.join(\" \") : e;\n}\nconst Eh = {\n  animation: [\n    \"animate\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"exit\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileDrag\"\n  ],\n  exit: [\"exit\"],\n  drag: [\"drag\", \"dragControls\"],\n  focus: [\"whileFocus\"],\n  hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n  tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n  pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n  inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n  layout: [\"layout\", \"layoutId\"]\n}, Eo = {};\nfor (const e in Eh)\n  Eo[e] = {\n    isEnabled: (t) => Eh[e].some((n) => !!t[n])\n  };\nfunction YD(e) {\n  for (const t in e)\n    Eo[t] = {\n      ...Eo[t],\n      ...e[t]\n    };\n}\nconst O5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({}), XD = Symbol.for(\"motionComponentSymbol\"), Xt = (e) => e;\nvar JD = {};\nlet Yo = Xt, ci = Xt;\nJD.NODE_ENV !== \"production\" && (Yo = (e, t) => {\n  !e && typeof console < \"u\" && console.warn(t);\n}, ci = (e, t) => {\n  if (!e)\n    throw new Error(t);\n});\nvar QD = {};\nfunction eR({ preloadedFeatures: e, createVisualElement: t, useRender: n, useVisualState: r, Component: i }) {\n  e && YD(e);\n  function o(s, c) {\n    let l;\n    const d = {\n      ...(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Qc),\n      ...s,\n      layoutId: tR(s)\n    }, { isStatic: f } = d, g = GD(s), b = r(s, f);\n    if (!f && Bf) {\n      nR(d, e);\n      const x = rR(d);\n      l = x.MeasureLayout, g.visualElement = FD(i, b, d, t, x.ProjectionNode);\n    }\n    return ni.jsxs(el.Provider, { value: g, children: [l && g.visualElement ? ni.jsx(l, { visualElement: g.visualElement, ...d }) : null, n(i, s, ZD(b, g.visualElement, c), b, f, g.visualElement)] });\n  }\n  const a = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(o);\n  return a[XD] = i, a;\n}\nfunction tR({ layoutId: e }) {\n  const t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(O5).id;\n  return t && e !== void 0 ? t + \"-\" + e : e;\n}\nfunction nR(e, t) {\n  const n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(T5).strict;\n  if (QD.NODE_ENV !== \"production\" && t && n) {\n    const r = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n    e.ignoreStrict ? Yo(!1, r) : ci(!1, r);\n  }\n}\nfunction rR(e) {\n  const { drag: t, layout: n } = Eo;\n  if (!t && !n)\n    return {};\n  const r = { ...t, ...n };\n  return {\n    MeasureLayout: t != null && t.isEnabled(e) || n != null && n.isEnabled(e) ? r.MeasureLayout : void 0,\n    ProjectionNode: r.ProjectionNode\n  };\n}\nfunction iR(e) {\n  function t(r, i = {}) {\n    return eR(e(r, i));\n  }\n  if (typeof Proxy > \"u\")\n    return t;\n  const n = /* @__PURE__ */ new Map();\n  return new Proxy(t, {\n    /**\n     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n     * The prop name is passed through as `key` and we can use that to generate a `motion`\n     * DOM component with that name.\n     */\n    get: (r, i) => (n.has(i) || n.set(i, t(i)), n.get(i))\n  });\n}\nconst oR = [\n  \"animate\",\n  \"circle\",\n  \"defs\",\n  \"desc\",\n  \"ellipse\",\n  \"g\",\n  \"image\",\n  \"line\",\n  \"filter\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"rect\",\n  \"stop\",\n  \"switch\",\n  \"symbol\",\n  \"svg\",\n  \"text\",\n  \"tspan\",\n  \"use\",\n  \"view\"\n];\nfunction Pf(e) {\n  return (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof e != \"string\" || /**\n     * If it contains a dash, the element is a custom HTML webcomponent.\n     */\n    e.includes(\"-\") ? !1 : (\n      /**\n       * If it's in our list of lowercase SVG tags, it's an SVG component\n       */\n      !!(oR.indexOf(e) > -1 || /**\n       * If it contains a capital letter, it's an SVG component\n       */\n      /[A-Z]/u.test(e))\n    )\n  );\n}\nconst nc = {};\nfunction aR(e) {\n  Object.assign(nc, e);\n}\nconst rs = [\n  \"transformPerspective\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"translateX\",\n  \"translateY\",\n  \"translateZ\",\n  \"scale\",\n  \"scaleX\",\n  \"scaleY\",\n  \"rotate\",\n  \"rotateX\",\n  \"rotateY\",\n  \"rotateZ\",\n  \"skew\",\n  \"skewX\",\n  \"skewY\"\n], mi = new Set(rs);\nfunction H5(e, { layout: t, layoutId: n }) {\n  return mi.has(e) || e.startsWith(\"origin\") || (t || n !== void 0) && (!!nc[e] || e === \"opacity\");\n}\nconst Wt = (e) => !!(e && e.getVelocity), U5 = (e, t) => t && typeof e == \"number\" ? t.transform(e) : e, li = (e, t, n) => n > t ? t : n < e ? e : n, Xo = {\n  test: (e) => typeof e == \"number\",\n  parse: parseFloat,\n  transform: (e) => e\n}, ba = {\n  ...Xo,\n  transform: (e) => li(0, 1, e)\n}, ms = {\n  ...Xo,\n  default: 1\n}, xa = (e) => Math.round(e * 1e5) / 1e5, Of = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu, sR = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu, cR = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction is(e) {\n  return typeof e == \"string\";\n}\nfunction lR(e) {\n  return e == null;\n}\nconst os = (e) => ({\n  test: (t) => is(t) && t.endsWith(e) && t.split(\" \").length === 1,\n  parse: parseFloat,\n  transform: (t) => `${t}${e}`\n}), Xr = os(\"deg\"), cr = os(\"%\"), Ce = os(\"px\"), dR = os(\"vh\"), fR = os(\"vw\"), Th = {\n  ...cr,\n  parse: (e) => cr.parse(e) / 100,\n  transform: (e) => cr.transform(e * 100)\n}, Bh = {\n  ...Xo,\n  transform: Math.round\n}, Hf = {\n  // Border props\n  borderWidth: Ce,\n  borderTopWidth: Ce,\n  borderRightWidth: Ce,\n  borderBottomWidth: Ce,\n  borderLeftWidth: Ce,\n  borderRadius: Ce,\n  radius: Ce,\n  borderTopLeftRadius: Ce,\n  borderTopRightRadius: Ce,\n  borderBottomRightRadius: Ce,\n  borderBottomLeftRadius: Ce,\n  // Positioning props\n  width: Ce,\n  maxWidth: Ce,\n  height: Ce,\n  maxHeight: Ce,\n  size: Ce,\n  top: Ce,\n  right: Ce,\n  bottom: Ce,\n  left: Ce,\n  // Spacing props\n  padding: Ce,\n  paddingTop: Ce,\n  paddingRight: Ce,\n  paddingBottom: Ce,\n  paddingLeft: Ce,\n  margin: Ce,\n  marginTop: Ce,\n  marginRight: Ce,\n  marginBottom: Ce,\n  marginLeft: Ce,\n  // Transform props\n  rotate: Xr,\n  rotateX: Xr,\n  rotateY: Xr,\n  rotateZ: Xr,\n  scale: ms,\n  scaleX: ms,\n  scaleY: ms,\n  scaleZ: ms,\n  skew: Xr,\n  skewX: Xr,\n  skewY: Xr,\n  distance: Ce,\n  translateX: Ce,\n  translateY: Ce,\n  translateZ: Ce,\n  x: Ce,\n  y: Ce,\n  z: Ce,\n  perspective: Ce,\n  transformPerspective: Ce,\n  opacity: ba,\n  originX: Th,\n  originY: Th,\n  originZ: Ce,\n  // Misc\n  zIndex: Bh,\n  backgroundPositionX: Ce,\n  backgroundPositionY: Ce,\n  // SVG\n  fillOpacity: ba,\n  strokeOpacity: ba,\n  numOctaves: Bh\n}, uR = {\n  x: \"translateX\",\n  y: \"translateY\",\n  z: \"translateZ\",\n  transformPerspective: \"perspective\"\n}, hR = rs.length;\nfunction pR(e, t, n) {\n  let r = \"\", i = !0;\n  for (let o = 0; o < hR; o++) {\n    const a = rs[o], s = e[a];\n    if (s === void 0)\n      continue;\n    let c = !0;\n    if (typeof s == \"number\" ? c = s === (a.startsWith(\"scale\") ? 1 : 0) : c = parseFloat(s) === 0, !c || n) {\n      const l = U5(s, Hf[a]);\n      if (!c) {\n        i = !1;\n        const d = uR[a] || a;\n        r += `${d}(${l}) `;\n      }\n      n && (t[a] = l);\n    }\n  }\n  return r = r.trim(), n ? r = n(t, i ? \"\" : r) : i && (r = \"none\"), r;\n}\nconst N5 = (e) => (t) => typeof t == \"string\" && t.startsWith(e), V5 = N5(\"--\"), gR = N5(\"var(--\"), Uf = (e) => gR(e) ? mR.test(e.split(\"/*\")[0].trim()) : !1, mR = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\nfunction Nf(e, t, n) {\n  const { style: r, vars: i, transformOrigin: o } = e;\n  let a = !1, s = !1;\n  for (const c in t) {\n    const l = t[c];\n    if (mi.has(c)) {\n      a = !0;\n      continue;\n    } else if (V5(c)) {\n      i[c] = l;\n      continue;\n    } else {\n      const d = U5(l, Hf[c]);\n      c.startsWith(\"origin\") ? (s = !0, o[c] = d) : r[c] = d;\n    }\n  }\n  if (t.transform || (a || n ? r.transform = pR(t, e.transform, n) : r.transform && (r.transform = \"none\")), s) {\n    const { originX: c = \"50%\", originY: l = \"50%\", originZ: d = 0 } = o;\n    r.transformOrigin = `${c} ${l} ${d}`;\n  }\n}\nconst Vf = () => ({\n  style: {},\n  transform: {},\n  transformOrigin: {},\n  vars: {}\n});\nfunction z5(e, t, n) {\n  for (const r in t)\n    !Wt(t[r]) && !H5(r, n) && (e[r] = t[r]);\n}\nfunction vR({ transformTemplate: e }, t) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const n = Vf();\n    return Nf(n, t, e), Object.assign({}, n.vars, n.style);\n  }, [t]);\n}\nfunction yR(e, t) {\n  const n = e.style || {}, r = {};\n  return z5(r, n, e), Object.assign(r, vR(e, t)), r;\n}\nfunction bR(e, t) {\n  const n = {}, r = yR(e, t);\n  return e.drag && e.dragListener !== !1 && (n.draggable = !1, r.userSelect = r.WebkitUserSelect = r.WebkitTouchCallout = \"none\", r.touchAction = e.drag === !0 ? \"none\" : `pan-${e.drag === \"x\" ? \"y\" : \"x\"}`), e.tabIndex === void 0 && (e.onTap || e.onTapStart || e.whileTap) && (n.tabIndex = 0), n.style = r, n;\n}\nconst xR = /* @__PURE__ */ new Set([\n  \"animate\",\n  \"exit\",\n  \"variants\",\n  \"initial\",\n  \"style\",\n  \"values\",\n  \"variants\",\n  \"transition\",\n  \"transformTemplate\",\n  \"custom\",\n  \"inherit\",\n  \"onBeforeLayoutMeasure\",\n  \"onAnimationStart\",\n  \"onAnimationComplete\",\n  \"onUpdate\",\n  \"onDragStart\",\n  \"onDrag\",\n  \"onDragEnd\",\n  \"onMeasureDragConstraints\",\n  \"onDirectionLock\",\n  \"onDragTransitionEnd\",\n  \"_dragX\",\n  \"_dragY\",\n  \"onHoverStart\",\n  \"onHoverEnd\",\n  \"onViewportEnter\",\n  \"onViewportLeave\",\n  \"globalTapTarget\",\n  \"ignoreStrict\",\n  \"viewport\"\n]);\nfunction rc(e) {\n  return e.startsWith(\"while\") || e.startsWith(\"drag\") && e !== \"draggable\" || e.startsWith(\"layout\") || e.startsWith(\"onTap\") || e.startsWith(\"onPan\") || e.startsWith(\"onLayout\") || xR.has(e);\n}\nlet W5 = (e) => !rc(e);\nfunction wR(e) {\n  e && (W5 = (t) => t.startsWith(\"on\") ? !rc(t) : e(t));\n}\ntry {\n  wR(require(\"@emotion/is-prop-valid\").default);\n} catch {\n}\nfunction $R(e, t, n) {\n  const r = {};\n  for (const i in e)\n    i === \"values\" && typeof e.values == \"object\" || (W5(i) || n === !0 && rc(i) || !t && !rc(i) || // If trying to use native HTML drag events, forward drag listeners\n    e.draggable && i.startsWith(\"onDrag\")) && (r[i] = e[i]);\n  return r;\n}\nfunction Ih(e, t, n) {\n  return typeof e == \"string\" ? e : Ce.transform(t + n * e);\n}\nfunction CR(e, t, n) {\n  const r = Ih(t, e.x, e.width), i = Ih(n, e.y, e.height);\n  return `${r} ${i}`;\n}\nconst SR = {\n  offset: \"stroke-dashoffset\",\n  array: \"stroke-dasharray\"\n}, MR = {\n  offset: \"strokeDashoffset\",\n  array: \"strokeDasharray\"\n};\nfunction LR(e, t, n = 1, r = 0, i = !0) {\n  e.pathLength = 1;\n  const o = i ? SR : MR;\n  e[o.offset] = Ce.transform(-r);\n  const a = Ce.transform(t), s = Ce.transform(n);\n  e[o.array] = `${a} ${s}`;\n}\nfunction zf(e, {\n  attrX: t,\n  attrY: n,\n  attrScale: r,\n  originX: i,\n  originY: o,\n  pathLength: a,\n  pathSpacing: s = 1,\n  pathOffset: c = 0,\n  // This is object creation, which we try to avoid per-frame.\n  ...l\n}, d, f) {\n  if (Nf(e, l, f), d) {\n    e.style.viewBox && (e.attrs.viewBox = e.style.viewBox);\n    return;\n  }\n  e.attrs = e.style, e.style = {};\n  const { attrs: g, style: b, dimensions: x } = e;\n  g.transform && (x && (b.transform = g.transform), delete g.transform), x && (i !== void 0 || o !== void 0 || b.transform) && (b.transformOrigin = CR(x, i !== void 0 ? i : 0.5, o !== void 0 ? o : 0.5)), t !== void 0 && (g.x = t), n !== void 0 && (g.y = n), r !== void 0 && (g.scale = r), a !== void 0 && LR(g, a, s, c, !1);\n}\nconst F5 = () => ({\n  ...Vf(),\n  attrs: {}\n}), Wf = (e) => typeof e == \"string\" && e.toLowerCase() === \"svg\";\nfunction AR(e, t, n, r) {\n  const i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    const o = F5();\n    return zf(o, t, Wf(r), e.transformTemplate), {\n      ...o.attrs,\n      style: { ...o.style }\n    };\n  }, [t]);\n  if (e.style) {\n    const o = {};\n    z5(o, e.style, e), i.style = { ...o, ...i.style };\n  }\n  return i;\n}\nfunction kR(e = !1) {\n  return (n, r, i, { latestValues: o }, a) => {\n    const c = (Pf(n) ? AR : bR)(r, o, a, n), l = $R(r, typeof n == \"string\", e), d = n !== react__WEBPACK_IMPORTED_MODULE_0__.Fragment ? { ...l, ...c, ref: i } : {}, { children: f } = r, g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => Wt(f) ? f.get() : f, [f]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(n, {\n      ...d,\n      children: g\n    });\n  };\n}\nfunction j5(e, { style: t, vars: n }, r, i) {\n  Object.assign(e.style, t, i && i.getProjectionStyles(r));\n  for (const o in n)\n    e.style.setProperty(o, n[o]);\n}\nconst q5 = /* @__PURE__ */ new Set([\n  \"baseFrequency\",\n  \"diffuseConstant\",\n  \"kernelMatrix\",\n  \"kernelUnitLength\",\n  \"keySplines\",\n  \"keyTimes\",\n  \"limitingConeAngle\",\n  \"markerHeight\",\n  \"markerWidth\",\n  \"numOctaves\",\n  \"targetX\",\n  \"targetY\",\n  \"surfaceScale\",\n  \"specularConstant\",\n  \"specularExponent\",\n  \"stdDeviation\",\n  \"tableValues\",\n  \"viewBox\",\n  \"gradientTransform\",\n  \"pathLength\",\n  \"startOffset\",\n  \"textLength\",\n  \"lengthAdjust\"\n]);\nfunction Z5(e, t, n, r) {\n  j5(e, t, void 0, r);\n  for (const i in t.attrs)\n    e.setAttribute(q5.has(i) ? i : tl(i), t.attrs[i]);\n}\nfunction Ff(e, t, n) {\n  var r;\n  const { style: i } = e, o = {};\n  for (const a in i)\n    (Wt(i[a]) || t.style && Wt(t.style[a]) || H5(a, e) || ((r = n == null ? void 0 : n.getValue(a)) === null || r === void 0 ? void 0 : r.liveStyle) !== void 0) && (o[a] = i[a]);\n  return n && i && typeof i.willChange == \"string\" && (n.applyWillChange = !1), o;\n}\nfunction K5(e, t, n) {\n  const r = Ff(e, t, n);\n  for (const i in e)\n    if (Wt(e[i]) || Wt(t[i])) {\n      const o = rs.indexOf(i) !== -1 ? \"attr\" + i.charAt(0).toUpperCase() + i.substring(1) : i;\n      r[o] = e[i];\n    }\n  return r;\n}\nfunction Dh(e) {\n  const t = [{}, {}];\n  return e == null || e.values.forEach((n, r) => {\n    t[0][r] = n.get(), t[1][r] = n.getVelocity();\n  }), t;\n}\nfunction jf(e, t, n, r) {\n  if (typeof t == \"function\") {\n    const [i, o] = Dh(r);\n    t = t(n !== void 0 ? n : e.custom, i, o);\n  }\n  if (typeof t == \"string\" && (t = e.variants && e.variants[t]), typeof t == \"function\") {\n    const [i, o] = Dh(r);\n    t = t(n !== void 0 ? n : e.custom, i, o);\n  }\n  return t;\n}\nfunction qf(e) {\n  const t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  return t.current === null && (t.current = e()), t.current;\n}\nconst id = (e) => Array.isArray(e), _R = (e) => !!(e && typeof e == \"object\" && e.mix && e.toValue), ER = (e) => id(e) ? e[e.length - 1] || 0 : e;\nfunction Ts(e) {\n  const t = Wt(e) ? e.get() : e;\n  return _R(t) ? t.toValue() : t;\n}\nconst G5 = /* @__PURE__ */ new Set([\n  \"opacity\",\n  \"clipPath\",\n  \"filter\",\n  \"transform\"\n  // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n  // or until we implement support for linear() easing.\n  // \"background-color\"\n]);\nfunction Y5(e) {\n  if (mi.has(e))\n    return \"transform\";\n  if (G5.has(e))\n    return tl(e);\n}\nfunction rl(e, t) {\n  e.indexOf(t) === -1 && e.push(t);\n}\nfunction il(e, t) {\n  const n = e.indexOf(t);\n  n > -1 && e.splice(n, 1);\n}\nfunction TR({ applyWillChange: e = !1, scrapeMotionValuesFromProps: t, createRenderState: n, onMount: r }, i, o, a, s) {\n  const c = {\n    latestValues: IR(i, o, a, s ? !1 : e, t),\n    renderState: n()\n  };\n  return r && (c.mount = (l) => r(i, l, c)), c;\n}\nconst X5 = (e) => (t, n) => {\n  const r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(el), i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Tf), o = () => TR(e, t, r, i, n);\n  return n ? o() : qf(o);\n};\nfunction BR(e, t) {\n  const n = Y5(t);\n  n && rl(e, n);\n}\nfunction Rh(e, t, n) {\n  const r = Array.isArray(t) ? t : [t];\n  for (let i = 0; i < r.length; i++) {\n    const o = jf(e, r[i]);\n    if (o) {\n      const { transitionEnd: a, transition: s, ...c } = o;\n      n(c, a);\n    }\n  }\n}\nfunction IR(e, t, n, r, i) {\n  var o;\n  const a = {}, s = [], c = r && ((o = e.style) === null || o === void 0 ? void 0 : o.willChange) === void 0, l = i(e, {});\n  for (const C in l)\n    a[C] = Ts(l[C]);\n  let { initial: d, animate: f } = e;\n  const g = nl(e), b = P5(e);\n  t && b && !g && e.inherit !== !1 && (d === void 0 && (d = t.initial), f === void 0 && (f = t.animate));\n  let x = n ? n.initial === !1 : !1;\n  x = x || d === !1;\n  const m = x ? f : d;\n  return m && typeof m != \"boolean\" && !Oa(m) && Rh(e, m, (C, S) => {\n    for (const T in C) {\n      let N = C[T];\n      if (Array.isArray(N)) {\n        const W = x ? N.length - 1 : 0;\n        N = N[W];\n      }\n      N !== null && (a[T] = N);\n    }\n    for (const T in S)\n      a[T] = S[T];\n  }), c && (f && d !== !1 && !Oa(f) && Rh(e, f, (C) => {\n    for (const S in C)\n      BR(s, S);\n  }), s.length && (a.willChange = s.join(\",\"))), a;\n}\nconst { schedule: ot, cancel: qn, state: Zt, steps: Gl } = I5(typeof requestAnimationFrame < \"u\" ? requestAnimationFrame : Xt, !0), DR = {\n  useVisualState: X5({\n    scrapeMotionValuesFromProps: K5,\n    createRenderState: F5,\n    onMount: (e, t, { renderState: n, latestValues: r }) => {\n      ot.read(() => {\n        try {\n          n.dimensions = typeof t.getBBox == \"function\" ? t.getBBox() : t.getBoundingClientRect();\n        } catch {\n          n.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n          };\n        }\n      }), ot.render(() => {\n        zf(n, r, Wf(t.tagName), e.transformTemplate), Z5(t, n);\n      });\n    }\n  })\n}, RR = {\n  useVisualState: X5({\n    applyWillChange: !0,\n    scrapeMotionValuesFromProps: Ff,\n    createRenderState: Vf\n  })\n};\nfunction PR(e, { forwardMotionProps: t = !1 }, n, r) {\n  return {\n    ...Pf(e) ? DR : RR,\n    preloadedFeatures: n,\n    useRender: kR(t),\n    createVisualElement: r,\n    Component: e\n  };\n}\nfunction Er(e, t, n, r = { passive: !0 }) {\n  return e.addEventListener(t, n, r), () => e.removeEventListener(t, n);\n}\nconst J5 = (e) => e.pointerType === \"mouse\" ? typeof e.button != \"number\" || e.button <= 0 : e.isPrimary !== !1;\nfunction ol(e, t = \"page\") {\n  return {\n    point: {\n      x: e[`${t}X`],\n      y: e[`${t}Y`]\n    }\n  };\n}\nconst OR = (e) => (t) => J5(t) && e(t, ol(t));\nfunction Tr(e, t, n, r) {\n  return Er(e, t, OR(n), r);\n}\nconst HR = (e, t) => (n) => t(e(n)), Br = (...e) => e.reduce(HR);\nfunction Q5(e) {\n  let t = null;\n  return () => {\n    const n = () => {\n      t = null;\n    };\n    return t === null ? (t = e, n) : !1;\n  };\n}\nconst Ph = Q5(\"dragHorizontal\"), Oh = Q5(\"dragVertical\");\nfunction e4(e) {\n  let t = !1;\n  if (e === \"y\")\n    t = Oh();\n  else if (e === \"x\")\n    t = Ph();\n  else {\n    const n = Ph(), r = Oh();\n    n && r ? t = () => {\n      n(), r();\n    } : (n && n(), r && r());\n  }\n  return t;\n}\nfunction t4() {\n  const e = e4(!0);\n  return e ? (e(), !1) : !0;\n}\nclass vi {\n  constructor(t) {\n    this.isMounted = !1, this.node = t;\n  }\n  update() {\n  }\n}\nfunction Hh(e, t) {\n  const n = t ? \"pointerenter\" : \"pointerleave\", r = t ? \"onHoverStart\" : \"onHoverEnd\", i = (o, a) => {\n    if (o.pointerType === \"touch\" || t4())\n      return;\n    const s = e.getProps();\n    e.animationState && s.whileHover && e.animationState.setActive(\"whileHover\", t);\n    const c = s[r];\n    c && ot.postRender(() => c(o, a));\n  };\n  return Tr(e.current, n, i, {\n    passive: !e.getProps()[r]\n  });\n}\nclass UR extends vi {\n  mount() {\n    this.unmount = Br(Hh(this.node, !0), Hh(this.node, !1));\n  }\n  unmount() {\n  }\n}\nclass NR extends vi {\n  constructor() {\n    super(...arguments), this.isActive = !1;\n  }\n  onFocus() {\n    let t = !1;\n    try {\n      t = this.node.current.matches(\":focus-visible\");\n    } catch {\n      t = !0;\n    }\n    !t || !this.node.animationState || (this.node.animationState.setActive(\"whileFocus\", !0), this.isActive = !0);\n  }\n  onBlur() {\n    !this.isActive || !this.node.animationState || (this.node.animationState.setActive(\"whileFocus\", !1), this.isActive = !1);\n  }\n  mount() {\n    this.unmount = Br(Er(this.node.current, \"focus\", () => this.onFocus()), Er(this.node.current, \"blur\", () => this.onBlur()));\n  }\n  unmount() {\n  }\n}\nconst n4 = (e, t) => t ? e === t ? !0 : n4(e, t.parentElement) : !1;\nfunction Yl(e, t) {\n  if (!t)\n    return;\n  const n = new PointerEvent(\"pointer\" + e);\n  t(n, ol(n));\n}\nclass VR extends vi {\n  constructor() {\n    super(...arguments), this.removeStartListeners = Xt, this.removeEndListeners = Xt, this.removeAccessibleListeners = Xt, this.startPointerPress = (t, n) => {\n      if (this.isPressing)\n        return;\n      this.removeEndListeners();\n      const r = this.node.getProps(), o = Tr(window, \"pointerup\", (s, c) => {\n        if (!this.checkPressEnd())\n          return;\n        const { onTap: l, onTapCancel: d, globalTapTarget: f } = this.node.getProps(), g = !f && !n4(this.node.current, s.target) ? d : l;\n        g && ot.update(() => g(s, c));\n      }, {\n        passive: !(r.onTap || r.onPointerUp)\n      }), a = Tr(window, \"pointercancel\", (s, c) => this.cancelPress(s, c), {\n        passive: !(r.onTapCancel || r.onPointerCancel)\n      });\n      this.removeEndListeners = Br(o, a), this.startPress(t, n);\n    }, this.startAccessiblePress = () => {\n      const t = (o) => {\n        if (o.key !== \"Enter\" || this.isPressing)\n          return;\n        const a = (s) => {\n          s.key !== \"Enter\" || !this.checkPressEnd() || Yl(\"up\", (c, l) => {\n            const { onTap: d } = this.node.getProps();\n            d && ot.postRender(() => d(c, l));\n          });\n        };\n        this.removeEndListeners(), this.removeEndListeners = Er(this.node.current, \"keyup\", a), Yl(\"down\", (s, c) => {\n          this.startPress(s, c);\n        });\n      }, n = Er(this.node.current, \"keydown\", t), r = () => {\n        this.isPressing && Yl(\"cancel\", (o, a) => this.cancelPress(o, a));\n      }, i = Er(this.node.current, \"blur\", r);\n      this.removeAccessibleListeners = Br(n, i);\n    };\n  }\n  startPress(t, n) {\n    this.isPressing = !0;\n    const { onTapStart: r, whileTap: i } = this.node.getProps();\n    i && this.node.animationState && this.node.animationState.setActive(\"whileTap\", !0), r && ot.postRender(() => r(t, n));\n  }\n  checkPressEnd() {\n    return this.removeEndListeners(), this.isPressing = !1, this.node.getProps().whileTap && this.node.animationState && this.node.animationState.setActive(\"whileTap\", !1), !t4();\n  }\n  cancelPress(t, n) {\n    if (!this.checkPressEnd())\n      return;\n    const { onTapCancel: r } = this.node.getProps();\n    r && ot.postRender(() => r(t, n));\n  }\n  mount() {\n    const t = this.node.getProps(), n = Tr(t.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n      passive: !(t.onTapStart || t.onPointerStart)\n    }), r = Er(this.node.current, \"focus\", this.startAccessiblePress);\n    this.removeStartListeners = Br(n, r);\n  }\n  unmount() {\n    this.removeStartListeners(), this.removeEndListeners(), this.removeAccessibleListeners();\n  }\n}\nconst od = /* @__PURE__ */ new WeakMap(), Xl = /* @__PURE__ */ new WeakMap(), zR = (e) => {\n  const t = od.get(e.target);\n  t && t(e);\n}, WR = (e) => {\n  e.forEach(zR);\n};\nfunction FR({ root: e, ...t }) {\n  const n = e || document;\n  Xl.has(n) || Xl.set(n, {});\n  const r = Xl.get(n), i = JSON.stringify(t);\n  return r[i] || (r[i] = new IntersectionObserver(WR, { root: e, ...t })), r[i];\n}\nfunction jR(e, t, n) {\n  const r = FR(t);\n  return od.set(e, n), r.observe(e), () => {\n    od.delete(e), r.unobserve(e);\n  };\n}\nconst qR = {\n  some: 0,\n  all: 1\n};\nclass ZR extends vi {\n  constructor() {\n    super(...arguments), this.hasEnteredView = !1, this.isInView = !1;\n  }\n  startObserver() {\n    this.unmount();\n    const { viewport: t = {} } = this.node.getProps(), { root: n, margin: r, amount: i = \"some\", once: o } = t, a = {\n      root: n ? n.current : void 0,\n      rootMargin: r,\n      threshold: typeof i == \"number\" ? i : qR[i]\n    }, s = (c) => {\n      const { isIntersecting: l } = c;\n      if (this.isInView === l || (this.isInView = l, o && !l && this.hasEnteredView))\n        return;\n      l && (this.hasEnteredView = !0), this.node.animationState && this.node.animationState.setActive(\"whileInView\", l);\n      const { onViewportEnter: d, onViewportLeave: f } = this.node.getProps(), g = l ? d : f;\n      g && g(c);\n    };\n    return jR(this.node.current, a, s);\n  }\n  mount() {\n    this.startObserver();\n  }\n  update() {\n    if (typeof IntersectionObserver > \"u\")\n      return;\n    const { props: t, prevProps: n } = this.node;\n    [\"amount\", \"margin\", \"root\"].some(KR(t, n)) && this.startObserver();\n  }\n  unmount() {\n  }\n}\nfunction KR({ viewport: e = {} }, { viewport: t = {} } = {}) {\n  return (n) => e[n] !== t[n];\n}\nconst GR = {\n  inView: {\n    Feature: ZR\n  },\n  tap: {\n    Feature: VR\n  },\n  focus: {\n    Feature: NR\n  },\n  hover: {\n    Feature: UR\n  }\n};\nfunction r4(e, t) {\n  if (!Array.isArray(t))\n    return !1;\n  const n = t.length;\n  if (n !== e.length)\n    return !1;\n  for (let r = 0; r < n; r++)\n    if (t[r] !== e[r])\n      return !1;\n  return !0;\n}\nfunction al(e, t, n) {\n  const r = e.getProps();\n  return jf(r, t, n !== void 0 ? n : r.custom, e);\n}\nconst lr = (e) => e * 1e3, Ir = (e) => e / 1e3, YR = {\n  type: \"spring\",\n  stiffness: 500,\n  damping: 25,\n  restSpeed: 10\n}, XR = (e) => ({\n  type: \"spring\",\n  stiffness: 550,\n  damping: e === 0 ? 2 * Math.sqrt(550) : 30,\n  restSpeed: 10\n}), JR = {\n  type: \"keyframes\",\n  duration: 0.8\n}, QR = {\n  type: \"keyframes\",\n  ease: [0.25, 0.1, 0.35, 1],\n  duration: 0.3\n}, eP = (e, { keyframes: t }) => t.length > 2 ? JR : mi.has(e) ? e.startsWith(\"scale\") ? XR(t[1]) : YR : QR;\nfunction tP({ when: e, delay: t, delayChildren: n, staggerChildren: r, staggerDirection: i, repeat: o, repeatType: a, repeatDelay: s, from: c, elapsed: l, ...d }) {\n  return !!Object.keys(d).length;\n}\nfunction Zf(e, t) {\n  return e[t] || e.default || e;\n}\nconst nP = (e) => e !== null;\nfunction sl(e, { repeat: t, repeatType: n = \"loop\" }, r) {\n  const i = e.filter(nP), o = t && n !== \"loop\" && t % 2 === 1 ? 0 : i.length - 1;\n  return !o || r === void 0 ? i[o] : r;\n}\nconst i4 = (e) => /^0[^.\\s]+$/u.test(e);\nfunction rP(e) {\n  return typeof e == \"number\" ? e === 0 : e !== null ? e === \"none\" || e === \"0\" || i4(e) : !0;\n}\nconst o4 = (e) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(e), iP = (\n  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n  /^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u\n);\nfunction oP(e) {\n  const t = iP.exec(e);\n  if (!t)\n    return [,];\n  const [, n, r, i] = t;\n  return [`--${n ?? r}`, i];\n}\nconst aP = 4;\nfunction a4(e, t, n = 1) {\n  ci(n <= aP, `Max CSS variable fallback depth detected in property \"${e}\". This may indicate a circular fallback dependency.`);\n  const [r, i] = oP(e);\n  if (!r)\n    return;\n  const o = window.getComputedStyle(t).getPropertyValue(r);\n  if (o) {\n    const a = o.trim();\n    return o4(a) ? parseFloat(a) : a;\n  }\n  return Uf(i) ? a4(i, t, n + 1) : i;\n}\nconst sP = /* @__PURE__ */ new Set([\n  \"width\",\n  \"height\",\n  \"top\",\n  \"left\",\n  \"right\",\n  \"bottom\",\n  \"x\",\n  \"y\",\n  \"translateX\",\n  \"translateY\"\n]), Uh = (e) => e === Xo || e === Ce, Nh = (e, t) => parseFloat(e.split(\", \")[t]), Vh = (e, t) => (n, { transform: r }) => {\n  if (r === \"none\" || !r)\n    return 0;\n  const i = r.match(/^matrix3d\\((.+)\\)$/u);\n  if (i)\n    return Nh(i[1], t);\n  {\n    const o = r.match(/^matrix\\((.+)\\)$/u);\n    return o ? Nh(o[1], e) : 0;\n  }\n}, cP = /* @__PURE__ */ new Set([\"x\", \"y\", \"z\"]), lP = rs.filter((e) => !cP.has(e));\nfunction dP(e) {\n  const t = [];\n  return lP.forEach((n) => {\n    const r = e.getValue(n);\n    r !== void 0 && (t.push([n, r.get()]), r.set(n.startsWith(\"scale\") ? 1 : 0));\n  }), t;\n}\nconst To = {\n  // Dimensions\n  width: ({ x: e }, { paddingLeft: t = \"0\", paddingRight: n = \"0\" }) => e.max - e.min - parseFloat(t) - parseFloat(n),\n  height: ({ y: e }, { paddingTop: t = \"0\", paddingBottom: n = \"0\" }) => e.max - e.min - parseFloat(t) - parseFloat(n),\n  top: (e, { top: t }) => parseFloat(t),\n  left: (e, { left: t }) => parseFloat(t),\n  bottom: ({ y: e }, { top: t }) => parseFloat(t) + (e.max - e.min),\n  right: ({ x: e }, { left: t }) => parseFloat(t) + (e.max - e.min),\n  // Transform\n  x: Vh(4, 13),\n  y: Vh(5, 14)\n};\nTo.translateX = To.x;\nTo.translateY = To.y;\nconst s4 = (e) => (t) => t.test(e), fP = {\n  test: (e) => e === \"auto\",\n  parse: (e) => e\n}, c4 = [Xo, Ce, cr, Xr, fR, dR, fP], zh = (e) => c4.find(s4(e)), Ti = /* @__PURE__ */ new Set();\nlet ad = !1, sd = !1;\nfunction l4() {\n  if (sd) {\n    const e = Array.from(Ti).filter((r) => r.needsMeasurement), t = new Set(e.map((r) => r.element)), n = /* @__PURE__ */ new Map();\n    t.forEach((r) => {\n      const i = dP(r);\n      i.length && (n.set(r, i), r.render());\n    }), e.forEach((r) => r.measureInitialState()), t.forEach((r) => {\n      r.render();\n      const i = n.get(r);\n      i && i.forEach(([o, a]) => {\n        var s;\n        (s = r.getValue(o)) === null || s === void 0 || s.set(a);\n      });\n    }), e.forEach((r) => r.measureEndState()), e.forEach((r) => {\n      r.suspendedScrollY !== void 0 && window.scrollTo(0, r.suspendedScrollY);\n    });\n  }\n  sd = !1, ad = !1, Ti.forEach((e) => e.complete()), Ti.clear();\n}\nfunction d4() {\n  Ti.forEach((e) => {\n    e.readKeyframes(), e.needsMeasurement && (sd = !0);\n  });\n}\nfunction uP() {\n  d4(), l4();\n}\nclass Kf {\n  constructor(t, n, r, i, o, a = !1) {\n    this.isComplete = !1, this.isAsync = !1, this.needsMeasurement = !1, this.isScheduled = !1, this.unresolvedKeyframes = [...t], this.onComplete = n, this.name = r, this.motionValue = i, this.element = o, this.isAsync = a;\n  }\n  scheduleResolve() {\n    this.isScheduled = !0, this.isAsync ? (Ti.add(this), ad || (ad = !0, ot.read(d4), ot.resolveKeyframes(l4))) : (this.readKeyframes(), this.complete());\n  }\n  readKeyframes() {\n    const { unresolvedKeyframes: t, name: n, element: r, motionValue: i } = this;\n    for (let o = 0; o < t.length; o++)\n      if (t[o] === null)\n        if (o === 0) {\n          const a = i == null ? void 0 : i.get(), s = t[t.length - 1];\n          if (a !== void 0)\n            t[0] = a;\n          else if (r && n) {\n            const c = r.readValue(n, s);\n            c != null && (t[0] = c);\n          }\n          t[0] === void 0 && (t[0] = s), i && a === void 0 && i.set(t[0]);\n        } else\n          t[o] = t[o - 1];\n  }\n  setFinalKeyframe() {\n  }\n  measureInitialState() {\n  }\n  renderEndStyles() {\n  }\n  measureEndState() {\n  }\n  complete() {\n    this.isComplete = !0, this.onComplete(this.unresolvedKeyframes, this.finalKeyframe), Ti.delete(this);\n  }\n  cancel() {\n    this.isComplete || (this.isScheduled = !1, Ti.delete(this));\n  }\n  resume() {\n    this.isComplete || this.scheduleResolve();\n  }\n}\nconst Gf = (e, t) => (n) => !!(is(n) && cR.test(n) && n.startsWith(e) || t && !lR(n) && Object.prototype.hasOwnProperty.call(n, t)), f4 = (e, t, n) => (r) => {\n  if (!is(r))\n    return r;\n  const [i, o, a, s] = r.match(Of);\n  return {\n    [e]: parseFloat(i),\n    [t]: parseFloat(o),\n    [n]: parseFloat(a),\n    alpha: s !== void 0 ? parseFloat(s) : 1\n  };\n}, hP = (e) => li(0, 255, e), Jl = {\n  ...Xo,\n  transform: (e) => Math.round(hP(e))\n}, Mi = {\n  test: Gf(\"rgb\", \"red\"),\n  parse: f4(\"red\", \"green\", \"blue\"),\n  transform: ({ red: e, green: t, blue: n, alpha: r = 1 }) => \"rgba(\" + Jl.transform(e) + \", \" + Jl.transform(t) + \", \" + Jl.transform(n) + \", \" + xa(ba.transform(r)) + \")\"\n};\nfunction pP(e) {\n  let t = \"\", n = \"\", r = \"\", i = \"\";\n  return e.length > 5 ? (t = e.substring(1, 3), n = e.substring(3, 5), r = e.substring(5, 7), i = e.substring(7, 9)) : (t = e.substring(1, 2), n = e.substring(2, 3), r = e.substring(3, 4), i = e.substring(4, 5), t += t, n += n, r += r, i += i), {\n    red: parseInt(t, 16),\n    green: parseInt(n, 16),\n    blue: parseInt(r, 16),\n    alpha: i ? parseInt(i, 16) / 255 : 1\n  };\n}\nconst cd = {\n  test: Gf(\"#\"),\n  parse: pP,\n  transform: Mi.transform\n}, oo = {\n  test: Gf(\"hsl\", \"hue\"),\n  parse: f4(\"hue\", \"saturation\", \"lightness\"),\n  transform: ({ hue: e, saturation: t, lightness: n, alpha: r = 1 }) => \"hsla(\" + Math.round(e) + \", \" + cr.transform(xa(t)) + \", \" + cr.transform(xa(n)) + \", \" + xa(ba.transform(r)) + \")\"\n}, tn = {\n  test: (e) => Mi.test(e) || cd.test(e) || oo.test(e),\n  parse: (e) => Mi.test(e) ? Mi.parse(e) : oo.test(e) ? oo.parse(e) : cd.parse(e),\n  transform: (e) => is(e) ? e : e.hasOwnProperty(\"red\") ? Mi.transform(e) : oo.transform(e)\n};\nfunction gP(e) {\n  var t, n;\n  return isNaN(e) && is(e) && (((t = e.match(Of)) === null || t === void 0 ? void 0 : t.length) || 0) + (((n = e.match(sR)) === null || n === void 0 ? void 0 : n.length) || 0) > 0;\n}\nconst u4 = \"number\", h4 = \"color\", mP = \"var\", vP = \"var(\", Wh = \"${}\", yP = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction Ha(e) {\n  const t = e.toString(), n = [], r = {\n    color: [],\n    number: [],\n    var: []\n  }, i = [];\n  let o = 0;\n  const s = t.replace(yP, (c) => (tn.test(c) ? (r.color.push(o), i.push(h4), n.push(tn.parse(c))) : c.startsWith(vP) ? (r.var.push(o), i.push(mP), n.push(c)) : (r.number.push(o), i.push(u4), n.push(parseFloat(c))), ++o, Wh)).split(Wh);\n  return { values: n, split: s, indexes: r, types: i };\n}\nfunction p4(e) {\n  return Ha(e).values;\n}\nfunction g4(e) {\n  const { split: t, types: n } = Ha(e), r = t.length;\n  return (i) => {\n    let o = \"\";\n    for (let a = 0; a < r; a++)\n      if (o += t[a], i[a] !== void 0) {\n        const s = n[a];\n        s === u4 ? o += xa(i[a]) : s === h4 ? o += tn.transform(i[a]) : o += i[a];\n      }\n    return o;\n  };\n}\nconst bP = (e) => typeof e == \"number\" ? 0 : e;\nfunction xP(e) {\n  const t = p4(e);\n  return g4(e)(t.map(bP));\n}\nconst di = {\n  test: gP,\n  parse: p4,\n  createTransformer: g4,\n  getAnimatableNone: xP\n}, wP = /* @__PURE__ */ new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction $P(e) {\n  const [t, n] = e.slice(0, -1).split(\"(\");\n  if (t === \"drop-shadow\")\n    return e;\n  const [r] = n.match(Of) || [];\n  if (!r)\n    return e;\n  const i = n.replace(r, \"\");\n  let o = wP.has(t) ? 1 : 0;\n  return r !== n && (o *= 100), t + \"(\" + o + i + \")\";\n}\nconst CP = /\\b([a-z-]*)\\(.*?\\)/gu, ld = {\n  ...di,\n  getAnimatableNone: (e) => {\n    const t = e.match(CP);\n    return t ? t.map($P).join(\" \") : e;\n  }\n}, SP = {\n  ...Hf,\n  // Color props\n  color: tn,\n  backgroundColor: tn,\n  outlineColor: tn,\n  fill: tn,\n  stroke: tn,\n  // Border props\n  borderColor: tn,\n  borderTopColor: tn,\n  borderRightColor: tn,\n  borderBottomColor: tn,\n  borderLeftColor: tn,\n  filter: ld,\n  WebkitFilter: ld\n}, Yf = (e) => SP[e];\nfunction m4(e, t) {\n  let n = Yf(e);\n  return n !== ld && (n = di), n.getAnimatableNone ? n.getAnimatableNone(t) : void 0;\n}\nconst MP = /* @__PURE__ */ new Set([\"auto\", \"none\", \"0\"]);\nfunction LP(e, t, n) {\n  let r = 0, i;\n  for (; r < e.length && !i; ) {\n    const o = e[r];\n    typeof o == \"string\" && !MP.has(o) && Ha(o).values.length && (i = e[r]), r++;\n  }\n  if (i && n)\n    for (const o of t)\n      e[o] = m4(n, i);\n}\nclass v4 extends Kf {\n  constructor(t, n, r, i, o) {\n    super(t, n, r, i, o, !0);\n  }\n  readKeyframes() {\n    const { unresolvedKeyframes: t, element: n, name: r } = this;\n    if (!n || !n.current)\n      return;\n    super.readKeyframes();\n    for (let c = 0; c < t.length; c++) {\n      let l = t[c];\n      if (typeof l == \"string\" && (l = l.trim(), Uf(l))) {\n        const d = a4(l, n.current);\n        d !== void 0 && (t[c] = d), c === t.length - 1 && (this.finalKeyframe = l);\n      }\n    }\n    if (this.resolveNoneKeyframes(), !sP.has(r) || t.length !== 2)\n      return;\n    const [i, o] = t, a = zh(i), s = zh(o);\n    if (a !== s)\n      if (Uh(a) && Uh(s))\n        for (let c = 0; c < t.length; c++) {\n          const l = t[c];\n          typeof l == \"string\" && (t[c] = parseFloat(l));\n        }\n      else\n        this.needsMeasurement = !0;\n  }\n  resolveNoneKeyframes() {\n    const { unresolvedKeyframes: t, name: n } = this, r = [];\n    for (let i = 0; i < t.length; i++)\n      rP(t[i]) && r.push(i);\n    r.length && LP(t, r, n);\n  }\n  measureInitialState() {\n    const { element: t, unresolvedKeyframes: n, name: r } = this;\n    if (!t || !t.current)\n      return;\n    r === \"height\" && (this.suspendedScrollY = window.pageYOffset), this.measuredOrigin = To[r](t.measureViewportBox(), window.getComputedStyle(t.current)), n[0] = this.measuredOrigin;\n    const i = n[n.length - 1];\n    i !== void 0 && t.getValue(r, i).jump(i, !1);\n  }\n  measureEndState() {\n    var t;\n    const { element: n, name: r, unresolvedKeyframes: i } = this;\n    if (!n || !n.current)\n      return;\n    const o = n.getValue(r);\n    o && o.jump(this.measuredOrigin, !1);\n    const a = i.length - 1, s = i[a];\n    i[a] = To[r](n.measureViewportBox(), window.getComputedStyle(n.current)), s !== null && this.finalKeyframe === void 0 && (this.finalKeyframe = s), !((t = this.removedTransforms) === null || t === void 0) && t.length && this.removedTransforms.forEach(([c, l]) => {\n      n.getValue(c).set(l);\n    }), this.resolveNoneKeyframes();\n  }\n}\nfunction y4(e) {\n  let t;\n  return () => (t === void 0 && (t = e()), t);\n}\nlet Bs;\nfunction AP() {\n  Bs = void 0;\n}\nconst Dr = {\n  now: () => (Bs === void 0 && Dr.set(Zt.isProcessing || VD.useManualTiming ? Zt.timestamp : performance.now()), Bs),\n  set: (e) => {\n    Bs = e, queueMicrotask(AP);\n  }\n}, Fh = (e, t) => t === \"zIndex\" ? !1 : !!(typeof e == \"number\" || Array.isArray(e) || typeof e == \"string\" && // It's animatable if we have a string\n(di.test(e) || e === \"0\") && // And it contains numbers and/or colors\n!e.startsWith(\"url(\"));\nfunction kP(e) {\n  const t = e[0];\n  if (e.length === 1)\n    return !0;\n  for (let n = 0; n < e.length; n++)\n    if (e[n] !== t)\n      return !0;\n}\nfunction _P(e, t, n, r) {\n  const i = e[0];\n  if (i === null)\n    return !1;\n  if (t === \"display\" || t === \"visibility\")\n    return !0;\n  const o = e[e.length - 1], a = Fh(i, t), s = Fh(o, t);\n  return Yo(a === s, `You are trying to animate ${t} from \"${i}\" to \"${o}\". ${i} is not an animatable value - to enable this animation set ${i} to a value animatable to ${o} via the \\`style\\` property.`), !a || !s ? !1 : kP(e) || n === \"spring\" && r;\n}\nconst EP = 40;\nclass b4 {\n  constructor({ autoplay: t = !0, delay: n = 0, type: r = \"keyframes\", repeat: i = 0, repeatDelay: o = 0, repeatType: a = \"loop\", ...s }) {\n    this.isStopped = !1, this.hasAttemptedResolve = !1, this.createdAt = Dr.now(), this.options = {\n      autoplay: t,\n      delay: n,\n      type: r,\n      repeat: i,\n      repeatDelay: o,\n      repeatType: a,\n      ...s\n    }, this.updateFinishedPromise();\n  }\n  /**\n   * This method uses the createdAt and resolvedAt to calculate the\n   * animation startTime. *Ideally*, we would use the createdAt time as t=0\n   * as the following frame would then be the first frame of the animation in\n   * progress, which would feel snappier.\n   *\n   * However, if there's a delay (main thread work) between the creation of\n   * the animation and the first commited frame, we prefer to use resolvedAt\n   * to avoid a sudden jump into the animation.\n   */\n  calcStartTime() {\n    return this.resolvedAt ? this.resolvedAt - this.createdAt > EP ? this.resolvedAt : this.createdAt : this.createdAt;\n  }\n  /**\n   * A getter for resolved data. If keyframes are not yet resolved, accessing\n   * this.resolved will synchronously flush all pending keyframe resolvers.\n   * This is a deoptimisation, but at its worst still batches read/writes.\n   */\n  get resolved() {\n    return !this._resolved && !this.hasAttemptedResolve && uP(), this._resolved;\n  }\n  /**\n   * A method to be called when the keyframes resolver completes. This method\n   * will check if its possible to run the animation and, if not, skip it.\n   * Otherwise, it will call initPlayback on the implementing class.\n   */\n  onKeyframesResolved(t, n) {\n    this.resolvedAt = Dr.now(), this.hasAttemptedResolve = !0;\n    const { name: r, type: i, velocity: o, delay: a, onComplete: s, onUpdate: c, isGenerator: l } = this.options;\n    if (!l && !_P(t, r, i, o))\n      if (a)\n        this.options.duration = 0;\n      else {\n        c == null || c(sl(t, this.options, n)), s == null || s(), this.resolveFinishedPromise();\n        return;\n      }\n    const d = this.initPlayback(t, n);\n    d !== !1 && (this._resolved = {\n      keyframes: t,\n      finalKeyframe: n,\n      ...d\n    }, this.onPostResolved());\n  }\n  onPostResolved() {\n  }\n  /**\n   * Allows the returned animation to be awaited or promise-chained. Currently\n   * resolves when the animation finishes at all but in a future update could/should\n   * reject if its cancels.\n   */\n  then(t, n) {\n    return this.currentFinishedPromise.then(t, n);\n  }\n  updateFinishedPromise() {\n    this.currentFinishedPromise = new Promise((t) => {\n      this.resolveFinishedPromise = t;\n    });\n  }\n}\nfunction x4(e, t) {\n  return t ? e * (1e3 / t) : 0;\n}\nconst TP = 5;\nfunction w4(e, t, n) {\n  const r = Math.max(t - TP, 0);\n  return x4(n - e(r), t - r);\n}\nconst Ql = 1e-3, BP = 0.01, jh = 10, IP = 0.05, DP = 1;\nfunction RP({ duration: e = 800, bounce: t = 0.25, velocity: n = 0, mass: r = 1 }) {\n  let i, o;\n  Yo(e <= lr(jh), \"Spring duration must be 10 seconds or less\");\n  let a = 1 - t;\n  a = li(IP, DP, a), e = li(BP, jh, Ir(e)), a < 1 ? (i = (l) => {\n    const d = l * a, f = d * e, g = d - n, b = dd(l, a), x = Math.exp(-f);\n    return Ql - g / b * x;\n  }, o = (l) => {\n    const f = l * a * e, g = f * n + n, b = Math.pow(a, 2) * Math.pow(l, 2) * e, x = Math.exp(-f), m = dd(Math.pow(l, 2), a);\n    return (-i(l) + Ql > 0 ? -1 : 1) * ((g - b) * x) / m;\n  }) : (i = (l) => {\n    const d = Math.exp(-l * e), f = (l - n) * e + 1;\n    return -Ql + d * f;\n  }, o = (l) => {\n    const d = Math.exp(-l * e), f = (n - l) * (e * e);\n    return d * f;\n  });\n  const s = 5 / e, c = OP(i, o, s);\n  if (e = lr(e), isNaN(c))\n    return {\n      stiffness: 100,\n      damping: 10,\n      duration: e\n    };\n  {\n    const l = Math.pow(c, 2) * r;\n    return {\n      stiffness: l,\n      damping: a * 2 * Math.sqrt(r * l),\n      duration: e\n    };\n  }\n}\nconst PP = 12;\nfunction OP(e, t, n) {\n  let r = n;\n  for (let i = 1; i < PP; i++)\n    r = r - e(r) / t(r);\n  return r;\n}\nfunction dd(e, t) {\n  return e * Math.sqrt(1 - t * t);\n}\nconst HP = [\"duration\", \"bounce\"], UP = [\"stiffness\", \"damping\", \"mass\"];\nfunction qh(e, t) {\n  return t.some((n) => e[n] !== void 0);\n}\nfunction NP(e) {\n  let t = {\n    velocity: 0,\n    stiffness: 100,\n    damping: 10,\n    mass: 1,\n    isResolvedFromDuration: !1,\n    ...e\n  };\n  if (!qh(e, UP) && qh(e, HP)) {\n    const n = RP(e);\n    t = {\n      ...t,\n      ...n,\n      mass: 1\n    }, t.isResolvedFromDuration = !0;\n  }\n  return t;\n}\nfunction $4({ keyframes: e, restDelta: t, restSpeed: n, ...r }) {\n  const i = e[0], o = e[e.length - 1], a = { done: !1, value: i }, { stiffness: s, damping: c, mass: l, duration: d, velocity: f, isResolvedFromDuration: g } = NP({\n    ...r,\n    velocity: -Ir(r.velocity || 0)\n  }), b = f || 0, x = c / (2 * Math.sqrt(s * l)), m = o - i, C = Ir(Math.sqrt(s / l)), S = Math.abs(m) < 5;\n  n || (n = S ? 0.01 : 2), t || (t = S ? 5e-3 : 0.5);\n  let T;\n  if (x < 1) {\n    const N = dd(C, x);\n    T = (W) => {\n      const U = Math.exp(-x * C * W);\n      return o - U * ((b + x * C * m) / N * Math.sin(N * W) + m * Math.cos(N * W));\n    };\n  } else if (x === 1)\n    T = (N) => o - Math.exp(-C * N) * (m + (b + C * m) * N);\n  else {\n    const N = C * Math.sqrt(x * x - 1);\n    T = (W) => {\n      const U = Math.exp(-x * C * W), F = Math.min(N * W, 300);\n      return o - U * ((b + x * C * m) * Math.sinh(F) + N * m * Math.cosh(F)) / N;\n    };\n  }\n  return {\n    calculatedDuration: g && d || null,\n    next: (N) => {\n      const W = T(N);\n      if (g)\n        a.done = N >= d;\n      else {\n        let U = 0;\n        x < 1 && (U = N === 0 ? lr(b) : w4(T, N, W));\n        const F = Math.abs(U) <= n, j = Math.abs(o - W) <= t;\n        a.done = F && j;\n      }\n      return a.value = a.done ? o : W, a;\n    }\n  };\n}\nfunction Zh({ keyframes: e, velocity: t = 0, power: n = 0.8, timeConstant: r = 325, bounceDamping: i = 10, bounceStiffness: o = 500, modifyTarget: a, min: s, max: c, restDelta: l = 0.5, restSpeed: d }) {\n  const f = e[0], g = {\n    done: !1,\n    value: f\n  }, b = (K) => s !== void 0 && K < s || c !== void 0 && K > c, x = (K) => s === void 0 ? c : c === void 0 || Math.abs(s - K) < Math.abs(c - K) ? s : c;\n  let m = n * t;\n  const C = f + m, S = a === void 0 ? C : a(C);\n  S !== C && (m = S - f);\n  const T = (K) => -m * Math.exp(-K / r), N = (K) => S + T(K), W = (K) => {\n    const J = T(K), X = N(K);\n    g.done = Math.abs(J) <= l, g.value = g.done ? S : X;\n  };\n  let U, F;\n  const j = (K) => {\n    b(g.value) && (U = K, F = $4({\n      keyframes: [g.value, x(g.value)],\n      velocity: w4(N, K, g.value),\n      // TODO: This should be passing * 1000\n      damping: i,\n      stiffness: o,\n      restDelta: l,\n      restSpeed: d\n    }));\n  };\n  return j(0), {\n    calculatedDuration: null,\n    next: (K) => {\n      let J = !1;\n      return !F && U === void 0 && (J = !0, W(K), j(K)), U !== void 0 && K >= U ? F.next(K - U) : (!J && W(K), g);\n    }\n  };\n}\nconst C4 = (e, t, n) => (((1 - 3 * n + 3 * t) * e + (3 * n - 6 * t)) * e + 3 * t) * e, VP = 1e-7, zP = 12;\nfunction WP(e, t, n, r, i) {\n  let o, a, s = 0;\n  do\n    a = t + (n - t) / 2, o = C4(a, r, i) - e, o > 0 ? n = a : t = a;\n  while (Math.abs(o) > VP && ++s < zP);\n  return a;\n}\nfunction as(e, t, n, r) {\n  if (e === t && n === r)\n    return Xt;\n  const i = (o) => WP(o, 0, 1, e, n);\n  return (o) => o === 0 || o === 1 ? o : C4(i(o), t, r);\n}\nconst FP = as(0.42, 0, 1, 1), jP = as(0, 0, 0.58, 1), S4 = as(0.42, 0, 0.58, 1), qP = (e) => Array.isArray(e) && typeof e[0] != \"number\", M4 = (e) => (t) => t <= 0.5 ? e(2 * t) / 2 : (2 - e(2 * (1 - t))) / 2, L4 = (e) => (t) => 1 - e(1 - t), Xf = (e) => 1 - Math.sin(Math.acos(e)), A4 = L4(Xf), ZP = M4(Xf), k4 = as(0.33, 1.53, 0.69, 0.99), Jf = L4(k4), KP = M4(Jf), GP = (e) => (e *= 2) < 1 ? 0.5 * Jf(e) : 0.5 * (2 - Math.pow(2, -10 * (e - 1))), Kh = {\n  linear: Xt,\n  easeIn: FP,\n  easeInOut: S4,\n  easeOut: jP,\n  circIn: Xf,\n  circInOut: ZP,\n  circOut: A4,\n  backIn: Jf,\n  backInOut: KP,\n  backOut: k4,\n  anticipate: GP\n}, Gh = (e) => {\n  if (Array.isArray(e)) {\n    ci(e.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n    const [t, n, r, i] = e;\n    return as(t, n, r, i);\n  } else if (typeof e == \"string\")\n    return ci(Kh[e] !== void 0, `Invalid easing type '${e}'`), Kh[e];\n  return e;\n}, Ua = (e, t, n) => {\n  const r = t - e;\n  return r === 0 ? 1 : (n - e) / r;\n}, Mt = (e, t, n) => e + (t - e) * n;\nfunction e1(e, t, n) {\n  return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + (t - e) * 6 * n : n < 1 / 2 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e;\n}\nfunction YP({ hue: e, saturation: t, lightness: n, alpha: r }) {\n  e /= 360, t /= 100, n /= 100;\n  let i = 0, o = 0, a = 0;\n  if (!t)\n    i = o = a = n;\n  else {\n    const s = n < 0.5 ? n * (1 + t) : n + t - n * t, c = 2 * n - s;\n    i = e1(c, s, e + 1 / 3), o = e1(c, s, e), a = e1(c, s, e - 1 / 3);\n  }\n  return {\n    red: Math.round(i * 255),\n    green: Math.round(o * 255),\n    blue: Math.round(a * 255),\n    alpha: r\n  };\n}\nfunction ic(e, t) {\n  return (n) => n > 0 ? t : e;\n}\nconst t1 = (e, t, n) => {\n  const r = e * e, i = n * (t * t - r) + r;\n  return i < 0 ? 0 : Math.sqrt(i);\n}, XP = [cd, Mi, oo], JP = (e) => XP.find((t) => t.test(e));\nfunction Yh(e) {\n  const t = JP(e);\n  if (Yo(!!t, `'${e}' is not an animatable color. Use the equivalent color code instead.`), !t)\n    return !1;\n  let n = t.parse(e);\n  return t === oo && (n = YP(n)), n;\n}\nconst Xh = (e, t) => {\n  const n = Yh(e), r = Yh(t);\n  if (!n || !r)\n    return ic(e, t);\n  const i = { ...n };\n  return (o) => (i.red = t1(n.red, r.red, o), i.green = t1(n.green, r.green, o), i.blue = t1(n.blue, r.blue, o), i.alpha = Mt(n.alpha, r.alpha, o), Mi.transform(i));\n}, fd = /* @__PURE__ */ new Set([\"none\", \"hidden\"]);\nfunction QP(e, t) {\n  return fd.has(e) ? (n) => n <= 0 ? e : t : (n) => n >= 1 ? t : e;\n}\nfunction eO(e, t) {\n  return (n) => Mt(e, t, n);\n}\nfunction Qf(e) {\n  return typeof e == \"number\" ? eO : typeof e == \"string\" ? Uf(e) ? ic : tn.test(e) ? Xh : rO : Array.isArray(e) ? _4 : typeof e == \"object\" ? tn.test(e) ? Xh : tO : ic;\n}\nfunction _4(e, t) {\n  const n = [...e], r = n.length, i = e.map((o, a) => Qf(o)(o, t[a]));\n  return (o) => {\n    for (let a = 0; a < r; a++)\n      n[a] = i[a](o);\n    return n;\n  };\n}\nfunction tO(e, t) {\n  const n = { ...e, ...t }, r = {};\n  for (const i in n)\n    e[i] !== void 0 && t[i] !== void 0 && (r[i] = Qf(e[i])(e[i], t[i]));\n  return (i) => {\n    for (const o in r)\n      n[o] = r[o](i);\n    return n;\n  };\n}\nfunction nO(e, t) {\n  var n;\n  const r = [], i = { color: 0, var: 0, number: 0 };\n  for (let o = 0; o < t.values.length; o++) {\n    const a = t.types[o], s = e.indexes[a][i[a]], c = (n = e.values[s]) !== null && n !== void 0 ? n : 0;\n    r[o] = c, i[a]++;\n  }\n  return r;\n}\nconst rO = (e, t) => {\n  const n = di.createTransformer(t), r = Ha(e), i = Ha(t);\n  return r.indexes.var.length === i.indexes.var.length && r.indexes.color.length === i.indexes.color.length && r.indexes.number.length >= i.indexes.number.length ? fd.has(e) && !i.values.length || fd.has(t) && !r.values.length ? QP(e, t) : Br(_4(nO(r, i), i.values), n) : (Yo(!0, `Complex values '${e}' and '${t}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`), ic(e, t));\n};\nfunction E4(e, t, n) {\n  return typeof e == \"number\" && typeof t == \"number\" && typeof n == \"number\" ? Mt(e, t, n) : Qf(e)(e, t);\n}\nfunction iO(e, t, n) {\n  const r = [], i = n || E4, o = e.length - 1;\n  for (let a = 0; a < o; a++) {\n    let s = i(e[a], e[a + 1]);\n    if (t) {\n      const c = Array.isArray(t) ? t[a] || Xt : t;\n      s = Br(c, s);\n    }\n    r.push(s);\n  }\n  return r;\n}\nfunction T4(e, t, { clamp: n = !0, ease: r, mixer: i } = {}) {\n  const o = e.length;\n  if (ci(o === t.length, \"Both input and output ranges must be the same length\"), o === 1)\n    return () => t[0];\n  if (o === 2 && e[0] === e[1])\n    return () => t[1];\n  e[0] > e[o - 1] && (e = [...e].reverse(), t = [...t].reverse());\n  const a = iO(t, r, i), s = a.length, c = (l) => {\n    let d = 0;\n    if (s > 1)\n      for (; d < e.length - 2 && !(l < e[d + 1]); d++)\n        ;\n    const f = Ua(e[d], e[d + 1], l);\n    return a[d](f);\n  };\n  return n ? (l) => c(li(e[0], e[o - 1], l)) : c;\n}\nfunction oO(e, t) {\n  const n = e[e.length - 1];\n  for (let r = 1; r <= t; r++) {\n    const i = Ua(0, t, r);\n    e.push(Mt(n, 1, i));\n  }\n}\nfunction aO(e) {\n  const t = [0];\n  return oO(t, e.length - 1), t;\n}\nfunction sO(e, t) {\n  return e.map((n) => n * t);\n}\nfunction cO(e, t) {\n  return e.map(() => t || S4).splice(0, e.length - 1);\n}\nfunction oc({ duration: e = 300, keyframes: t, times: n, ease: r = \"easeInOut\" }) {\n  const i = qP(r) ? r.map(Gh) : Gh(r), o = {\n    done: !1,\n    value: t[0]\n  }, a = sO(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    n && n.length === t.length ? n : aO(t),\n    e\n  ), s = T4(a, t, {\n    ease: Array.isArray(i) ? i : cO(t, i)\n  });\n  return {\n    calculatedDuration: e,\n    next: (c) => (o.value = s(c), o.done = c >= e, o)\n  };\n}\nconst Jh = 2e4;\nfunction lO(e) {\n  let t = 0;\n  const n = 50;\n  let r = e.next(t);\n  for (; !r.done && t < Jh; )\n    t += n, r = e.next(t);\n  return t >= Jh ? 1 / 0 : t;\n}\nconst dO = (e) => {\n  const t = ({ timestamp: n }) => e(n);\n  return {\n    start: () => ot.update(t, !0),\n    stop: () => qn(t),\n    /**\n     * If we're processing this frame we can use the\n     * framelocked timestamp to keep things in sync.\n     */\n    now: () => Zt.isProcessing ? Zt.timestamp : Dr.now()\n  };\n};\nvar fO = {};\nconst uO = {\n  decay: Zh,\n  inertia: Zh,\n  tween: oc,\n  keyframes: oc,\n  spring: $4\n}, hO = (e) => e / 100;\nclass eu extends b4 {\n  constructor(t) {\n    super(t), this.holdTime = null, this.cancelTime = null, this.currentTime = 0, this.playbackSpeed = 1, this.pendingPlayState = \"running\", this.startTime = null, this.state = \"idle\", this.stop = () => {\n      if (this.resolver.cancel(), this.isStopped = !0, this.state === \"idle\")\n        return;\n      this.teardown();\n      const { onStop: c } = this.options;\n      c && c();\n    };\n    const { name: n, motionValue: r, element: i, keyframes: o } = this.options, a = (i == null ? void 0 : i.KeyframeResolver) || Kf, s = (c, l) => this.onKeyframesResolved(c, l);\n    this.resolver = new a(o, s, n, r, i), this.resolver.scheduleResolve();\n  }\n  initPlayback(t) {\n    const { type: n = \"keyframes\", repeat: r = 0, repeatDelay: i = 0, repeatType: o, velocity: a = 0 } = this.options, s = uO[n] || oc;\n    let c, l;\n    s !== oc && typeof t[0] != \"number\" && (fO.NODE_ENV !== \"production\" && ci(t.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${t}`), c = Br(hO, E4(t[0], t[1])), t = [0, 100]);\n    const d = s({ ...this.options, keyframes: t });\n    o === \"mirror\" && (l = s({\n      ...this.options,\n      keyframes: [...t].reverse(),\n      velocity: -a\n    })), d.calculatedDuration === null && (d.calculatedDuration = lO(d));\n    const { calculatedDuration: f } = d, g = f + i, b = g * (r + 1) - i;\n    return {\n      generator: d,\n      mirroredGenerator: l,\n      mapPercentToKeyframes: c,\n      calculatedDuration: f,\n      resolvedDuration: g,\n      totalDuration: b\n    };\n  }\n  onPostResolved() {\n    const { autoplay: t = !0 } = this.options;\n    this.play(), this.pendingPlayState === \"paused\" || !t ? this.pause() : this.state = this.pendingPlayState;\n  }\n  tick(t, n = !1) {\n    const { resolved: r } = this;\n    if (!r) {\n      const { keyframes: K } = this.options;\n      return { done: !0, value: K[K.length - 1] };\n    }\n    const { finalKeyframe: i, generator: o, mirroredGenerator: a, mapPercentToKeyframes: s, keyframes: c, calculatedDuration: l, totalDuration: d, resolvedDuration: f } = r;\n    if (this.startTime === null)\n      return o.next(0);\n    const { delay: g, repeat: b, repeatType: x, repeatDelay: m, onUpdate: C } = this.options;\n    this.speed > 0 ? this.startTime = Math.min(this.startTime, t) : this.speed < 0 && (this.startTime = Math.min(t - d / this.speed, this.startTime)), n ? this.currentTime = t : this.holdTime !== null ? this.currentTime = this.holdTime : this.currentTime = Math.round(t - this.startTime) * this.speed;\n    const S = this.currentTime - g * (this.speed >= 0 ? 1 : -1), T = this.speed >= 0 ? S < 0 : S > d;\n    this.currentTime = Math.max(S, 0), this.state === \"finished\" && this.holdTime === null && (this.currentTime = d);\n    let N = this.currentTime, W = o;\n    if (b) {\n      const K = Math.min(this.currentTime, d) / f;\n      let J = Math.floor(K), X = K % 1;\n      !X && K >= 1 && (X = 1), X === 1 && J--, J = Math.min(J, b + 1), !!(J % 2) && (x === \"reverse\" ? (X = 1 - X, m && (X -= m / f)) : x === \"mirror\" && (W = a)), N = li(0, 1, X) * f;\n    }\n    const U = T ? { done: !1, value: c[0] } : W.next(N);\n    s && (U.value = s(U.value));\n    let { done: F } = U;\n    !T && l !== null && (F = this.speed >= 0 ? this.currentTime >= d : this.currentTime <= 0);\n    const j = this.holdTime === null && (this.state === \"finished\" || this.state === \"running\" && F);\n    return j && i !== void 0 && (U.value = sl(c, this.options, i)), C && C(U.value), j && this.finish(), U;\n  }\n  get duration() {\n    const { resolved: t } = this;\n    return t ? Ir(t.calculatedDuration) : 0;\n  }\n  get time() {\n    return Ir(this.currentTime);\n  }\n  set time(t) {\n    t = lr(t), this.currentTime = t, this.holdTime !== null || this.speed === 0 ? this.holdTime = t : this.driver && (this.startTime = this.driver.now() - t / this.speed);\n  }\n  get speed() {\n    return this.playbackSpeed;\n  }\n  set speed(t) {\n    const n = this.playbackSpeed !== t;\n    this.playbackSpeed = t, n && (this.time = Ir(this.currentTime));\n  }\n  play() {\n    if (this.resolver.isScheduled || this.resolver.resume(), !this._resolved) {\n      this.pendingPlayState = \"running\";\n      return;\n    }\n    if (this.isStopped)\n      return;\n    const { driver: t = dO, onPlay: n, startTime: r } = this.options;\n    this.driver || (this.driver = t((o) => this.tick(o))), n && n();\n    const i = this.driver.now();\n    this.holdTime !== null ? this.startTime = i - this.holdTime : this.startTime ? this.state === \"finished\" && (this.startTime = i) : this.startTime = r ?? this.calcStartTime(), this.state === \"finished\" && this.updateFinishedPromise(), this.cancelTime = this.startTime, this.holdTime = null, this.state = \"running\", this.driver.start();\n  }\n  pause() {\n    var t;\n    if (!this._resolved) {\n      this.pendingPlayState = \"paused\";\n      return;\n    }\n    this.state = \"paused\", this.holdTime = (t = this.currentTime) !== null && t !== void 0 ? t : 0;\n  }\n  complete() {\n    this.state !== \"running\" && this.play(), this.pendingPlayState = this.state = \"finished\", this.holdTime = null;\n  }\n  finish() {\n    this.teardown(), this.state = \"finished\";\n    const { onComplete: t } = this.options;\n    t && t();\n  }\n  cancel() {\n    this.cancelTime !== null && this.tick(this.cancelTime), this.teardown(), this.updateFinishedPromise();\n  }\n  teardown() {\n    this.state = \"idle\", this.stopDriver(), this.resolveFinishedPromise(), this.updateFinishedPromise(), this.startTime = this.cancelTime = null, this.resolver.cancel();\n  }\n  stopDriver() {\n    this.driver && (this.driver.stop(), this.driver = void 0);\n  }\n  sample(t) {\n    return this.startTime = 0, this.tick(t, !0);\n  }\n}\nconst B4 = (e) => Array.isArray(e) && typeof e[0] == \"number\";\nfunction I4(e) {\n  return !!(!e || typeof e == \"string\" && e in tu || B4(e) || Array.isArray(e) && e.every(I4));\n}\nconst ha = ([e, t, n, r]) => `cubic-bezier(${e}, ${t}, ${n}, ${r})`, tu = {\n  linear: \"linear\",\n  ease: \"ease\",\n  easeIn: \"ease-in\",\n  easeOut: \"ease-out\",\n  easeInOut: \"ease-in-out\",\n  circIn: ha([0, 0.65, 0.55, 1]),\n  circOut: ha([0.55, 0, 1, 0.45]),\n  backIn: ha([0.31, 0.01, 0.66, -0.59]),\n  backOut: ha([0.33, 1.53, 0.69, 0.99])\n};\nfunction pO(e) {\n  return D4(e) || tu.easeOut;\n}\nfunction D4(e) {\n  if (e)\n    return B4(e) ? ha(e) : Array.isArray(e) ? e.map(pO) : tu[e];\n}\nfunction gO(e, t, n, { delay: r = 0, duration: i = 300, repeat: o = 0, repeatType: a = \"loop\", ease: s, times: c } = {}) {\n  const l = { [t]: n };\n  c && (l.offset = c);\n  const d = D4(s);\n  return Array.isArray(d) && (l.easing = d), e.animate(l, {\n    delay: r,\n    duration: i,\n    easing: Array.isArray(d) ? \"linear\" : d,\n    fill: \"both\",\n    iterations: o + 1,\n    direction: a === \"reverse\" ? \"alternate\" : \"normal\"\n  });\n}\nconst mO = y4(() => Object.hasOwnProperty.call(Element.prototype, \"animate\")), ac = 10, vO = 2e4;\nfunction yO(e) {\n  return e.type === \"spring\" || !I4(e.ease);\n}\nfunction bO(e, t) {\n  const n = new eu({\n    ...t,\n    keyframes: e,\n    repeat: 0,\n    delay: 0,\n    isGenerator: !0\n  });\n  let r = { done: !1, value: e[0] };\n  const i = [];\n  let o = 0;\n  for (; !r.done && o < vO; )\n    r = n.sample(o), i.push(r.value), o += ac;\n  return {\n    times: void 0,\n    keyframes: i,\n    duration: o - ac,\n    ease: \"linear\"\n  };\n}\nclass Qh extends b4 {\n  constructor(t) {\n    super(t);\n    const { name: n, motionValue: r, element: i, keyframes: o } = this.options;\n    this.resolver = new v4(o, (a, s) => this.onKeyframesResolved(a, s), n, r, i), this.resolver.scheduleResolve();\n  }\n  initPlayback(t, n) {\n    var r;\n    let { duration: i = 300, times: o, ease: a, type: s, motionValue: c, name: l, startTime: d } = this.options;\n    if (!(!((r = c.owner) === null || r === void 0) && r.current))\n      return !1;\n    if (yO(this.options)) {\n      const { onComplete: g, onUpdate: b, motionValue: x, element: m, ...C } = this.options, S = bO(t, C);\n      t = S.keyframes, t.length === 1 && (t[1] = t[0]), i = S.duration, o = S.times, a = S.ease, s = \"keyframes\";\n    }\n    const f = gO(c.owner.current, l, t, { ...this.options, duration: i, times: o, ease: a });\n    return f.startTime = d ?? this.calcStartTime(), this.pendingTimeline ? (f.timeline = this.pendingTimeline, this.pendingTimeline = void 0) : f.onfinish = () => {\n      const { onComplete: g } = this.options;\n      c.set(sl(t, this.options, n)), g && g(), this.cancel(), this.resolveFinishedPromise();\n    }, {\n      animation: f,\n      duration: i,\n      times: o,\n      type: s,\n      ease: a,\n      keyframes: t\n    };\n  }\n  get duration() {\n    const { resolved: t } = this;\n    if (!t)\n      return 0;\n    const { duration: n } = t;\n    return Ir(n);\n  }\n  get time() {\n    const { resolved: t } = this;\n    if (!t)\n      return 0;\n    const { animation: n } = t;\n    return Ir(n.currentTime || 0);\n  }\n  set time(t) {\n    const { resolved: n } = this;\n    if (!n)\n      return;\n    const { animation: r } = n;\n    r.currentTime = lr(t);\n  }\n  get speed() {\n    const { resolved: t } = this;\n    if (!t)\n      return 1;\n    const { animation: n } = t;\n    return n.playbackRate;\n  }\n  set speed(t) {\n    const { resolved: n } = this;\n    if (!n)\n      return;\n    const { animation: r } = n;\n    r.playbackRate = t;\n  }\n  get state() {\n    const { resolved: t } = this;\n    if (!t)\n      return \"idle\";\n    const { animation: n } = t;\n    return n.playState;\n  }\n  get startTime() {\n    const { resolved: t } = this;\n    if (!t)\n      return null;\n    const { animation: n } = t;\n    return n.startTime;\n  }\n  /**\n   * Replace the default DocumentTimeline with another AnimationTimeline.\n   * Currently used for scroll animations.\n   */\n  attachTimeline(t) {\n    if (!this._resolved)\n      this.pendingTimeline = t;\n    else {\n      const { resolved: n } = this;\n      if (!n)\n        return Xt;\n      const { animation: r } = n;\n      r.timeline = t, r.onfinish = null;\n    }\n    return Xt;\n  }\n  play() {\n    if (this.isStopped)\n      return;\n    const { resolved: t } = this;\n    if (!t)\n      return;\n    const { animation: n } = t;\n    n.playState === \"finished\" && this.updateFinishedPromise(), n.play();\n  }\n  pause() {\n    const { resolved: t } = this;\n    if (!t)\n      return;\n    const { animation: n } = t;\n    n.pause();\n  }\n  stop() {\n    if (this.resolver.cancel(), this.isStopped = !0, this.state === \"idle\")\n      return;\n    this.resolveFinishedPromise(), this.updateFinishedPromise();\n    const { resolved: t } = this;\n    if (!t)\n      return;\n    const { animation: n, keyframes: r, duration: i, type: o, ease: a, times: s } = t;\n    if (n.playState === \"idle\" || n.playState === \"finished\")\n      return;\n    if (this.time) {\n      const { motionValue: l, onUpdate: d, onComplete: f, element: g, ...b } = this.options, x = new eu({\n        ...b,\n        keyframes: r,\n        duration: i,\n        type: o,\n        ease: a,\n        times: s,\n        isGenerator: !0\n      }), m = lr(this.time);\n      l.setWithVelocity(x.sample(m - ac).value, x.sample(m).value, ac);\n    }\n    const { onStop: c } = this.options;\n    c && c(), this.cancel();\n  }\n  complete() {\n    const { resolved: t } = this;\n    t && t.animation.finish();\n  }\n  cancel() {\n    const { resolved: t } = this;\n    t && t.animation.cancel();\n  }\n  static supports(t) {\n    const { motionValue: n, name: r, repeatDelay: i, repeatType: o, damping: a, type: s } = t;\n    return mO() && r && G5.has(r) && n && n.owner && n.owner.current instanceof HTMLElement && /**\n     * If we're outputting values to onUpdate then we can't use WAAPI as there's\n     * no way to read the value from WAAPI every frame.\n     */\n    !n.owner.getProps().onUpdate && !i && o !== \"mirror\" && a !== 0 && s !== \"inertia\";\n  }\n}\nfunction xO(e, t) {\n  let n;\n  const r = () => {\n    const { currentTime: i } = t, a = (i === null ? 0 : i.value) / 100;\n    n !== a && e(a), n = a;\n  };\n  return ot.update(r, !0), () => qn(r);\n}\nconst wO = y4(() => window.ScrollTimeline !== void 0);\nclass $O {\n  constructor(t) {\n    this.stop = () => this.runAll(\"stop\"), this.animations = t.filter(Boolean);\n  }\n  then(t, n) {\n    return Promise.all(this.animations).then(t).catch(n);\n  }\n  /**\n   * TODO: Filter out cancelled or stopped animations before returning\n   */\n  getAll(t) {\n    return this.animations[0][t];\n  }\n  setAll(t, n) {\n    for (let r = 0; r < this.animations.length; r++)\n      this.animations[r][t] = n;\n  }\n  attachTimeline(t) {\n    const n = this.animations.map((r) => {\n      if (wO() && r.attachTimeline)\n        r.attachTimeline(t);\n      else\n        return r.pause(), xO((i) => {\n          r.time = r.duration * i;\n        }, t);\n    });\n    return () => {\n      n.forEach((r, i) => {\n        r && r(), this.animations[i].stop();\n      });\n    };\n  }\n  get time() {\n    return this.getAll(\"time\");\n  }\n  set time(t) {\n    this.setAll(\"time\", t);\n  }\n  get speed() {\n    return this.getAll(\"speed\");\n  }\n  set speed(t) {\n    this.setAll(\"speed\", t);\n  }\n  get startTime() {\n    return this.getAll(\"startTime\");\n  }\n  get duration() {\n    let t = 0;\n    for (let n = 0; n < this.animations.length; n++)\n      t = Math.max(t, this.animations[n].duration);\n    return t;\n  }\n  runAll(t) {\n    this.animations.forEach((n) => n[t]());\n  }\n  play() {\n    this.runAll(\"play\");\n  }\n  pause() {\n    this.runAll(\"pause\");\n  }\n  cancel() {\n    this.runAll(\"cancel\");\n  }\n  complete() {\n    this.runAll(\"complete\");\n  }\n}\nconst nu = (e, t, n, r = {}, i, o, a) => (s) => {\n  const c = Zf(r, e) || {}, l = c.delay || r.delay || 0;\n  let { elapsed: d = 0 } = r;\n  d = d - lr(l);\n  let f = {\n    keyframes: Array.isArray(n) ? n : [null, n],\n    ease: \"easeOut\",\n    velocity: t.getVelocity(),\n    ...c,\n    delay: -d,\n    onUpdate: (b) => {\n      t.set(b), c.onUpdate && c.onUpdate(b);\n    },\n    onComplete: () => {\n      s(), c.onComplete && c.onComplete(), a && a();\n    },\n    onStop: a,\n    name: e,\n    motionValue: t,\n    element: o ? void 0 : i\n  };\n  tP(c) || (f = {\n    ...f,\n    ...eP(e, f)\n  }), f.duration && (f.duration = lr(f.duration)), f.repeatDelay && (f.repeatDelay = lr(f.repeatDelay)), f.from !== void 0 && (f.keyframes[0] = f.from);\n  let g = !1;\n  if ((f.type === !1 || f.duration === 0 && !f.repeatDelay) && (f.duration = 0, f.delay === 0 && (g = !0)), g && !o && t.get() !== void 0) {\n    const b = sl(f.keyframes, c);\n    if (b !== void 0)\n      return ot.update(() => {\n        f.onUpdate(b), f.onComplete();\n      }), new $O([]);\n  }\n  return !o && Qh.supports(f) ? new Qh(f) : new eu(f);\n};\nclass ru {\n  constructor() {\n    this.subscriptions = [];\n  }\n  add(t) {\n    return rl(this.subscriptions, t), () => il(this.subscriptions, t);\n  }\n  notify(t, n, r) {\n    const i = this.subscriptions.length;\n    if (i)\n      if (i === 1)\n        this.subscriptions[0](t, n, r);\n      else\n        for (let o = 0; o < i; o++) {\n          const a = this.subscriptions[o];\n          a && a(t, n, r);\n        }\n  }\n  getSize() {\n    return this.subscriptions.length;\n  }\n  clear() {\n    this.subscriptions.length = 0;\n  }\n}\nconst e2 = /* @__PURE__ */ new Set();\nfunction iu(e, t, n) {\n  e || e2.has(t) || (console.warn(t), e2.add(t));\n}\nvar CO = {};\nconst t2 = 30, SO = (e) => !isNaN(parseFloat(e)), wa = {\n  current: void 0\n};\nclass R4 {\n  /**\n   * @param init - The initiating value\n   * @param config - Optional configuration options\n   *\n   * -  `transformer`: A function to transform incoming values with.\n   *\n   * @internal\n   */\n  constructor(t, n = {}) {\n    this.version = \"11.3.30\", this.canTrackVelocity = null, this.events = {}, this.updateAndNotify = (r, i = !0) => {\n      const o = Dr.now();\n      this.updatedAt !== o && this.setPrevFrameValue(), this.prev = this.current, this.setCurrent(r), this.current !== this.prev && this.events.change && this.events.change.notify(this.current), i && this.events.renderRequest && this.events.renderRequest.notify(this.current);\n    }, this.hasAnimated = !1, this.setCurrent(t), this.owner = n.owner;\n  }\n  setCurrent(t) {\n    this.current = t, this.updatedAt = Dr.now(), this.canTrackVelocity === null && t !== void 0 && (this.canTrackVelocity = SO(this.current));\n  }\n  setPrevFrameValue(t = this.current) {\n    this.prevFrameValue = t, this.prevUpdatedAt = this.updatedAt;\n  }\n  /**\n   * Adds a function that will be notified when the `MotionValue` is updated.\n   *\n   * It returns a function that, when called, will cancel the subscription.\n   *\n   * When calling `onChange` inside a React component, it should be wrapped with the\n   * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n   * from the `useEffect` function to ensure you don't add duplicate subscribers..\n   *\n   * ```jsx\n   * export const MyComponent = () => {\n   *   const x = useMotionValue(0)\n   *   const y = useMotionValue(0)\n   *   const opacity = useMotionValue(1)\n   *\n   *   useEffect(() => {\n   *     function updateOpacity() {\n   *       const maxXY = Math.max(x.get(), y.get())\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n   *       opacity.set(newOpacity)\n   *     }\n   *\n   *     const unsubscribeX = x.on(\"change\", updateOpacity)\n   *     const unsubscribeY = y.on(\"change\", updateOpacity)\n   *\n   *     return () => {\n   *       unsubscribeX()\n   *       unsubscribeY()\n   *     }\n   *   }, [])\n   *\n   *   return <motion.div style={{ x }} />\n   * }\n   * ```\n   *\n   * @param subscriber - A function that receives the latest value.\n   * @returns A function that, when called, will cancel this subscription.\n   *\n   * @deprecated\n   */\n  onChange(t) {\n    return CO.NODE_ENV !== \"production\" && iu(!1, 'value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).'), this.on(\"change\", t);\n  }\n  on(t, n) {\n    this.events[t] || (this.events[t] = new ru());\n    const r = this.events[t].add(n);\n    return t === \"change\" ? () => {\n      r(), ot.read(() => {\n        this.events.change.getSize() || this.stop();\n      });\n    } : r;\n  }\n  clearListeners() {\n    for (const t in this.events)\n      this.events[t].clear();\n  }\n  /**\n   * Attaches a passive effect to the `MotionValue`.\n   *\n   * @internal\n   */\n  attach(t, n) {\n    this.passiveEffect = t, this.stopPassiveEffect = n;\n  }\n  /**\n   * Sets the state of the `MotionValue`.\n   *\n   * @remarks\n   *\n   * ```jsx\n   * const x = useMotionValue(0)\n   * x.set(10)\n   * ```\n   *\n   * @param latest - Latest value to set.\n   * @param render - Whether to notify render subscribers. Defaults to `true`\n   *\n   * @public\n   */\n  set(t, n = !0) {\n    !n || !this.passiveEffect ? this.updateAndNotify(t, n) : this.passiveEffect(t, this.updateAndNotify);\n  }\n  setWithVelocity(t, n, r) {\n    this.set(n), this.prev = void 0, this.prevFrameValue = t, this.prevUpdatedAt = this.updatedAt - r;\n  }\n  /**\n   * Set the state of the `MotionValue`, stopping any active animations,\n   * effects, and resets velocity to `0`.\n   */\n  jump(t, n = !0) {\n    this.updateAndNotify(t), this.prev = t, this.prevUpdatedAt = this.prevFrameValue = void 0, n && this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();\n  }\n  /**\n   * Returns the latest state of `MotionValue`\n   *\n   * @returns - The latest state of `MotionValue`\n   *\n   * @public\n   */\n  get() {\n    return wa.current && wa.current.push(this), this.current;\n  }\n  /**\n   * @public\n   */\n  getPrevious() {\n    return this.prev;\n  }\n  /**\n   * Returns the latest velocity of `MotionValue`\n   *\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n   *\n   * @public\n   */\n  getVelocity() {\n    const t = Dr.now();\n    if (!this.canTrackVelocity || this.prevFrameValue === void 0 || t - this.updatedAt > t2)\n      return 0;\n    const n = Math.min(this.updatedAt - this.prevUpdatedAt, t2);\n    return x4(parseFloat(this.current) - parseFloat(this.prevFrameValue), n);\n  }\n  /**\n   * Registers a new animation to control this `MotionValue`. Only one\n   * animation can drive a `MotionValue` at one time.\n   *\n   * ```jsx\n   * value.start()\n   * ```\n   *\n   * @param animation - A function that starts the provided animation\n   *\n   * @internal\n   */\n  start(t) {\n    return this.stop(), new Promise((n) => {\n      this.hasAnimated = !0, this.animation = t(n), this.events.animationStart && this.events.animationStart.notify();\n    }).then(() => {\n      this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation();\n    });\n  }\n  /**\n   * Stop the currently active animation.\n   *\n   * @public\n   */\n  stop() {\n    this.animation && (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()), this.clearAnimation();\n  }\n  /**\n   * Returns `true` if this value is currently animating.\n   *\n   * @public\n   */\n  isAnimating() {\n    return !!this.animation;\n  }\n  clearAnimation() {\n    delete this.animation;\n  }\n  /**\n   * Destroy and clean up subscribers to this `MotionValue`.\n   *\n   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n   * created a `MotionValue` via the `motionValue` function.\n   *\n   * @public\n   */\n  destroy() {\n    this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();\n  }\n}\nfunction Bo(e, t) {\n  return new R4(e, t);\n}\nfunction MO(e, t, n) {\n  e.hasValue(t) ? e.getValue(t).set(n) : e.addValue(t, Bo(n));\n}\nfunction LO(e, t) {\n  const n = al(e, t);\n  let { transitionEnd: r = {}, transition: i = {}, ...o } = n || {};\n  o = { ...o, ...r };\n  for (const a in o) {\n    const s = ER(o[a]);\n    MO(e, a, s);\n  }\n}\nfunction P4(e) {\n  return e.getProps()[B5];\n}\nclass AO extends R4 {\n  constructor() {\n    super(...arguments), this.output = [], this.counts = /* @__PURE__ */ new Map();\n  }\n  add(t) {\n    const n = Y5(t);\n    if (!n)\n      return;\n    const r = this.counts.get(n) || 0;\n    this.counts.set(n, r + 1), r === 0 && (this.output.push(n), this.update());\n    let i = !1;\n    return () => {\n      if (i)\n        return;\n      i = !0;\n      const o = this.counts.get(n) - 1;\n      this.counts.set(n, o), o === 0 && (il(this.output, n), this.update());\n    };\n  }\n  update() {\n    this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n  }\n}\nfunction kO(e) {\n  return !!(Wt(e) && e.add);\n}\nfunction ud(e, t) {\n  var n;\n  if (!e.applyWillChange)\n    return;\n  let r = e.getValue(\"willChange\");\n  if (!r && !(!((n = e.props.style) === null || n === void 0) && n.willChange) && (r = new AO(\"auto\"), e.addValue(\"willChange\", r)), kO(r))\n    return r.add(t);\n}\nfunction _O({ protectedKeys: e, needsAnimating: t }, n) {\n  const r = e.hasOwnProperty(n) && t[n] !== !0;\n  return t[n] = !1, r;\n}\nfunction O4(e, t, { delay: n = 0, transitionOverride: r, type: i } = {}) {\n  var o;\n  let { transition: a = e.getDefaultTransition(), transitionEnd: s, ...c } = t;\n  r && (a = r);\n  const l = [], d = i && e.animationState && e.animationState.getState()[i];\n  for (const f in c) {\n    const g = e.getValue(f, (o = e.latestValues[f]) !== null && o !== void 0 ? o : null), b = c[f];\n    if (b === void 0 || d && _O(d, f))\n      continue;\n    const x = {\n      delay: n,\n      ...Zf(a || {}, f)\n    };\n    let m = !1;\n    if (window.MotionHandoffAnimation) {\n      const S = P4(e);\n      if (S) {\n        const T = window.MotionHandoffAnimation(S, f, ot);\n        T !== null && (x.startTime = T, m = !0);\n      }\n    }\n    g.start(nu(f, g, b, e.shouldReduceMotion && mi.has(f) ? { type: !1 } : x, e, m, ud(e, f)));\n    const C = g.animation;\n    C && l.push(C);\n  }\n  return s && Promise.all(l).then(() => {\n    ot.update(() => {\n      s && LO(e, s);\n    });\n  }), l;\n}\nfunction hd(e, t, n = {}) {\n  var r;\n  const i = al(e, t, n.type === \"exit\" ? (r = e.presenceContext) === null || r === void 0 ? void 0 : r.custom : void 0);\n  let { transition: o = e.getDefaultTransition() || {} } = i || {};\n  n.transitionOverride && (o = n.transitionOverride);\n  const a = i ? () => Promise.all(O4(e, i, n)) : () => Promise.resolve(), s = e.variantChildren && e.variantChildren.size ? (l = 0) => {\n    const { delayChildren: d = 0, staggerChildren: f, staggerDirection: g } = o;\n    return EO(e, t, d + l, f, g, n);\n  } : () => Promise.resolve(), { when: c } = o;\n  if (c) {\n    const [l, d] = c === \"beforeChildren\" ? [a, s] : [s, a];\n    return l().then(() => d());\n  } else\n    return Promise.all([a(), s(n.delay)]);\n}\nfunction EO(e, t, n = 0, r = 0, i = 1, o) {\n  const a = [], s = (e.variantChildren.size - 1) * r, c = i === 1 ? (l = 0) => l * r : (l = 0) => s - l * r;\n  return Array.from(e.variantChildren).sort(TO).forEach((l, d) => {\n    l.notify(\"AnimationStart\", t), a.push(hd(l, t, {\n      ...o,\n      delay: n + c(d)\n    }).then(() => l.notify(\"AnimationComplete\", t)));\n  }), Promise.all(a);\n}\nfunction TO(e, t) {\n  return e.sortNodePosition(t);\n}\nfunction BO(e, t, n = {}) {\n  e.notify(\"AnimationStart\", t);\n  let r;\n  if (Array.isArray(t)) {\n    const i = t.map((o) => hd(e, o, n));\n    r = Promise.all(i);\n  } else if (typeof t == \"string\")\n    r = hd(e, t, n);\n  else {\n    const i = typeof t == \"function\" ? al(e, t, n.custom) : t;\n    r = Promise.all(O4(e, i, n));\n  }\n  return r.then(() => {\n    e.notify(\"AnimationComplete\", t);\n  });\n}\nconst IO = [...Df].reverse(), DO = Df.length;\nfunction RO(e) {\n  return (t) => Promise.all(t.map(({ animation: n, options: r }) => BO(e, n, r)));\n}\nfunction PO(e) {\n  let t = RO(e), n = n2(), r = !0;\n  const i = (c) => (l, d) => {\n    var f;\n    const g = al(e, d, c === \"exit\" ? (f = e.presenceContext) === null || f === void 0 ? void 0 : f.custom : void 0);\n    if (g) {\n      const { transition: b, transitionEnd: x, ...m } = g;\n      l = { ...l, ...m, ...x };\n    }\n    return l;\n  };\n  function o(c) {\n    t = c(e);\n  }\n  function a(c) {\n    const l = e.getProps(), d = e.getVariantContext(!0) || {}, f = [], g = /* @__PURE__ */ new Set();\n    let b = {}, x = 1 / 0;\n    for (let C = 0; C < DO; C++) {\n      const S = IO[C], T = n[S], N = l[S] !== void 0 ? l[S] : d[S], W = Pa(N), U = S === c ? T.isActive : null;\n      U === !1 && (x = C);\n      let F = N === d[S] && N !== l[S] && W;\n      if (F && r && e.manuallyAnimateOnMount && (F = !1), T.protectedKeys = { ...b }, // If it isn't active and hasn't *just* been set as inactive\n      !T.isActive && U === null || // If we didn't and don't have any defined prop for this animation type\n      !N && !T.prevProp || // Or if the prop doesn't define an animation\n      Oa(N) || typeof N == \"boolean\")\n        continue;\n      let K = OO(T.prevProp, N) || // If we're making this variant active, we want to always make it active\n      S === c && T.isActive && !F && W || // If we removed a higher-priority variant (i is in reverse order)\n      C > x && W, J = !1;\n      const X = Array.isArray(N) ? N : [N];\n      let _ = X.reduce(i(S), {});\n      U === !1 && (_ = {});\n      const { prevResolvedValues: u = {} } = T, v = {\n        ...u,\n        ..._\n      }, w = (y) => {\n        K = !0, g.has(y) && (J = !0, g.delete(y)), T.needsAnimating[y] = !0;\n        const $ = e.getValue(y);\n        $ && ($.liveStyle = !1);\n      };\n      for (const y in v) {\n        const $ = _[y], A = u[y];\n        if (b.hasOwnProperty(y))\n          continue;\n        let H = !1;\n        id($) && id(A) ? H = !r4($, A) : H = $ !== A, H ? $ != null ? w(y) : g.add(y) : $ !== void 0 && g.has(y) ? w(y) : T.protectedKeys[y] = !0;\n      }\n      T.prevProp = N, T.prevResolvedValues = _, T.isActive && (b = { ...b, ..._ }), r && e.blockInitialAnimation && (K = !1), K && (!F || J) && f.push(...X.map((y) => ({\n        animation: y,\n        options: { type: S }\n      })));\n    }\n    if (g.size) {\n      const C = {};\n      g.forEach((S) => {\n        const T = e.getBaseTarget(S), N = e.getValue(S);\n        N && (N.liveStyle = !0), C[S] = T ?? null;\n      }), f.push({ animation: C });\n    }\n    let m = !!f.length;\n    return r && (l.initial === !1 || l.initial === l.animate) && !e.manuallyAnimateOnMount && (m = !1), r = !1, m ? t(f) : Promise.resolve();\n  }\n  function s(c, l) {\n    var d;\n    if (n[c].isActive === l)\n      return Promise.resolve();\n    (d = e.variantChildren) === null || d === void 0 || d.forEach((g) => {\n      var b;\n      return (b = g.animationState) === null || b === void 0 ? void 0 : b.setActive(c, l);\n    }), n[c].isActive = l;\n    const f = a(c);\n    for (const g in n)\n      n[g].protectedKeys = {};\n    return f;\n  }\n  return {\n    animateChanges: a,\n    setActive: s,\n    setAnimateFunction: o,\n    getState: () => n,\n    reset: () => {\n      n = n2(), r = !0;\n    }\n  };\n}\nfunction OO(e, t) {\n  return typeof t == \"string\" ? t !== e : Array.isArray(t) ? !r4(t, e) : !1;\n}\nfunction xi(e = !1) {\n  return {\n    isActive: e,\n    protectedKeys: {},\n    needsAnimating: {},\n    prevResolvedValues: {}\n  };\n}\nfunction n2() {\n  return {\n    animate: xi(!0),\n    whileInView: xi(),\n    whileHover: xi(),\n    whileTap: xi(),\n    whileDrag: xi(),\n    whileFocus: xi(),\n    exit: xi()\n  };\n}\nclass HO extends vi {\n  /**\n   * We dynamically generate the AnimationState manager as it contains a reference\n   * to the underlying animation library. We only want to load that if we load this,\n   * so people can optionally code split it out using the `m` component.\n   */\n  constructor(t) {\n    super(t), t.animationState || (t.animationState = PO(t));\n  }\n  updateAnimationControlsSubscription() {\n    const { animate: t } = this.node.getProps();\n    Oa(t) && (this.unmountControls = t.subscribe(this.node));\n  }\n  /**\n   * Subscribe any provided AnimationControls to the component's VisualElement\n   */\n  mount() {\n    this.updateAnimationControlsSubscription();\n  }\n  update() {\n    const { animate: t } = this.node.getProps(), { animate: n } = this.node.prevProps || {};\n    t !== n && this.updateAnimationControlsSubscription();\n  }\n  unmount() {\n    var t;\n    this.node.animationState.reset(), (t = this.unmountControls) === null || t === void 0 || t.call(this);\n  }\n}\nlet UO = 0;\nclass NO extends vi {\n  constructor() {\n    super(...arguments), this.id = UO++;\n  }\n  update() {\n    if (!this.node.presenceContext)\n      return;\n    const { isPresent: t, onExitComplete: n } = this.node.presenceContext, { isPresent: r } = this.node.prevPresenceContext || {};\n    if (!this.node.animationState || t === r)\n      return;\n    const i = this.node.animationState.setActive(\"exit\", !t);\n    n && !t && i.then(() => n(this.id));\n  }\n  mount() {\n    const { register: t } = this.node.presenceContext || {};\n    t && (this.unmount = t(this.id));\n  }\n  unmount() {\n  }\n}\nconst VO = {\n  animation: {\n    Feature: HO\n  },\n  exit: {\n    Feature: NO\n  }\n}, r2 = (e, t) => Math.abs(e - t);\nfunction zO(e, t) {\n  const n = r2(e.x, t.x), r = r2(e.y, t.y);\n  return Math.sqrt(n ** 2 + r ** 2);\n}\nclass H4 {\n  constructor(t, n, { transformPagePoint: r, contextWindow: i, dragSnapToOrigin: o = !1 } = {}) {\n    if (this.startEvent = null, this.lastMoveEvent = null, this.lastMoveEventInfo = null, this.handlers = {}, this.contextWindow = window, this.updatePoint = () => {\n      if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n        return;\n      const f = r1(this.lastMoveEventInfo, this.history), g = this.startEvent !== null, b = zO(f.offset, { x: 0, y: 0 }) >= 3;\n      if (!g && !b)\n        return;\n      const { point: x } = f, { timestamp: m } = Zt;\n      this.history.push({ ...x, timestamp: m });\n      const { onStart: C, onMove: S } = this.handlers;\n      g || (C && C(this.lastMoveEvent, f), this.startEvent = this.lastMoveEvent), S && S(this.lastMoveEvent, f);\n    }, this.handlePointerMove = (f, g) => {\n      this.lastMoveEvent = f, this.lastMoveEventInfo = n1(g, this.transformPagePoint), ot.update(this.updatePoint, !0);\n    }, this.handlePointerUp = (f, g) => {\n      this.end();\n      const { onEnd: b, onSessionEnd: x, resumeAnimation: m } = this.handlers;\n      if (this.dragSnapToOrigin && m && m(), !(this.lastMoveEvent && this.lastMoveEventInfo))\n        return;\n      const C = r1(f.type === \"pointercancel\" ? this.lastMoveEventInfo : n1(g, this.transformPagePoint), this.history);\n      this.startEvent && b && b(f, C), x && x(f, C);\n    }, !J5(t))\n      return;\n    this.dragSnapToOrigin = o, this.handlers = n, this.transformPagePoint = r, this.contextWindow = i || window;\n    const a = ol(t), s = n1(a, this.transformPagePoint), { point: c } = s, { timestamp: l } = Zt;\n    this.history = [{ ...c, timestamp: l }];\n    const { onSessionStart: d } = n;\n    d && d(t, r1(s, this.history)), this.removeListeners = Br(Tr(this.contextWindow, \"pointermove\", this.handlePointerMove), Tr(this.contextWindow, \"pointerup\", this.handlePointerUp), Tr(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n  }\n  updateHandlers(t) {\n    this.handlers = t;\n  }\n  end() {\n    this.removeListeners && this.removeListeners(), qn(this.updatePoint);\n  }\n}\nfunction n1(e, t) {\n  return t ? { point: t(e.point) } : e;\n}\nfunction i2(e, t) {\n  return { x: e.x - t.x, y: e.y - t.y };\n}\nfunction r1({ point: e }, t) {\n  return {\n    point: e,\n    delta: i2(e, U4(t)),\n    offset: i2(e, WO(t)),\n    velocity: FO(t, 0.1)\n  };\n}\nfunction WO(e) {\n  return e[0];\n}\nfunction U4(e) {\n  return e[e.length - 1];\n}\nfunction FO(e, t) {\n  if (e.length < 2)\n    return { x: 0, y: 0 };\n  let n = e.length - 1, r = null;\n  const i = U4(e);\n  for (; n >= 0 && (r = e[n], !(i.timestamp - r.timestamp > lr(t))); )\n    n--;\n  if (!r)\n    return { x: 0, y: 0 };\n  const o = Ir(i.timestamp - r.timestamp);\n  if (o === 0)\n    return { x: 0, y: 0 };\n  const a = {\n    x: (i.x - r.x) / o,\n    y: (i.y - r.y) / o\n  };\n  return a.x === 1 / 0 && (a.x = 0), a.y === 1 / 0 && (a.y = 0), a;\n}\nconst N4 = 1e-4, jO = 1 - N4, qO = 1 + N4, V4 = 0.01, ZO = 0 - V4, KO = 0 + V4;\nfunction $n(e) {\n  return e.max - e.min;\n}\nfunction GO(e, t, n) {\n  return Math.abs(e - t) <= n;\n}\nfunction o2(e, t, n, r = 0.5) {\n  e.origin = r, e.originPoint = Mt(t.min, t.max, e.origin), e.scale = $n(n) / $n(t), e.translate = Mt(n.min, n.max, e.origin) - e.originPoint, (e.scale >= jO && e.scale <= qO || isNaN(e.scale)) && (e.scale = 1), (e.translate >= ZO && e.translate <= KO || isNaN(e.translate)) && (e.translate = 0);\n}\nfunction $a(e, t, n, r) {\n  o2(e.x, t.x, n.x, r ? r.originX : void 0), o2(e.y, t.y, n.y, r ? r.originY : void 0);\n}\nfunction a2(e, t, n) {\n  e.min = n.min + t.min, e.max = e.min + $n(t);\n}\nfunction YO(e, t, n) {\n  a2(e.x, t.x, n.x), a2(e.y, t.y, n.y);\n}\nfunction s2(e, t, n) {\n  e.min = t.min - n.min, e.max = e.min + $n(t);\n}\nfunction Ca(e, t, n) {\n  s2(e.x, t.x, n.x), s2(e.y, t.y, n.y);\n}\nfunction XO(e, { min: t, max: n }, r) {\n  return t !== void 0 && e < t ? e = r ? Mt(t, e, r.min) : Math.max(e, t) : n !== void 0 && e > n && (e = r ? Mt(n, e, r.max) : Math.min(e, n)), e;\n}\nfunction c2(e, t, n) {\n  return {\n    min: t !== void 0 ? e.min + t : void 0,\n    max: n !== void 0 ? e.max + n - (e.max - e.min) : void 0\n  };\n}\nfunction JO(e, { top: t, left: n, bottom: r, right: i }) {\n  return {\n    x: c2(e.x, n, i),\n    y: c2(e.y, t, r)\n  };\n}\nfunction l2(e, t) {\n  let n = t.min - e.min, r = t.max - e.max;\n  return t.max - t.min < e.max - e.min && ([n, r] = [r, n]), { min: n, max: r };\n}\nfunction QO(e, t) {\n  return {\n    x: l2(e.x, t.x),\n    y: l2(e.y, t.y)\n  };\n}\nfunction eH(e, t) {\n  let n = 0.5;\n  const r = $n(e), i = $n(t);\n  return i > r ? n = Ua(t.min, t.max - r, e.min) : r > i && (n = Ua(e.min, e.max - i, t.min)), li(0, 1, n);\n}\nfunction tH(e, t) {\n  const n = {};\n  return t.min !== void 0 && (n.min = t.min - e.min), t.max !== void 0 && (n.max = t.max - e.min), n;\n}\nconst pd = 0.35;\nfunction nH(e = pd) {\n  return e === !1 ? e = 0 : e === !0 && (e = pd), {\n    x: d2(e, \"left\", \"right\"),\n    y: d2(e, \"top\", \"bottom\")\n  };\n}\nfunction d2(e, t, n) {\n  return {\n    min: f2(e, t),\n    max: f2(e, n)\n  };\n}\nfunction f2(e, t) {\n  return typeof e == \"number\" ? e : e[t] || 0;\n}\nconst u2 = () => ({\n  translate: 0,\n  scale: 1,\n  origin: 0,\n  originPoint: 0\n}), ao = () => ({\n  x: u2(),\n  y: u2()\n}), h2 = () => ({ min: 0, max: 0 }), Tt = () => ({\n  x: h2(),\n  y: h2()\n});\nfunction Tn(e) {\n  return [e(\"x\"), e(\"y\")];\n}\nfunction z4({ top: e, left: t, right: n, bottom: r }) {\n  return {\n    x: { min: t, max: n },\n    y: { min: e, max: r }\n  };\n}\nfunction rH({ x: e, y: t }) {\n  return { top: t.min, right: e.max, bottom: t.max, left: e.min };\n}\nfunction iH(e, t) {\n  if (!t)\n    return e;\n  const n = t({ x: e.left, y: e.top }), r = t({ x: e.right, y: e.bottom });\n  return {\n    top: n.y,\n    left: n.x,\n    bottom: r.y,\n    right: r.x\n  };\n}\nfunction i1(e) {\n  return e === void 0 || e === 1;\n}\nfunction gd({ scale: e, scaleX: t, scaleY: n }) {\n  return !i1(e) || !i1(t) || !i1(n);\n}\nfunction wi(e) {\n  return gd(e) || W4(e) || e.z || e.rotate || e.rotateX || e.rotateY || e.skewX || e.skewY;\n}\nfunction W4(e) {\n  return p2(e.x) || p2(e.y);\n}\nfunction p2(e) {\n  return e && e !== \"0%\";\n}\nfunction sc(e, t, n) {\n  const r = e - n, i = t * r;\n  return n + i;\n}\nfunction g2(e, t, n, r, i) {\n  return i !== void 0 && (e = sc(e, i, r)), sc(e, n, r) + t;\n}\nfunction md(e, t = 0, n = 1, r, i) {\n  e.min = g2(e.min, t, n, r, i), e.max = g2(e.max, t, n, r, i);\n}\nfunction F4(e, { x: t, y: n }) {\n  md(e.x, t.translate, t.scale, t.originPoint), md(e.y, n.translate, n.scale, n.originPoint);\n}\nconst m2 = 0.999999999999, v2 = 1.0000000000001;\nfunction oH(e, t, n, r = !1) {\n  const i = n.length;\n  if (!i)\n    return;\n  t.x = t.y = 1;\n  let o, a;\n  for (let s = 0; s < i; s++) {\n    o = n[s], a = o.projectionDelta;\n    const { visualElement: c } = o.options;\n    c && c.props.style && c.props.style.display === \"contents\" || (r && o.options.layoutScroll && o.scroll && o !== o.root && co(e, {\n      x: -o.scroll.offset.x,\n      y: -o.scroll.offset.y\n    }), a && (t.x *= a.x.scale, t.y *= a.y.scale, F4(e, a)), r && wi(o.latestValues) && co(e, o.latestValues));\n  }\n  t.x < v2 && t.x > m2 && (t.x = 1), t.y < v2 && t.y > m2 && (t.y = 1);\n}\nfunction so(e, t) {\n  e.min = e.min + t, e.max = e.max + t;\n}\nfunction y2(e, t, n, r, i = 0.5) {\n  const o = Mt(e.min, e.max, i);\n  md(e, t, n, o, r);\n}\nfunction co(e, t) {\n  y2(e.x, t.x, t.scaleX, t.scale, t.originX), y2(e.y, t.y, t.scaleY, t.scale, t.originY);\n}\nfunction j4(e, t) {\n  return z4(iH(e.getBoundingClientRect(), t));\n}\nfunction aH(e, t, n) {\n  const r = j4(e, n), { scroll: i } = t;\n  return i && (so(r.x, i.offset.x), so(r.y, i.offset.y)), r;\n}\nconst q4 = ({ current: e }) => e ? e.ownerDocument.defaultView : null, sH = /* @__PURE__ */ new WeakMap();\nclass cH {\n  constructor(t) {\n    this.openGlobalLock = null, this.isDragging = !1, this.currentDirection = null, this.originPoint = { x: 0, y: 0 }, this.constraints = !1, this.hasMutatedConstraints = !1, this.elastic = Tt(), this.visualElement = t;\n  }\n  start(t, { snapToCursor: n = !1 } = {}) {\n    const { presenceContext: r } = this.visualElement;\n    if (r && r.isPresent === !1)\n      return;\n    const i = (d) => {\n      const { dragSnapToOrigin: f } = this.getProps();\n      f ? this.pauseAnimation() : this.stopAnimation(), n && this.snapToCursor(ol(d, \"page\").point);\n    }, o = (d, f) => {\n      var g;\n      const { drag: b, dragPropagation: x, onDragStart: m } = this.getProps();\n      if (b && !x && (this.openGlobalLock && this.openGlobalLock(), this.openGlobalLock = e4(b), !this.openGlobalLock))\n        return;\n      this.isDragging = !0, this.currentDirection = null, this.resolveConstraints(), this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !0, this.visualElement.projection.target = void 0), Tn((S) => {\n        let T = this.getAxisMotionValue(S).get() || 0;\n        if (cr.test(T)) {\n          const { projection: N } = this.visualElement;\n          if (N && N.layout) {\n            const W = N.layout.layoutBox[S];\n            W && (T = $n(W) * (parseFloat(T) / 100));\n          }\n        }\n        this.originPoint[S] = T;\n      }), m && ot.postRender(() => m(d, f)), (g = this.removeWillChange) === null || g === void 0 || g.call(this), this.removeWillChange = ud(this.visualElement, \"transform\");\n      const { animationState: C } = this.visualElement;\n      C && C.setActive(\"whileDrag\", !0);\n    }, a = (d, f) => {\n      const { dragPropagation: g, dragDirectionLock: b, onDirectionLock: x, onDrag: m } = this.getProps();\n      if (!g && !this.openGlobalLock)\n        return;\n      const { offset: C } = f;\n      if (b && this.currentDirection === null) {\n        this.currentDirection = lH(C), this.currentDirection !== null && x && x(this.currentDirection);\n        return;\n      }\n      this.updateAxis(\"x\", f.point, C), this.updateAxis(\"y\", f.point, C), this.visualElement.render(), m && m(d, f);\n    }, s = (d, f) => this.stop(d, f), c = () => Tn((d) => {\n      var f;\n      return this.getAnimationState(d) === \"paused\" && ((f = this.getAxisMotionValue(d).animation) === null || f === void 0 ? void 0 : f.play());\n    }), { dragSnapToOrigin: l } = this.getProps();\n    this.panSession = new H4(t, {\n      onSessionStart: i,\n      onStart: o,\n      onMove: a,\n      onSessionEnd: s,\n      resumeAnimation: c\n    }, {\n      transformPagePoint: this.visualElement.getTransformPagePoint(),\n      dragSnapToOrigin: l,\n      contextWindow: q4(this.visualElement)\n    });\n  }\n  stop(t, n) {\n    var r;\n    (r = this.removeWillChange) === null || r === void 0 || r.call(this);\n    const i = this.isDragging;\n    if (this.cancel(), !i)\n      return;\n    const { velocity: o } = n;\n    this.startAnimation(o);\n    const { onDragEnd: a } = this.getProps();\n    a && ot.postRender(() => a(t, n));\n  }\n  cancel() {\n    this.isDragging = !1;\n    const { projection: t, animationState: n } = this.visualElement;\n    t && (t.isAnimationBlocked = !1), this.panSession && this.panSession.end(), this.panSession = void 0;\n    const { dragPropagation: r } = this.getProps();\n    !r && this.openGlobalLock && (this.openGlobalLock(), this.openGlobalLock = null), n && n.setActive(\"whileDrag\", !1);\n  }\n  updateAxis(t, n, r) {\n    const { drag: i } = this.getProps();\n    if (!r || !vs(t, i, this.currentDirection))\n      return;\n    const o = this.getAxisMotionValue(t);\n    let a = this.originPoint[t] + r[t];\n    this.constraints && this.constraints[t] && (a = XO(a, this.constraints[t], this.elastic[t])), o.set(a);\n  }\n  resolveConstraints() {\n    var t;\n    const { dragConstraints: n, dragElastic: r } = this.getProps(), i = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(!1) : (t = this.visualElement.projection) === null || t === void 0 ? void 0 : t.layout, o = this.constraints;\n    n && io(n) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : n && i ? this.constraints = JO(i.layoutBox, n) : this.constraints = !1, this.elastic = nH(r), o !== this.constraints && i && this.constraints && !this.hasMutatedConstraints && Tn((a) => {\n      this.constraints !== !1 && this.getAxisMotionValue(a) && (this.constraints[a] = tH(i.layoutBox[a], this.constraints[a]));\n    });\n  }\n  resolveRefConstraints() {\n    const { dragConstraints: t, onMeasureDragConstraints: n } = this.getProps();\n    if (!t || !io(t))\n      return !1;\n    const r = t.current;\n    ci(r !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n    const { projection: i } = this.visualElement;\n    if (!i || !i.layout)\n      return !1;\n    const o = aH(r, i.root, this.visualElement.getTransformPagePoint());\n    let a = QO(i.layout.layoutBox, o);\n    if (n) {\n      const s = n(rH(a));\n      this.hasMutatedConstraints = !!s, s && (a = z4(s));\n    }\n    return a;\n  }\n  startAnimation(t) {\n    const { drag: n, dragMomentum: r, dragElastic: i, dragTransition: o, dragSnapToOrigin: a, onDragTransitionEnd: s } = this.getProps(), c = this.constraints || {}, l = Tn((d) => {\n      if (!vs(d, n, this.currentDirection))\n        return;\n      let f = c && c[d] || {};\n      a && (f = { min: 0, max: 0 });\n      const g = i ? 200 : 1e6, b = i ? 40 : 1e7, x = {\n        type: \"inertia\",\n        velocity: r ? t[d] : 0,\n        bounceStiffness: g,\n        bounceDamping: b,\n        timeConstant: 750,\n        restDelta: 1,\n        restSpeed: 10,\n        ...o,\n        ...f\n      };\n      return this.startAxisValueAnimation(d, x);\n    });\n    return Promise.all(l).then(s);\n  }\n  startAxisValueAnimation(t, n) {\n    const r = this.getAxisMotionValue(t);\n    return r.start(nu(t, r, 0, n, this.visualElement, !1, ud(this.visualElement, t)));\n  }\n  stopAnimation() {\n    Tn((t) => this.getAxisMotionValue(t).stop());\n  }\n  pauseAnimation() {\n    Tn((t) => {\n      var n;\n      return (n = this.getAxisMotionValue(t).animation) === null || n === void 0 ? void 0 : n.pause();\n    });\n  }\n  getAnimationState(t) {\n    var n;\n    return (n = this.getAxisMotionValue(t).animation) === null || n === void 0 ? void 0 : n.state;\n  }\n  /**\n   * Drag works differently depending on which props are provided.\n   *\n   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n   * - Otherwise, we apply the delta to the x/y motion values.\n   */\n  getAxisMotionValue(t) {\n    const n = `_drag${t.toUpperCase()}`, r = this.visualElement.getProps(), i = r[n];\n    return i || this.visualElement.getValue(t, (r.initial ? r.initial[t] : void 0) || 0);\n  }\n  snapToCursor(t) {\n    Tn((n) => {\n      const { drag: r } = this.getProps();\n      if (!vs(n, r, this.currentDirection))\n        return;\n      const { projection: i } = this.visualElement, o = this.getAxisMotionValue(n);\n      if (i && i.layout) {\n        const { min: a, max: s } = i.layout.layoutBox[n];\n        o.set(t[n] - Mt(a, s, 0.5));\n      }\n    });\n  }\n  /**\n   * When the viewport resizes we want to check if the measured constraints\n   * have changed and, if so, reposition the element within those new constraints\n   * relative to where it was before the resize.\n   */\n  scalePositionWithinConstraints() {\n    if (!this.visualElement.current)\n      return;\n    const { drag: t, dragConstraints: n } = this.getProps(), { projection: r } = this.visualElement;\n    if (!io(n) || !r || !this.constraints)\n      return;\n    this.stopAnimation();\n    const i = { x: 0, y: 0 };\n    Tn((a) => {\n      const s = this.getAxisMotionValue(a);\n      if (s && this.constraints !== !1) {\n        const c = s.get();\n        i[a] = eH({ min: c, max: c }, this.constraints[a]);\n      }\n    });\n    const { transformTemplate: o } = this.visualElement.getProps();\n    this.visualElement.current.style.transform = o ? o({}, \"\") : \"none\", r.root && r.root.updateScroll(), r.updateLayout(), this.resolveConstraints(), Tn((a) => {\n      if (!vs(a, t, null))\n        return;\n      const s = this.getAxisMotionValue(a), { min: c, max: l } = this.constraints[a];\n      s.set(Mt(c, l, i[a]));\n    });\n  }\n  addListeners() {\n    if (!this.visualElement.current)\n      return;\n    sH.set(this.visualElement, this);\n    const t = this.visualElement.current, n = Tr(t, \"pointerdown\", (c) => {\n      const { drag: l, dragListener: d = !0 } = this.getProps();\n      l && d && this.start(c);\n    }), r = () => {\n      const { dragConstraints: c } = this.getProps();\n      io(c) && c.current && (this.constraints = this.resolveRefConstraints());\n    }, { projection: i } = this.visualElement, o = i.addEventListener(\"measure\", r);\n    i && !i.layout && (i.root && i.root.updateScroll(), i.updateLayout()), ot.read(r);\n    const a = Er(window, \"resize\", () => this.scalePositionWithinConstraints()), s = i.addEventListener(\"didUpdate\", ({ delta: c, hasLayoutChanged: l }) => {\n      this.isDragging && l && (Tn((d) => {\n        const f = this.getAxisMotionValue(d);\n        f && (this.originPoint[d] += c[d].translate, f.set(f.get() + c[d].translate));\n      }), this.visualElement.render());\n    });\n    return () => {\n      a(), n(), o(), s && s();\n    };\n  }\n  getProps() {\n    const t = this.visualElement.getProps(), { drag: n = !1, dragDirectionLock: r = !1, dragPropagation: i = !1, dragConstraints: o = !1, dragElastic: a = pd, dragMomentum: s = !0 } = t;\n    return {\n      ...t,\n      drag: n,\n      dragDirectionLock: r,\n      dragPropagation: i,\n      dragConstraints: o,\n      dragElastic: a,\n      dragMomentum: s\n    };\n  }\n}\nfunction vs(e, t, n) {\n  return (t === !0 || t === e) && (n === null || n === e);\n}\nfunction lH(e, t = 10) {\n  let n = null;\n  return Math.abs(e.y) > t ? n = \"y\" : Math.abs(e.x) > t && (n = \"x\"), n;\n}\nclass dH extends vi {\n  constructor(t) {\n    super(t), this.removeGroupControls = Xt, this.removeListeners = Xt, this.controls = new cH(t);\n  }\n  mount() {\n    const { dragControls: t } = this.node.getProps();\n    t && (this.removeGroupControls = t.subscribe(this.controls)), this.removeListeners = this.controls.addListeners() || Xt;\n  }\n  unmount() {\n    this.removeGroupControls(), this.removeListeners();\n  }\n}\nconst b2 = (e) => (t, n) => {\n  e && ot.postRender(() => e(t, n));\n};\nclass fH extends vi {\n  constructor() {\n    super(...arguments), this.removePointerDownListener = Xt;\n  }\n  onPointerDown(t) {\n    this.session = new H4(t, this.createPanHandlers(), {\n      transformPagePoint: this.node.getTransformPagePoint(),\n      contextWindow: q4(this.node)\n    });\n  }\n  createPanHandlers() {\n    const { onPanSessionStart: t, onPanStart: n, onPan: r, onPanEnd: i } = this.node.getProps();\n    return {\n      onSessionStart: b2(t),\n      onStart: b2(n),\n      onMove: r,\n      onEnd: (o, a) => {\n        delete this.session, i && ot.postRender(() => i(o, a));\n      }\n    };\n  }\n  mount() {\n    this.removePointerDownListener = Tr(this.node.current, \"pointerdown\", (t) => this.onPointerDown(t));\n  }\n  update() {\n    this.session && this.session.updateHandlers(this.createPanHandlers());\n  }\n  unmount() {\n    this.removePointerDownListener(), this.session && this.session.end();\n  }\n}\nfunction uH() {\n  const e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Tf);\n  if (e === null)\n    return [!0, null];\n  const { isPresent: t, onExitComplete: n, register: r } = e, i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => r(i), []);\n  const o = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => n && n(i), [i, n]);\n  return !t && n ? [!1, o] : [!0];\n}\nconst Is = {\n  /**\n   * Global flag as to whether the tree has animated since the last time\n   * we resized the window\n   */\n  hasAnimatedSinceResize: !0,\n  /**\n   * We set this to true once, on the first update. Any nodes added to the tree beyond that\n   * update will be given a `data-projection-id` attribute.\n   */\n  hasEverUpdated: !1\n};\nfunction x2(e, t) {\n  return t.max === t.min ? 0 : e / (t.max - t.min) * 100;\n}\nconst da = {\n  correct: (e, t) => {\n    if (!t.target)\n      return e;\n    if (typeof e == \"string\")\n      if (Ce.test(e))\n        e = parseFloat(e);\n      else\n        return e;\n    const n = x2(e, t.target.x), r = x2(e, t.target.y);\n    return `${n}% ${r}%`;\n  }\n}, hH = {\n  correct: (e, { treeScale: t, projectionDelta: n }) => {\n    const r = e, i = di.parse(e);\n    if (i.length > 5)\n      return r;\n    const o = di.createTransformer(e), a = typeof i[0] != \"number\" ? 1 : 0, s = n.x.scale * t.x, c = n.y.scale * t.y;\n    i[0 + a] /= s, i[1 + a] /= c;\n    const l = Mt(s, c, 0.5);\n    return typeof i[2 + a] == \"number\" && (i[2 + a] /= l), typeof i[3 + a] == \"number\" && (i[3 + a] /= l), o(i);\n  }\n};\nclass pH extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  /**\n   * This only mounts projection nodes for components that\n   * need measuring, we might want to do it for all components\n   * in order to incorporate transforms\n   */\n  componentDidMount() {\n    const { visualElement: t, layoutGroup: n, switchLayoutGroup: r, layoutId: i } = this.props, { projection: o } = t;\n    aR(gH), o && (n.group && n.group.add(o), r && r.register && i && r.register(o), o.root.didUpdate(), o.addEventListener(\"animationComplete\", () => {\n      this.safeToRemove();\n    }), o.setOptions({\n      ...o.options,\n      onExitComplete: () => this.safeToRemove()\n    })), Is.hasEverUpdated = !0;\n  }\n  getSnapshotBeforeUpdate(t) {\n    const { layoutDependency: n, visualElement: r, drag: i, isPresent: o } = this.props, a = r.projection;\n    return a && (a.isPresent = o, i || t.layoutDependency !== n || n === void 0 ? a.willUpdate() : this.safeToRemove(), t.isPresent !== o && (o ? a.promote() : a.relegate() || ot.postRender(() => {\n      const s = a.getStack();\n      (!s || !s.members.length) && this.safeToRemove();\n    }))), null;\n  }\n  componentDidUpdate() {\n    const { projection: t } = this.props.visualElement;\n    t && (t.root.didUpdate(), If.postRender(() => {\n      !t.currentAnimation && t.isLead() && this.safeToRemove();\n    }));\n  }\n  componentWillUnmount() {\n    const { visualElement: t, layoutGroup: n, switchLayoutGroup: r } = this.props, { projection: i } = t;\n    i && (i.scheduleCheckAfterUnmount(), n && n.group && n.group.remove(i), r && r.deregister && r.deregister(i));\n  }\n  safeToRemove() {\n    const { safeToRemove: t } = this.props;\n    t && t();\n  }\n  render() {\n    return null;\n  }\n}\nfunction Z4(e) {\n  const [t, n] = uH(), r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(O5);\n  return ni.jsx(pH, { ...e, layoutGroup: r, switchLayoutGroup: (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(D5), isPresent: t, safeToRemove: n });\n}\nconst gH = {\n  borderRadius: {\n    ...da,\n    applyTo: [\n      \"borderTopLeftRadius\",\n      \"borderTopRightRadius\",\n      \"borderBottomLeftRadius\",\n      \"borderBottomRightRadius\"\n    ]\n  },\n  borderTopLeftRadius: da,\n  borderTopRightRadius: da,\n  borderBottomLeftRadius: da,\n  borderBottomRightRadius: da,\n  boxShadow: hH\n}, K4 = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"], mH = K4.length, w2 = (e) => typeof e == \"string\" ? parseFloat(e) : e, $2 = (e) => typeof e == \"number\" || Ce.test(e);\nfunction vH(e, t, n, r, i, o) {\n  i ? (e.opacity = Mt(\n    0,\n    // TODO Reinstate this if only child\n    n.opacity !== void 0 ? n.opacity : 1,\n    yH(r)\n  ), e.opacityExit = Mt(t.opacity !== void 0 ? t.opacity : 1, 0, bH(r))) : o && (e.opacity = Mt(t.opacity !== void 0 ? t.opacity : 1, n.opacity !== void 0 ? n.opacity : 1, r));\n  for (let a = 0; a < mH; a++) {\n    const s = `border${K4[a]}Radius`;\n    let c = C2(t, s), l = C2(n, s);\n    if (c === void 0 && l === void 0)\n      continue;\n    c || (c = 0), l || (l = 0), c === 0 || l === 0 || $2(c) === $2(l) ? (e[s] = Math.max(Mt(w2(c), w2(l), r), 0), (cr.test(l) || cr.test(c)) && (e[s] += \"%\")) : e[s] = l;\n  }\n  (t.rotate || n.rotate) && (e.rotate = Mt(t.rotate || 0, n.rotate || 0, r));\n}\nfunction C2(e, t) {\n  return e[t] !== void 0 ? e[t] : e.borderRadius;\n}\nconst yH = G4(0, 0.5, A4), bH = G4(0.5, 0.95, Xt);\nfunction G4(e, t, n) {\n  return (r) => r < e ? 0 : r > t ? 1 : n(Ua(e, t, r));\n}\nfunction S2(e, t) {\n  e.min = t.min, e.max = t.max;\n}\nfunction En(e, t) {\n  S2(e.x, t.x), S2(e.y, t.y);\n}\nfunction M2(e, t) {\n  e.translate = t.translate, e.scale = t.scale, e.originPoint = t.originPoint, e.origin = t.origin;\n}\nfunction L2(e, t, n, r, i) {\n  return e -= t, e = sc(e, 1 / n, r), i !== void 0 && (e = sc(e, 1 / i, r)), e;\n}\nfunction xH(e, t = 0, n = 1, r = 0.5, i, o = e, a = e) {\n  if (cr.test(t) && (t = parseFloat(t), t = Mt(a.min, a.max, t / 100) - a.min), typeof t != \"number\")\n    return;\n  let s = Mt(o.min, o.max, r);\n  e === o && (s -= t), e.min = L2(e.min, t, n, s, i), e.max = L2(e.max, t, n, s, i);\n}\nfunction A2(e, t, [n, r, i], o, a) {\n  xH(e, t[n], t[r], t[i], t.scale, o, a);\n}\nconst wH = [\"x\", \"scaleX\", \"originX\"], $H = [\"y\", \"scaleY\", \"originY\"];\nfunction k2(e, t, n, r) {\n  A2(e.x, t, wH, n ? n.x : void 0, r ? r.x : void 0), A2(e.y, t, $H, n ? n.y : void 0, r ? r.y : void 0);\n}\nfunction _2(e) {\n  return e.translate === 0 && e.scale === 1;\n}\nfunction Y4(e) {\n  return _2(e.x) && _2(e.y);\n}\nfunction E2(e, t) {\n  return e.min === t.min && e.max === t.max;\n}\nfunction CH(e, t) {\n  return E2(e.x, t.x) && E2(e.y, t.y);\n}\nfunction T2(e, t) {\n  return Math.round(e.min) === Math.round(t.min) && Math.round(e.max) === Math.round(t.max);\n}\nfunction X4(e, t) {\n  return T2(e.x, t.x) && T2(e.y, t.y);\n}\nfunction B2(e) {\n  return $n(e.x) / $n(e.y);\n}\nfunction I2(e, t) {\n  return e.translate === t.translate && e.scale === t.scale && e.originPoint === t.originPoint;\n}\nclass SH {\n  constructor() {\n    this.members = [];\n  }\n  add(t) {\n    rl(this.members, t), t.scheduleRender();\n  }\n  remove(t) {\n    if (il(this.members, t), t === this.prevLead && (this.prevLead = void 0), t === this.lead) {\n      const n = this.members[this.members.length - 1];\n      n && this.promote(n);\n    }\n  }\n  relegate(t) {\n    const n = this.members.findIndex((i) => t === i);\n    if (n === 0)\n      return !1;\n    let r;\n    for (let i = n; i >= 0; i--) {\n      const o = this.members[i];\n      if (o.isPresent !== !1) {\n        r = o;\n        break;\n      }\n    }\n    return r ? (this.promote(r), !0) : !1;\n  }\n  promote(t, n) {\n    const r = this.lead;\n    if (t !== r && (this.prevLead = r, this.lead = t, t.show(), r)) {\n      r.instance && r.scheduleRender(), t.scheduleRender(), t.resumeFrom = r, n && (t.resumeFrom.preserveOpacity = !0), r.snapshot && (t.snapshot = r.snapshot, t.snapshot.latestValues = r.animationValues || r.latestValues), t.root && t.root.isUpdating && (t.isLayoutDirty = !0);\n      const { crossfade: i } = t.options;\n      i === !1 && r.hide();\n    }\n  }\n  exitAnimationComplete() {\n    this.members.forEach((t) => {\n      const { options: n, resumingFrom: r } = t;\n      n.onExitComplete && n.onExitComplete(), r && r.options.onExitComplete && r.options.onExitComplete();\n    });\n  }\n  scheduleRender() {\n    this.members.forEach((t) => {\n      t.instance && t.scheduleRender(!1);\n    });\n  }\n  /**\n   * Clear any leads that have been removed this render to prevent them from being\n   * used in future animations and to prevent memory leaks\n   */\n  removeLeadSnapshot() {\n    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);\n  }\n}\nfunction MH(e, t, n) {\n  let r = \"\";\n  const i = e.x.translate / t.x, o = e.y.translate / t.y, a = (n == null ? void 0 : n.z) || 0;\n  if ((i || o || a) && (r = `translate3d(${i}px, ${o}px, ${a}px) `), (t.x !== 1 || t.y !== 1) && (r += `scale(${1 / t.x}, ${1 / t.y}) `), n) {\n    const { transformPerspective: l, rotate: d, rotateX: f, rotateY: g, skewX: b, skewY: x } = n;\n    l && (r = `perspective(${l}px) ${r}`), d && (r += `rotate(${d}deg) `), f && (r += `rotateX(${f}deg) `), g && (r += `rotateY(${g}deg) `), b && (r += `skewX(${b}deg) `), x && (r += `skewY(${x}deg) `);\n  }\n  const s = e.x.scale * t.x, c = e.y.scale * t.y;\n  return (s !== 1 || c !== 1) && (r += `scale(${s}, ${c})`), r || \"none\";\n}\nconst LH = (e, t) => e.depth - t.depth;\nclass AH {\n  constructor() {\n    this.children = [], this.isDirty = !1;\n  }\n  add(t) {\n    rl(this.children, t), this.isDirty = !0;\n  }\n  remove(t) {\n    il(this.children, t), this.isDirty = !0;\n  }\n  forEach(t) {\n    this.isDirty && this.children.sort(LH), this.isDirty = !1, this.children.forEach(t);\n  }\n}\nfunction kH(e, t) {\n  const n = Dr.now(), r = ({ timestamp: i }) => {\n    const o = i - n;\n    o >= t && (qn(r), e(o - t));\n  };\n  return ot.read(r, !0), () => qn(r);\n}\nfunction _H(e) {\n  return e instanceof SVGElement && e.tagName !== \"svg\";\n}\nfunction EH(e, t, n) {\n  const r = Wt(e) ? e : Bo(e);\n  return r.start(nu(\"\", r, t, n)), r.animation;\n}\nconst $i = {\n  type: \"projectionFrame\",\n  totalNodes: 0,\n  resolvedTargetDeltas: 0,\n  recalculatedProjection: 0\n}, pa = typeof window < \"u\" && window.MotionDebug !== void 0, o1 = [\"\", \"X\", \"Y\", \"Z\"], TH = { visibility: \"hidden\" }, D2 = 1e3;\nlet BH = 0;\nfunction a1(e, t, n, r) {\n  const { latestValues: i } = t;\n  i[e] && (n[e] = i[e], t.setStaticValue(e, 0), r && (r[e] = 0));\n}\nfunction J4(e) {\n  if (e.hasCheckedOptimisedAppear = !0, e.root === e)\n    return;\n  const { visualElement: t } = e.options;\n  if (!t)\n    return;\n  const n = P4(t);\n  window.MotionHasOptimisedTransformAnimation(n) && window.MotionCancelOptimisedTransform(n);\n  const { parent: r } = e;\n  r && !r.hasCheckedOptimisedAppear && J4(r);\n}\nfunction Q4({ attachResizeListener: e, defaultParent: t, measureScroll: n, checkIsScrollRoot: r, resetTransform: i }) {\n  return class {\n    constructor(a = {}, s = t == null ? void 0 : t()) {\n      this.id = BH++, this.animationId = 0, this.children = /* @__PURE__ */ new Set(), this.options = {}, this.isTreeAnimating = !1, this.isAnimationBlocked = !1, this.isLayoutDirty = !1, this.isProjectionDirty = !1, this.isSharedProjectionDirty = !1, this.isTransformDirty = !1, this.updateManuallyBlocked = !1, this.updateBlockedByResize = !1, this.isUpdating = !1, this.isSVG = !1, this.needsReset = !1, this.shouldResetTransform = !1, this.hasCheckedOptimisedAppear = !1, this.treeScale = { x: 1, y: 1 }, this.eventHandlers = /* @__PURE__ */ new Map(), this.hasTreeAnimated = !1, this.updateScheduled = !1, this.scheduleUpdate = () => this.update(), this.projectionUpdateScheduled = !1, this.checkUpdateFailed = () => {\n        this.isUpdating && (this.isUpdating = !1, this.clearAllSnapshots());\n      }, this.updateProjection = () => {\n        this.projectionUpdateScheduled = !1, pa && ($i.totalNodes = $i.resolvedTargetDeltas = $i.recalculatedProjection = 0), this.nodes.forEach(RH), this.nodes.forEach(NH), this.nodes.forEach(VH), this.nodes.forEach(PH), pa && window.MotionDebug.record($i);\n      }, this.resolvedRelativeTargetAt = 0, this.hasProjected = !1, this.isVisible = !0, this.animationProgress = 0, this.sharedNodes = /* @__PURE__ */ new Map(), this.latestValues = a, this.root = s ? s.root || s : this, this.path = s ? [...s.path, s] : [], this.parent = s, this.depth = s ? s.depth + 1 : 0;\n      for (let c = 0; c < this.path.length; c++)\n        this.path[c].shouldResetTransform = !0;\n      this.root === this && (this.nodes = new AH());\n    }\n    addEventListener(a, s) {\n      return this.eventHandlers.has(a) || this.eventHandlers.set(a, new ru()), this.eventHandlers.get(a).add(s);\n    }\n    notifyListeners(a, ...s) {\n      const c = this.eventHandlers.get(a);\n      c && c.notify(...s);\n    }\n    hasListeners(a) {\n      return this.eventHandlers.has(a);\n    }\n    /**\n     * Lifecycles\n     */\n    mount(a, s = this.root.hasTreeAnimated) {\n      if (this.instance)\n        return;\n      this.isSVG = _H(a), this.instance = a;\n      const { layoutId: c, layout: l, visualElement: d } = this.options;\n      if (d && !d.current && d.mount(a), this.root.nodes.add(this), this.parent && this.parent.children.add(this), s && (l || c) && (this.isLayoutDirty = !0), e) {\n        let f;\n        const g = () => this.root.updateBlockedByResize = !1;\n        e(a, () => {\n          this.root.updateBlockedByResize = !0, f && f(), f = kH(g, 250), Is.hasAnimatedSinceResize && (Is.hasAnimatedSinceResize = !1, this.nodes.forEach(P2));\n        });\n      }\n      c && this.root.registerSharedNode(c, this), this.options.animate !== !1 && d && (c || l) && this.addEventListener(\"didUpdate\", ({ delta: f, hasLayoutChanged: g, hasRelativeTargetChanged: b, layout: x }) => {\n        if (this.isTreeAnimationBlocked()) {\n          this.target = void 0, this.relativeTarget = void 0;\n          return;\n        }\n        const m = this.options.transition || d.getDefaultTransition() || qH, { onLayoutAnimationStart: C, onLayoutAnimationComplete: S } = d.getProps(), T = !this.targetLayout || !X4(this.targetLayout, x) || b, N = !g && b;\n        if (this.options.layoutRoot || this.resumeFrom && this.resumeFrom.instance || N || g && (T || !this.currentAnimation)) {\n          this.resumeFrom && (this.resumingFrom = this.resumeFrom, this.resumingFrom.resumingFrom = void 0), this.setAnimationOrigin(f, N);\n          const W = {\n            ...Zf(m, \"layout\"),\n            onPlay: C,\n            onComplete: S\n          };\n          (d.shouldReduceMotion || this.options.layoutRoot) && (W.delay = 0, W.type = !1), this.startAnimation(W);\n        } else\n          g || P2(this), this.isLead() && this.options.onExitComplete && this.options.onExitComplete();\n        this.targetLayout = x;\n      });\n    }\n    unmount() {\n      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);\n      const a = this.getStack();\n      a && a.remove(this), this.parent && this.parent.children.delete(this), this.instance = void 0, qn(this.updateProjection);\n    }\n    // only on the root\n    blockUpdate() {\n      this.updateManuallyBlocked = !0;\n    }\n    unblockUpdate() {\n      this.updateManuallyBlocked = !1;\n    }\n    isUpdateBlocked() {\n      return this.updateManuallyBlocked || this.updateBlockedByResize;\n    }\n    isTreeAnimationBlocked() {\n      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || !1;\n    }\n    // Note: currently only running on root node\n    startUpdate() {\n      this.isUpdateBlocked() || (this.isUpdating = !0, this.nodes && this.nodes.forEach(zH), this.animationId++);\n    }\n    getTransformTemplate() {\n      const { visualElement: a } = this.options;\n      return a && a.getProps().transformTemplate;\n    }\n    willUpdate(a = !0) {\n      if (this.root.hasTreeAnimated = !0, this.root.isUpdateBlocked()) {\n        this.options.onExitComplete && this.options.onExitComplete();\n        return;\n      }\n      if (window.MotionCancelOptimisedTransform && !this.hasCheckedOptimisedAppear && J4(this), !this.root.isUpdating && this.root.startUpdate(), this.isLayoutDirty)\n        return;\n      this.isLayoutDirty = !0;\n      for (let d = 0; d < this.path.length; d++) {\n        const f = this.path[d];\n        f.shouldResetTransform = !0, f.updateScroll(\"snapshot\"), f.options.layoutRoot && f.willUpdate(!1);\n      }\n      const { layoutId: s, layout: c } = this.options;\n      if (s === void 0 && !c)\n        return;\n      const l = this.getTransformTemplate();\n      this.prevTransformTemplateValue = l ? l(this.latestValues, \"\") : void 0, this.updateSnapshot(), a && this.notifyListeners(\"willUpdate\");\n    }\n    update() {\n      if (this.updateScheduled = !1, this.isUpdateBlocked()) {\n        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(R2);\n        return;\n      }\n      this.isUpdating || this.nodes.forEach(HH), this.isUpdating = !1, this.nodes.forEach(UH), this.nodes.forEach(IH), this.nodes.forEach(DH), this.clearAllSnapshots();\n      const s = Dr.now();\n      Zt.delta = li(0, 1e3 / 60, s - Zt.timestamp), Zt.timestamp = s, Zt.isProcessing = !0, Gl.update.process(Zt), Gl.preRender.process(Zt), Gl.render.process(Zt), Zt.isProcessing = !1;\n    }\n    didUpdate() {\n      this.updateScheduled || (this.updateScheduled = !0, If.read(this.scheduleUpdate));\n    }\n    clearAllSnapshots() {\n      this.nodes.forEach(OH), this.sharedNodes.forEach(WH);\n    }\n    scheduleUpdateProjection() {\n      this.projectionUpdateScheduled || (this.projectionUpdateScheduled = !0, ot.preRender(this.updateProjection, !1, !0));\n    }\n    scheduleCheckAfterUnmount() {\n      ot.postRender(() => {\n        this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed();\n      });\n    }\n    /**\n     * Update measurements\n     */\n    updateSnapshot() {\n      this.snapshot || !this.instance || (this.snapshot = this.measure());\n    }\n    updateLayout() {\n      if (!this.instance || (this.updateScroll(), !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty))\n        return;\n      if (this.resumeFrom && !this.resumeFrom.instance)\n        for (let c = 0; c < this.path.length; c++)\n          this.path[c].updateScroll();\n      const a = this.layout;\n      this.layout = this.measure(!1), this.layoutCorrected = Tt(), this.isLayoutDirty = !1, this.projectionDelta = void 0, this.notifyListeners(\"measure\", this.layout.layoutBox);\n      const { visualElement: s } = this.options;\n      s && s.notify(\"LayoutMeasure\", this.layout.layoutBox, a ? a.layoutBox : void 0);\n    }\n    updateScroll(a = \"measure\") {\n      let s = !!(this.options.layoutScroll && this.instance);\n      if (this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === a && (s = !1), s) {\n        const c = r(this.instance);\n        this.scroll = {\n          animationId: this.root.animationId,\n          phase: a,\n          isRoot: c,\n          offset: n(this.instance),\n          wasRoot: this.scroll ? this.scroll.isRoot : c\n        };\n      }\n    }\n    resetTransform() {\n      if (!i)\n        return;\n      const a = this.isLayoutDirty || this.shouldResetTransform || this.options.alwaysMeasureLayout, s = this.projectionDelta && !Y4(this.projectionDelta), c = this.getTransformTemplate(), l = c ? c(this.latestValues, \"\") : void 0, d = l !== this.prevTransformTemplateValue;\n      a && (s || wi(this.latestValues) || d) && (i(this.instance, l), this.shouldResetTransform = !1, this.scheduleRender());\n    }\n    measure(a = !0) {\n      const s = this.measurePageBox();\n      let c = this.removeElementScroll(s);\n      return a && (c = this.removeTransform(c)), ZH(c), {\n        animationId: this.root.animationId,\n        measuredBox: s,\n        layoutBox: c,\n        latestValues: {},\n        source: this.id\n      };\n    }\n    measurePageBox() {\n      var a;\n      const { visualElement: s } = this.options;\n      if (!s)\n        return Tt();\n      const c = s.measureViewportBox();\n      if (!(((a = this.scroll) === null || a === void 0 ? void 0 : a.wasRoot) || this.path.some(KH))) {\n        const { scroll: d } = this.root;\n        d && (so(c.x, d.offset.x), so(c.y, d.offset.y));\n      }\n      return c;\n    }\n    removeElementScroll(a) {\n      var s;\n      const c = Tt();\n      if (En(c, a), !((s = this.scroll) === null || s === void 0) && s.wasRoot)\n        return c;\n      for (let l = 0; l < this.path.length; l++) {\n        const d = this.path[l], { scroll: f, options: g } = d;\n        d !== this.root && f && g.layoutScroll && (f.wasRoot && En(c, a), so(c.x, f.offset.x), so(c.y, f.offset.y));\n      }\n      return c;\n    }\n    applyTransform(a, s = !1) {\n      const c = Tt();\n      En(c, a);\n      for (let l = 0; l < this.path.length; l++) {\n        const d = this.path[l];\n        !s && d.options.layoutScroll && d.scroll && d !== d.root && co(c, {\n          x: -d.scroll.offset.x,\n          y: -d.scroll.offset.y\n        }), wi(d.latestValues) && co(c, d.latestValues);\n      }\n      return wi(this.latestValues) && co(c, this.latestValues), c;\n    }\n    removeTransform(a) {\n      const s = Tt();\n      En(s, a);\n      for (let c = 0; c < this.path.length; c++) {\n        const l = this.path[c];\n        if (!l.instance || !wi(l.latestValues))\n          continue;\n        gd(l.latestValues) && l.updateSnapshot();\n        const d = Tt(), f = l.measurePageBox();\n        En(d, f), k2(s, l.latestValues, l.snapshot ? l.snapshot.layoutBox : void 0, d);\n      }\n      return wi(this.latestValues) && k2(s, this.latestValues), s;\n    }\n    setTargetDelta(a) {\n      this.targetDelta = a, this.root.scheduleUpdateProjection(), this.isProjectionDirty = !0;\n    }\n    setOptions(a) {\n      this.options = {\n        ...this.options,\n        ...a,\n        crossfade: a.crossfade !== void 0 ? a.crossfade : !0\n      };\n    }\n    clearMeasurements() {\n      this.scroll = void 0, this.layout = void 0, this.snapshot = void 0, this.prevTransformTemplateValue = void 0, this.targetDelta = void 0, this.target = void 0, this.isLayoutDirty = !1;\n    }\n    forceRelativeParentToResolveTarget() {\n      this.relativeParent && this.relativeParent.resolvedRelativeTargetAt !== Zt.timestamp && this.relativeParent.resolveTargetDelta(!0);\n    }\n    resolveTargetDelta(a = !1) {\n      var s;\n      const c = this.getLead();\n      this.isProjectionDirty || (this.isProjectionDirty = c.isProjectionDirty), this.isTransformDirty || (this.isTransformDirty = c.isTransformDirty), this.isSharedProjectionDirty || (this.isSharedProjectionDirty = c.isSharedProjectionDirty);\n      const l = !!this.resumingFrom || this !== c;\n      if (!(a || l && this.isSharedProjectionDirty || this.isProjectionDirty || !((s = this.parent) === null || s === void 0) && s.isProjectionDirty || this.attemptToResolveRelativeTarget || this.root.updateBlockedByResize))\n        return;\n      const { layout: f, layoutId: g } = this.options;\n      if (!(!this.layout || !(f || g))) {\n        if (this.resolvedRelativeTargetAt = Zt.timestamp, !this.targetDelta && !this.relativeTarget) {\n          const b = this.getClosestProjectingParent();\n          b && b.layout && this.animationProgress !== 1 ? (this.relativeParent = b, this.forceRelativeParentToResolveTarget(), this.relativeTarget = Tt(), this.relativeTargetOrigin = Tt(), Ca(this.relativeTargetOrigin, this.layout.layoutBox, b.layout.layoutBox), En(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;\n        }\n        if (!(!this.relativeTarget && !this.targetDelta)) {\n          if (this.target || (this.target = Tt(), this.targetWithTransforms = Tt()), this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target ? (this.forceRelativeParentToResolveTarget(), YO(this.target, this.relativeTarget, this.relativeParent.target)) : this.targetDelta ? (this.resumingFrom ? this.target = this.applyTransform(this.layout.layoutBox) : En(this.target, this.layout.layoutBox), F4(this.target, this.targetDelta)) : En(this.target, this.layout.layoutBox), this.attemptToResolveRelativeTarget) {\n            this.attemptToResolveRelativeTarget = !1;\n            const b = this.getClosestProjectingParent();\n            b && !!b.resumingFrom == !!this.resumingFrom && !b.options.layoutScroll && b.target && this.animationProgress !== 1 ? (this.relativeParent = b, this.forceRelativeParentToResolveTarget(), this.relativeTarget = Tt(), this.relativeTargetOrigin = Tt(), Ca(this.relativeTargetOrigin, this.target, b.target), En(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;\n          }\n          pa && $i.resolvedTargetDeltas++;\n        }\n      }\n    }\n    getClosestProjectingParent() {\n      if (!(!this.parent || gd(this.parent.latestValues) || W4(this.parent.latestValues)))\n        return this.parent.isProjecting() ? this.parent : this.parent.getClosestProjectingParent();\n    }\n    isProjecting() {\n      return !!((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);\n    }\n    calcProjection() {\n      var a;\n      const s = this.getLead(), c = !!this.resumingFrom || this !== s;\n      let l = !0;\n      if ((this.isProjectionDirty || !((a = this.parent) === null || a === void 0) && a.isProjectionDirty) && (l = !1), c && (this.isSharedProjectionDirty || this.isTransformDirty) && (l = !1), this.resolvedRelativeTargetAt === Zt.timestamp && (l = !1), l)\n        return;\n      const { layout: d, layoutId: f } = this.options;\n      if (this.isTreeAnimating = !!(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation), this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0), !this.layout || !(d || f))\n        return;\n      En(this.layoutCorrected, this.layout.layoutBox);\n      const g = this.treeScale.x, b = this.treeScale.y;\n      oH(this.layoutCorrected, this.treeScale, this.path, c), s.layout && !s.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1) && (s.target = s.layout.layoutBox, s.targetWithTransforms = Tt());\n      const { target: x } = s;\n      if (!x) {\n        this.prevProjectionDelta && (this.createProjectionDeltas(), this.scheduleRender());\n        return;\n      }\n      !this.projectionDelta || !this.prevProjectionDelta ? this.createProjectionDeltas() : (M2(this.prevProjectionDelta.x, this.projectionDelta.x), M2(this.prevProjectionDelta.y, this.projectionDelta.y)), $a(this.projectionDelta, this.layoutCorrected, x, this.latestValues), (this.treeScale.x !== g || this.treeScale.y !== b || !I2(this.projectionDelta.x, this.prevProjectionDelta.x) || !I2(this.projectionDelta.y, this.prevProjectionDelta.y)) && (this.hasProjected = !0, this.scheduleRender(), this.notifyListeners(\"projectionUpdate\", x)), pa && $i.recalculatedProjection++;\n    }\n    hide() {\n      this.isVisible = !1;\n    }\n    show() {\n      this.isVisible = !0;\n    }\n    scheduleRender(a = !0) {\n      var s;\n      if ((s = this.options.visualElement) === null || s === void 0 || s.scheduleRender(), a) {\n        const c = this.getStack();\n        c && c.scheduleRender();\n      }\n      this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0);\n    }\n    createProjectionDeltas() {\n      this.prevProjectionDelta = ao(), this.projectionDelta = ao(), this.projectionDeltaWithTransform = ao();\n    }\n    setAnimationOrigin(a, s = !1) {\n      const c = this.snapshot, l = c ? c.latestValues : {}, d = { ...this.latestValues }, f = ao();\n      (!this.relativeParent || !this.relativeParent.options.layoutRoot) && (this.relativeTarget = this.relativeTargetOrigin = void 0), this.attemptToResolveRelativeTarget = !s;\n      const g = Tt(), b = c ? c.source : void 0, x = this.layout ? this.layout.source : void 0, m = b !== x, C = this.getStack(), S = !C || C.members.length <= 1, T = !!(m && !S && this.options.crossfade === !0 && !this.path.some(jH));\n      this.animationProgress = 0;\n      let N;\n      this.mixTargetDelta = (W) => {\n        const U = W / 1e3;\n        O2(f.x, a.x, U), O2(f.y, a.y, U), this.setTargetDelta(f), this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout && (Ca(g, this.layout.layoutBox, this.relativeParent.layout.layoutBox), FH(this.relativeTarget, this.relativeTargetOrigin, g, U), N && CH(this.relativeTarget, N) && (this.isProjectionDirty = !1), N || (N = Tt()), En(N, this.relativeTarget)), m && (this.animationValues = d, vH(d, l, this.latestValues, U, T, S)), this.root.scheduleUpdateProjection(), this.scheduleRender(), this.animationProgress = U;\n      }, this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);\n    }\n    startAnimation(a) {\n      this.notifyListeners(\"animationStart\"), this.currentAnimation && this.currentAnimation.stop(), this.resumingFrom && this.resumingFrom.currentAnimation && this.resumingFrom.currentAnimation.stop(), this.pendingAnimation && (qn(this.pendingAnimation), this.pendingAnimation = void 0), this.pendingAnimation = ot.update(() => {\n        Is.hasAnimatedSinceResize = !0, this.currentAnimation = EH(0, D2, {\n          ...a,\n          onUpdate: (s) => {\n            this.mixTargetDelta(s), a.onUpdate && a.onUpdate(s);\n          },\n          onComplete: () => {\n            a.onComplete && a.onComplete(), this.completeAnimation();\n          }\n        }), this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation), this.pendingAnimation = void 0;\n      });\n    }\n    completeAnimation() {\n      this.resumingFrom && (this.resumingFrom.currentAnimation = void 0, this.resumingFrom.preserveOpacity = void 0);\n      const a = this.getStack();\n      a && a.exitAnimationComplete(), this.resumingFrom = this.currentAnimation = this.animationValues = void 0, this.notifyListeners(\"animationComplete\");\n    }\n    finishAnimation() {\n      this.currentAnimation && (this.mixTargetDelta && this.mixTargetDelta(D2), this.currentAnimation.stop()), this.completeAnimation();\n    }\n    applyTransformsToTarget() {\n      const a = this.getLead();\n      let { targetWithTransforms: s, target: c, layout: l, latestValues: d } = a;\n      if (!(!s || !c || !l)) {\n        if (this !== a && this.layout && l && e9(this.options.animationType, this.layout.layoutBox, l.layoutBox)) {\n          c = this.target || Tt();\n          const f = $n(this.layout.layoutBox.x);\n          c.x.min = a.target.x.min, c.x.max = c.x.min + f;\n          const g = $n(this.layout.layoutBox.y);\n          c.y.min = a.target.y.min, c.y.max = c.y.min + g;\n        }\n        En(s, c), co(s, d), $a(this.projectionDeltaWithTransform, this.layoutCorrected, s, d);\n      }\n    }\n    registerSharedNode(a, s) {\n      this.sharedNodes.has(a) || this.sharedNodes.set(a, new SH()), this.sharedNodes.get(a).add(s);\n      const l = s.options.initialPromotionConfig;\n      s.promote({\n        transition: l ? l.transition : void 0,\n        preserveFollowOpacity: l && l.shouldPreserveFollowOpacity ? l.shouldPreserveFollowOpacity(s) : void 0\n      });\n    }\n    isLead() {\n      const a = this.getStack();\n      return a ? a.lead === this : !0;\n    }\n    getLead() {\n      var a;\n      const { layoutId: s } = this.options;\n      return s ? ((a = this.getStack()) === null || a === void 0 ? void 0 : a.lead) || this : this;\n    }\n    getPrevLead() {\n      var a;\n      const { layoutId: s } = this.options;\n      return s ? (a = this.getStack()) === null || a === void 0 ? void 0 : a.prevLead : void 0;\n    }\n    getStack() {\n      const { layoutId: a } = this.options;\n      if (a)\n        return this.root.sharedNodes.get(a);\n    }\n    promote({ needsReset: a, transition: s, preserveFollowOpacity: c } = {}) {\n      const l = this.getStack();\n      l && l.promote(this, c), a && (this.projectionDelta = void 0, this.needsReset = !0), s && this.setOptions({ transition: s });\n    }\n    relegate() {\n      const a = this.getStack();\n      return a ? a.relegate(this) : !1;\n    }\n    resetSkewAndRotation() {\n      const { visualElement: a } = this.options;\n      if (!a)\n        return;\n      let s = !1;\n      const { latestValues: c } = a;\n      if ((c.z || c.rotate || c.rotateX || c.rotateY || c.rotateZ || c.skewX || c.skewY) && (s = !0), !s)\n        return;\n      const l = {};\n      c.z && a1(\"z\", a, l, this.animationValues);\n      for (let d = 0; d < o1.length; d++)\n        a1(`rotate${o1[d]}`, a, l, this.animationValues), a1(`skew${o1[d]}`, a, l, this.animationValues);\n      a.render();\n      for (const d in l)\n        a.setStaticValue(d, l[d]), this.animationValues && (this.animationValues[d] = l[d]);\n      a.scheduleRender();\n    }\n    getProjectionStyles(a) {\n      var s, c;\n      if (!this.instance || this.isSVG)\n        return;\n      if (!this.isVisible)\n        return TH;\n      const l = {\n        visibility: \"\"\n      }, d = this.getTransformTemplate();\n      if (this.needsReset)\n        return this.needsReset = !1, l.opacity = \"\", l.pointerEvents = Ts(a == null ? void 0 : a.pointerEvents) || \"\", l.transform = d ? d(this.latestValues, \"\") : \"none\", l;\n      const f = this.getLead();\n      if (!this.projectionDelta || !this.layout || !f.target) {\n        const m = {};\n        return this.options.layoutId && (m.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1, m.pointerEvents = Ts(a == null ? void 0 : a.pointerEvents) || \"\"), this.hasProjected && !wi(this.latestValues) && (m.transform = d ? d({}, \"\") : \"none\", this.hasProjected = !1), m;\n      }\n      const g = f.animationValues || f.latestValues;\n      this.applyTransformsToTarget(), l.transform = MH(this.projectionDeltaWithTransform, this.treeScale, g), d && (l.transform = d(g, l.transform));\n      const { x: b, y: x } = this.projectionDelta;\n      l.transformOrigin = `${b.origin * 100}% ${x.origin * 100}% 0`, f.animationValues ? l.opacity = f === this ? (c = (s = g.opacity) !== null && s !== void 0 ? s : this.latestValues.opacity) !== null && c !== void 0 ? c : 1 : this.preserveOpacity ? this.latestValues.opacity : g.opacityExit : l.opacity = f === this ? g.opacity !== void 0 ? g.opacity : \"\" : g.opacityExit !== void 0 ? g.opacityExit : 0;\n      for (const m in nc) {\n        if (g[m] === void 0)\n          continue;\n        const { correct: C, applyTo: S } = nc[m], T = l.transform === \"none\" ? g[m] : C(g[m], f);\n        if (S) {\n          const N = S.length;\n          for (let W = 0; W < N; W++)\n            l[S[W]] = T;\n        } else\n          l[m] = T;\n      }\n      return this.options.layoutId && (l.pointerEvents = f === this ? Ts(a == null ? void 0 : a.pointerEvents) || \"\" : \"none\"), l;\n    }\n    clearSnapshot() {\n      this.resumeFrom = this.snapshot = void 0;\n    }\n    // Only run on root\n    resetTree() {\n      this.root.nodes.forEach((a) => {\n        var s;\n        return (s = a.currentAnimation) === null || s === void 0 ? void 0 : s.stop();\n      }), this.root.nodes.forEach(R2), this.root.sharedNodes.clear();\n    }\n  };\n}\nfunction IH(e) {\n  e.updateLayout();\n}\nfunction DH(e) {\n  var t;\n  const n = ((t = e.resumeFrom) === null || t === void 0 ? void 0 : t.snapshot) || e.snapshot;\n  if (e.isLead() && e.layout && n && e.hasListeners(\"didUpdate\")) {\n    const { layoutBox: r, measuredBox: i } = e.layout, { animationType: o } = e.options, a = n.source !== e.layout.source;\n    o === \"size\" ? Tn((f) => {\n      const g = a ? n.measuredBox[f] : n.layoutBox[f], b = $n(g);\n      g.min = r[f].min, g.max = g.min + b;\n    }) : e9(o, n.layoutBox, r) && Tn((f) => {\n      const g = a ? n.measuredBox[f] : n.layoutBox[f], b = $n(r[f]);\n      g.max = g.min + b, e.relativeTarget && !e.currentAnimation && (e.isProjectionDirty = !0, e.relativeTarget[f].max = e.relativeTarget[f].min + b);\n    });\n    const s = ao();\n    $a(s, r, n.layoutBox);\n    const c = ao();\n    a ? $a(c, e.applyTransform(i, !0), n.measuredBox) : $a(c, r, n.layoutBox);\n    const l = !Y4(s);\n    let d = !1;\n    if (!e.resumeFrom) {\n      const f = e.getClosestProjectingParent();\n      if (f && !f.resumeFrom) {\n        const { snapshot: g, layout: b } = f;\n        if (g && b) {\n          const x = Tt();\n          Ca(x, n.layoutBox, g.layoutBox);\n          const m = Tt();\n          Ca(m, r, b.layoutBox), X4(x, m) || (d = !0), f.options.layoutRoot && (e.relativeTarget = m, e.relativeTargetOrigin = x, e.relativeParent = f);\n        }\n      }\n    }\n    e.notifyListeners(\"didUpdate\", {\n      layout: r,\n      snapshot: n,\n      delta: c,\n      layoutDelta: s,\n      hasLayoutChanged: l,\n      hasRelativeTargetChanged: d\n    });\n  } else if (e.isLead()) {\n    const { onExitComplete: r } = e.options;\n    r && r();\n  }\n  e.options.transition = void 0;\n}\nfunction RH(e) {\n  pa && $i.totalNodes++, e.parent && (e.isProjecting() || (e.isProjectionDirty = e.parent.isProjectionDirty), e.isSharedProjectionDirty || (e.isSharedProjectionDirty = !!(e.isProjectionDirty || e.parent.isProjectionDirty || e.parent.isSharedProjectionDirty)), e.isTransformDirty || (e.isTransformDirty = e.parent.isTransformDirty));\n}\nfunction PH(e) {\n  e.isProjectionDirty = e.isSharedProjectionDirty = e.isTransformDirty = !1;\n}\nfunction OH(e) {\n  e.clearSnapshot();\n}\nfunction R2(e) {\n  e.clearMeasurements();\n}\nfunction HH(e) {\n  e.isLayoutDirty = !1;\n}\nfunction UH(e) {\n  const { visualElement: t } = e.options;\n  t && t.getProps().onBeforeLayoutMeasure && t.notify(\"BeforeLayoutMeasure\"), e.resetTransform();\n}\nfunction P2(e) {\n  e.finishAnimation(), e.targetDelta = e.relativeTarget = e.target = void 0, e.isProjectionDirty = !0;\n}\nfunction NH(e) {\n  e.resolveTargetDelta();\n}\nfunction VH(e) {\n  e.calcProjection();\n}\nfunction zH(e) {\n  e.resetSkewAndRotation();\n}\nfunction WH(e) {\n  e.removeLeadSnapshot();\n}\nfunction O2(e, t, n) {\n  e.translate = Mt(t.translate, 0, n), e.scale = Mt(t.scale, 1, n), e.origin = t.origin, e.originPoint = t.originPoint;\n}\nfunction H2(e, t, n, r) {\n  e.min = Mt(t.min, n.min, r), e.max = Mt(t.max, n.max, r);\n}\nfunction FH(e, t, n, r) {\n  H2(e.x, t.x, n.x, r), H2(e.y, t.y, n.y, r);\n}\nfunction jH(e) {\n  return e.animationValues && e.animationValues.opacityExit !== void 0;\n}\nconst qH = {\n  duration: 0.45,\n  ease: [0.4, 0, 0.1, 1]\n}, U2 = (e) => typeof navigator < \"u\" && navigator.userAgent && navigator.userAgent.toLowerCase().includes(e), N2 = U2(\"applewebkit/\") && !U2(\"chrome/\") ? Math.round : Xt;\nfunction V2(e) {\n  e.min = N2(e.min), e.max = N2(e.max);\n}\nfunction ZH(e) {\n  V2(e.x), V2(e.y);\n}\nfunction e9(e, t, n) {\n  return e === \"position\" || e === \"preserve-aspect\" && !GO(B2(t), B2(n), 0.2);\n}\nfunction KH(e) {\n  var t;\n  return e !== e.root && ((t = e.scroll) === null || t === void 0 ? void 0 : t.wasRoot);\n}\nconst GH = Q4({\n  attachResizeListener: (e, t) => Er(e, \"resize\", t),\n  measureScroll: () => ({\n    x: document.documentElement.scrollLeft || document.body.scrollLeft,\n    y: document.documentElement.scrollTop || document.body.scrollTop\n  }),\n  checkIsScrollRoot: () => !0\n}), s1 = {\n  current: void 0\n}, t9 = Q4({\n  measureScroll: (e) => ({\n    x: e.scrollLeft,\n    y: e.scrollTop\n  }),\n  defaultParent: () => {\n    if (!s1.current) {\n      const e = new GH({});\n      e.mount(window), e.setOptions({ layoutScroll: !0 }), s1.current = e;\n    }\n    return s1.current;\n  },\n  resetTransform: (e, t) => {\n    e.style.transform = t !== void 0 ? t : \"none\";\n  },\n  checkIsScrollRoot: (e) => window.getComputedStyle(e).position === \"fixed\"\n}), YH = {\n  pan: {\n    Feature: fH\n  },\n  drag: {\n    Feature: dH,\n    ProjectionNode: t9,\n    MeasureLayout: Z4\n  }\n}, vd = { current: null }, n9 = { current: !1 };\nfunction XH() {\n  if (n9.current = !0, !!Bf)\n    if (window.matchMedia) {\n      const e = window.matchMedia(\"(prefers-reduced-motion)\"), t = () => vd.current = e.matches;\n      e.addListener(t), t();\n    } else\n      vd.current = !1;\n}\nvar JH = {};\nfunction QH(e, t, n) {\n  for (const r in t) {\n    const i = t[r], o = n[r];\n    if (Wt(i))\n      e.addValue(r, i), JH.NODE_ENV === \"development\" && iu(i.version === \"11.3.30\", `Attempting to mix Framer Motion versions ${i.version} with 11.3.30 may not work as expected.`);\n    else if (Wt(o))\n      e.addValue(r, Bo(i, { owner: e }));\n    else if (o !== i)\n      if (e.hasValue(r)) {\n        const a = e.getValue(r);\n        a.liveStyle === !0 ? a.jump(i) : a.hasAnimated || a.set(i);\n      } else {\n        const a = e.getStaticValue(r);\n        e.addValue(r, Bo(a !== void 0 ? a : i, { owner: e }));\n      }\n  }\n  for (const r in n)\n    t[r] === void 0 && e.removeValue(r);\n  return t;\n}\nconst z2 = /* @__PURE__ */ new WeakMap(), eU = [...c4, tn, di], tU = (e) => eU.find(s4(e));\nvar nU = {};\nconst W2 = [\n  \"AnimationStart\",\n  \"AnimationComplete\",\n  \"Update\",\n  \"BeforeLayoutMeasure\",\n  \"LayoutMeasure\",\n  \"LayoutAnimationStart\",\n  \"LayoutAnimationComplete\"\n], rU = Rf.length;\nclass iU {\n  /**\n   * This method takes React props and returns found MotionValues. For example, HTML\n   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n   *\n   * This isn't an abstract method as it needs calling in the constructor, but it is\n   * intended to be one.\n   */\n  scrapeMotionValuesFromProps(t, n, r) {\n    return {};\n  }\n  constructor({ parent: t, props: n, presenceContext: r, reducedMotionConfig: i, blockInitialAnimation: o, visualState: a }, s = {}) {\n    this.applyWillChange = !1, this.current = null, this.children = /* @__PURE__ */ new Set(), this.isVariantNode = !1, this.isControllingVariants = !1, this.shouldReduceMotion = null, this.values = /* @__PURE__ */ new Map(), this.KeyframeResolver = Kf, this.features = {}, this.valueSubscriptions = /* @__PURE__ */ new Map(), this.prevMotionValues = {}, this.events = {}, this.propEventSubscriptions = {}, this.notifyUpdate = () => this.notify(\"Update\", this.latestValues), this.render = () => {\n      this.isRenderScheduled = !1, this.current && (this.triggerBuild(), this.renderInstance(this.current, this.renderState, this.props.style, this.projection));\n    }, this.isRenderScheduled = !1, this.scheduleRender = () => {\n      this.isRenderScheduled || (this.isRenderScheduled = !0, ot.render(this.render, !1, !0));\n    };\n    const { latestValues: c, renderState: l } = a;\n    this.latestValues = c, this.baseTarget = { ...c }, this.initialValues = n.initial ? { ...c } : {}, this.renderState = l, this.parent = t, this.props = n, this.presenceContext = r, this.depth = t ? t.depth + 1 : 0, this.reducedMotionConfig = i, this.options = s, this.blockInitialAnimation = !!o, this.isControllingVariants = nl(n), this.isVariantNode = P5(n), this.isVariantNode && (this.variantChildren = /* @__PURE__ */ new Set()), this.manuallyAnimateOnMount = !!(t && t.current);\n    const { willChange: d, ...f } = this.scrapeMotionValuesFromProps(n, {}, this);\n    for (const g in f) {\n      const b = f[g];\n      c[g] !== void 0 && Wt(b) && b.set(c[g], !1);\n    }\n  }\n  mount(t) {\n    this.current = t, z2.set(t, this), this.projection && !this.projection.instance && this.projection.mount(t), this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = this.parent.addVariantChild(this)), this.values.forEach((n, r) => this.bindToMotionValue(r, n)), n9.current || XH(), this.shouldReduceMotion = this.reducedMotionConfig === \"never\" ? !1 : this.reducedMotionConfig === \"always\" ? !0 : vd.current, nU.NODE_ENV !== \"production\" && iu(this.shouldReduceMotion !== !0, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\"), this.parent && this.parent.children.add(this), this.update(this.props, this.presenceContext);\n  }\n  unmount() {\n    z2.delete(this.current), this.projection && this.projection.unmount(), qn(this.notifyUpdate), qn(this.render), this.valueSubscriptions.forEach((t) => t()), this.removeFromVariantTree && this.removeFromVariantTree(), this.parent && this.parent.children.delete(this);\n    for (const t in this.events)\n      this.events[t].clear();\n    for (const t in this.features) {\n      const n = this.features[t];\n      n && (n.unmount(), n.isMounted = !1);\n    }\n    this.current = null;\n  }\n  bindToMotionValue(t, n) {\n    this.valueSubscriptions.has(t) && this.valueSubscriptions.get(t)();\n    const r = mi.has(t), i = n.on(\"change\", (a) => {\n      this.latestValues[t] = a, this.props.onUpdate && ot.preRender(this.notifyUpdate), r && this.projection && (this.projection.isTransformDirty = !0);\n    }), o = n.on(\"renderRequest\", this.scheduleRender);\n    this.valueSubscriptions.set(t, () => {\n      i(), o(), n.owner && n.stop();\n    });\n  }\n  sortNodePosition(t) {\n    return !this.current || !this.sortInstanceNodePosition || this.type !== t.type ? 0 : this.sortInstanceNodePosition(this.current, t.current);\n  }\n  updateFeatures() {\n    let t = \"animation\";\n    for (t in Eo) {\n      const n = Eo[t];\n      if (!n)\n        continue;\n      const { isEnabled: r, Feature: i } = n;\n      if (!this.features[t] && i && r(this.props) && (this.features[t] = new i(this)), this.features[t]) {\n        const o = this.features[t];\n        o.isMounted ? o.update() : (o.mount(), o.isMounted = !0);\n      }\n    }\n  }\n  triggerBuild() {\n    this.build(this.renderState, this.latestValues, this.props);\n  }\n  /**\n   * Measure the current viewport box with or without transforms.\n   * Only measures axis-aligned boxes, rotate and skew must be manually\n   * removed with a re-render to work.\n   */\n  measureViewportBox() {\n    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : Tt();\n  }\n  getStaticValue(t) {\n    return this.latestValues[t];\n  }\n  setStaticValue(t, n) {\n    this.latestValues[t] = n;\n  }\n  /**\n   * Update the provided props. Ensure any newly-added motion values are\n   * added to our map, old ones removed, and listeners updated.\n   */\n  update(t, n) {\n    (t.transformTemplate || this.props.transformTemplate) && this.scheduleRender(), this.prevProps = this.props, this.props = t, this.prevPresenceContext = this.presenceContext, this.presenceContext = n;\n    for (let r = 0; r < W2.length; r++) {\n      const i = W2[r];\n      this.propEventSubscriptions[i] && (this.propEventSubscriptions[i](), delete this.propEventSubscriptions[i]);\n      const o = \"on\" + i, a = t[o];\n      a && (this.propEventSubscriptions[i] = this.on(i, a));\n    }\n    this.prevMotionValues = QH(this, this.scrapeMotionValuesFromProps(t, this.prevProps, this), this.prevMotionValues), this.handleChildMotionValue && this.handleChildMotionValue();\n  }\n  getProps() {\n    return this.props;\n  }\n  /**\n   * Returns the variant definition with a given name.\n   */\n  getVariant(t) {\n    return this.props.variants ? this.props.variants[t] : void 0;\n  }\n  /**\n   * Returns the defined default transition on this component.\n   */\n  getDefaultTransition() {\n    return this.props.transition;\n  }\n  getTransformPagePoint() {\n    return this.props.transformPagePoint;\n  }\n  getClosestVariantNode() {\n    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;\n  }\n  getVariantContext(t = !1) {\n    if (t)\n      return this.parent ? this.parent.getVariantContext() : void 0;\n    if (!this.isControllingVariants) {\n      const r = this.parent ? this.parent.getVariantContext() || {} : {};\n      return this.props.initial !== void 0 && (r.initial = this.props.initial), r;\n    }\n    const n = {};\n    for (let r = 0; r < rU; r++) {\n      const i = Rf[r], o = this.props[i];\n      (Pa(o) || o === !1) && (n[i] = o);\n    }\n    return n;\n  }\n  /**\n   * Add a child visual element to our set of children.\n   */\n  addVariantChild(t) {\n    const n = this.getClosestVariantNode();\n    if (n)\n      return n.variantChildren && n.variantChildren.add(t), () => n.variantChildren.delete(t);\n  }\n  /**\n   * Add a motion value and bind it to this visual element.\n   */\n  addValue(t, n) {\n    const r = this.values.get(t);\n    n !== r && (r && this.removeValue(t), this.bindToMotionValue(t, n), this.values.set(t, n), this.latestValues[t] = n.get());\n  }\n  /**\n   * Remove a motion value and unbind any active subscriptions.\n   */\n  removeValue(t) {\n    this.values.delete(t);\n    const n = this.valueSubscriptions.get(t);\n    n && (n(), this.valueSubscriptions.delete(t)), delete this.latestValues[t], this.removeValueFromRenderState(t, this.renderState);\n  }\n  /**\n   * Check whether we have a motion value for this key\n   */\n  hasValue(t) {\n    return this.values.has(t);\n  }\n  getValue(t, n) {\n    if (this.props.values && this.props.values[t])\n      return this.props.values[t];\n    let r = this.values.get(t);\n    return r === void 0 && n !== void 0 && (r = Bo(n === null ? void 0 : n, { owner: this }), this.addValue(t, r)), r;\n  }\n  /**\n   * If we're trying to animate to a previously unencountered value,\n   * we need to check for it in our state and as a last resort read it\n   * directly from the instance (which might have performance implications).\n   */\n  readValue(t, n) {\n    var r;\n    let i = this.latestValues[t] !== void 0 || !this.current ? this.latestValues[t] : (r = this.getBaseTargetFromProps(this.props, t)) !== null && r !== void 0 ? r : this.readValueFromInstance(this.current, t, this.options);\n    return i != null && (typeof i == \"string\" && (o4(i) || i4(i)) ? i = parseFloat(i) : !tU(i) && di.test(n) && (i = m4(t, n)), this.setBaseTarget(t, Wt(i) ? i.get() : i)), Wt(i) ? i.get() : i;\n  }\n  /**\n   * Set the base target to later animate back to. This is currently\n   * only hydrated on creation and when we first read a value.\n   */\n  setBaseTarget(t, n) {\n    this.baseTarget[t] = n;\n  }\n  /**\n   * Find the base target for a value thats been removed from all animation\n   * props.\n   */\n  getBaseTarget(t) {\n    var n;\n    const { initial: r } = this.props;\n    let i;\n    if (typeof r == \"string\" || typeof r == \"object\") {\n      const a = jf(this.props, r, (n = this.presenceContext) === null || n === void 0 ? void 0 : n.custom);\n      a && (i = a[t]);\n    }\n    if (r && i !== void 0)\n      return i;\n    const o = this.getBaseTargetFromProps(this.props, t);\n    return o !== void 0 && !Wt(o) ? o : this.initialValues[t] !== void 0 && i === void 0 ? void 0 : this.baseTarget[t];\n  }\n  on(t, n) {\n    return this.events[t] || (this.events[t] = new ru()), this.events[t].add(n);\n  }\n  notify(t, ...n) {\n    this.events[t] && this.events[t].notify(...n);\n  }\n}\nclass r9 extends iU {\n  constructor() {\n    super(...arguments), this.KeyframeResolver = v4;\n  }\n  sortInstanceNodePosition(t, n) {\n    return t.compareDocumentPosition(n) & 2 ? 1 : -1;\n  }\n  getBaseTargetFromProps(t, n) {\n    return t.style ? t.style[n] : void 0;\n  }\n  removeValueFromRenderState(t, { vars: n, style: r }) {\n    delete n[t], delete r[t];\n  }\n}\nfunction oU(e) {\n  return window.getComputedStyle(e);\n}\nclass aU extends r9 {\n  constructor() {\n    super(...arguments), this.type = \"html\", this.applyWillChange = !0, this.renderInstance = j5;\n  }\n  readValueFromInstance(t, n) {\n    if (mi.has(n)) {\n      const r = Yf(n);\n      return r && r.default || 0;\n    } else {\n      const r = oU(t), i = (V5(n) ? r.getPropertyValue(n) : r[n]) || 0;\n      return typeof i == \"string\" ? i.trim() : i;\n    }\n  }\n  measureInstanceViewportBox(t, { transformPagePoint: n }) {\n    return j4(t, n);\n  }\n  build(t, n, r) {\n    Nf(t, n, r.transformTemplate);\n  }\n  scrapeMotionValuesFromProps(t, n, r) {\n    return Ff(t, n, r);\n  }\n  handleChildMotionValue() {\n    this.childSubscription && (this.childSubscription(), delete this.childSubscription);\n    const { children: t } = this.props;\n    Wt(t) && (this.childSubscription = t.on(\"change\", (n) => {\n      this.current && (this.current.textContent = `${n}`);\n    }));\n  }\n}\nclass sU extends r9 {\n  constructor() {\n    super(...arguments), this.type = \"svg\", this.isSVGTag = !1, this.measureInstanceViewportBox = Tt;\n  }\n  getBaseTargetFromProps(t, n) {\n    return t[n];\n  }\n  readValueFromInstance(t, n) {\n    if (mi.has(n)) {\n      const r = Yf(n);\n      return r && r.default || 0;\n    }\n    return n = q5.has(n) ? n : tl(n), t.getAttribute(n);\n  }\n  scrapeMotionValuesFromProps(t, n, r) {\n    return K5(t, n, r);\n  }\n  build(t, n, r) {\n    zf(t, n, this.isSVGTag, r.transformTemplate);\n  }\n  renderInstance(t, n, r, i) {\n    Z5(t, n, r, i);\n  }\n  mount(t) {\n    this.isSVGTag = Wf(t.tagName), super.mount(t);\n  }\n}\nconst cU = (e, t) => Pf(e) ? new sU(t) : new aU(t, {\n  allowProjection: e !== react__WEBPACK_IMPORTED_MODULE_0__.Fragment\n}), lU = {\n  layout: {\n    ProjectionNode: t9,\n    MeasureLayout: Z4\n  }\n}, dU = {\n  ...VO,\n  ...GR,\n  ...YH,\n  ...lU\n}, fU = /* @__PURE__ */ iR((e, t) => PR(e, t, dU, cU));\nfunction i9(e) {\n  const t = qf(() => Bo(e)), { isStatic: n } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Qc);\n  if (n) {\n    const [, r] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(e);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => t.on(\"change\", r), []);\n  }\n  return t;\n}\nconst uU = (e) => e && typeof e == \"object\" && e.mix, hU = (e) => uU(e) ? e.mix : void 0;\nfunction pU(...e) {\n  const t = !Array.isArray(e[0]), n = t ? 0 : -1, r = e[0 + n], i = e[1 + n], o = e[2 + n], a = e[3 + n], s = T4(i, o, {\n    mixer: hU(o[0]),\n    ...a\n  });\n  return t ? s(r) : s;\n}\nfunction ou(e, t) {\n  const n = i9(t()), r = () => n.set(t());\n  return r(), E5(() => {\n    const i = () => ot.preRender(r, !1, !0), o = e.map((a) => a.on(\"change\", i));\n    return () => {\n      o.forEach((a) => a()), qn(r);\n    };\n  }), n;\n}\nfunction gU(e) {\n  wa.current = [], e();\n  const t = ou(wa.current, e);\n  return wa.current = void 0, t;\n}\nfunction F2(e, t, n, r) {\n  if (typeof e == \"function\")\n    return gU(e);\n  const i = typeof t == \"function\" ? t : pU(t, n, r);\n  return Array.isArray(e) ? j2(e, i) : j2([e], ([o]) => i(o));\n}\nfunction j2(e, t) {\n  const n = qf(() => []);\n  return ou(e, () => {\n    n.length = 0;\n    const r = e.length;\n    for (let i = 0; i < r; i++)\n      n[i] = e[i].get();\n    return t(n);\n  });\n}\nfunction mU(e, ...t) {\n  const n = e.length;\n  function r() {\n    let i = \"\";\n    for (let o = 0; o < n; o++) {\n      i += e[o];\n      const a = t[o];\n      a && (i += Wt(a) ? a.get() : a);\n    }\n    return i;\n  }\n  return ou(t.filter(Wt), r);\n}\nfunction vU(e) {\n  const t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0), { isStatic: n } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Qc);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (n)\n      return;\n    const r = ({ timestamp: i, delta: o }) => {\n      t.current || (t.current = i), e(i - t.current, o);\n    };\n    return ot.update(r, !0), () => qn(r);\n  }, [e]);\n}\nconst cl = \"999px\", au = ({\n  uma: e,\n  isLoading: t\n}) => /* @__PURE__ */ p(bU, { children: /* @__PURE__ */ q(xU, { children: [\n  /* @__PURE__ */ p(wU, { children: /* @__PURE__ */ p(yU, { rx: \"30%\", ry: \"30%\", children: t && /* @__PURE__ */ p(LU, {}) }) }),\n  /* @__PURE__ */ p($U, {}),\n  /* @__PURE__ */ p(CU, { children: /* @__PURE__ */ q(SU, { children: [\n    /* @__PURE__ */ p(MU, { children: e }),\n    /* @__PURE__ */ p(vt, { name: \"Uma\", width: 19, color: [\"content\", \"secondary\"] })\n  ] }) })\n] }) }), yU = ({\n  children: e,\n  duration: t = 2e3,\n  rx: n,\n  ry: r\n}) => {\n  const i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), o = i9(0);\n  vU((l) => {\n    var f;\n    const d = (f = i.current) == null ? void 0 : f.getTotalLength();\n    if (d) {\n      const g = d / t;\n      o.set(l * g % d);\n    }\n  });\n  const a = F2(\n    o,\n    (l) => {\n      var d;\n      return (d = i.current) == null ? void 0 : d.getPointAtLength(l).x;\n    }\n  ), s = F2(\n    o,\n    (l) => {\n      var d;\n      return (d = i.current) == null ? void 0 : d.getPointAtLength(l).y;\n    }\n  ), c = mU`translateX(${a}px) translateY(${s}px) translateX(-50%) translateY(-50%)`;\n  return /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ p(\n      \"svg\",\n      {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        preserveAspectRatio: \"none\",\n        style: {\n          position: \"absolute\",\n          height: \"100%\",\n          width: \"100%\"\n        },\n        width: \"100%\",\n        height: \"100%\",\n        children: /* @__PURE__ */ p(\n          \"rect\",\n          {\n            fill: \"none\",\n            width: \"100%\",\n            height: \"100%\",\n            rx: n,\n            ry: r,\n            ref: i\n          }\n        )\n      }\n    ),\n    /* @__PURE__ */ p(\n      fU.div,\n      {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          display: \"inline-block\",\n          transform: c\n        },\n        children: e\n      }\n    )\n  ] });\n}, bU = G.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 16px 0;\n  position: relative;\n`, xU = G.div`\n  background: ${({ theme: e }) => e.controls.bg};\n  position: relative;\n  overflow: hidden;\n  border-radius: ${cl};\n`, wU = G.div`\n  position: absolute;\n  inset: 0;\n  border-radius: ${cl};\n`, $U = G.div`\n  background: ${({ theme: e }) => e.bg};\n  border-radius: ${cl};\n  margin: 4px;\n  position: absolute;\n  inset: 0;\n`, CU = G.div`\n  margin: 12px;\n`, SU = G.div`\n  background: ${({ theme: e }) => e.controls.bg};\n  border-radius: ${cl};\n  padding: 8px 16px;\n  z-index: 999;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  position: relative;\n`, MU = G.span`\n  color: ${({ theme: e }) => e.content.secondary};\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 24px; /* 150% */\n`, LU = G.div`\n  height: 80px;\n  width: 80px;\n  opacity: 0.8;\n  background: radial-gradient(#0068c9 40%, transparent 60%);\n`, AU = () => {\n  const { onBack: e } = Kn(), { uma: t } = Q6(), n = (t == null ? void 0 : t.split(\"@\")[1]) || \"\", r = n.charAt(0).toUpperCase() + n.slice(1);\n  return /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ q(kU, { children: [\n      /* @__PURE__ */ p(EU, { children: /* @__PURE__ */ p(au, { uma: t }) }),\n      /* @__PURE__ */ q(_U, { children: [\n        /* @__PURE__ */ p(Ni, { size: \"Large\", content: `${r} unavailable` }),\n        /* @__PURE__ */ p(\n          Go,\n          {\n            size: \"Large\",\n            content: `Sorry, ${r} doesn't support UMA Connect... yet.`,\n            color: [\"content\", \"secondary\"]\n          }\n        )\n      ] })\n    ] }),\n    /* @__PURE__ */ p(TU, { children: /* @__PURE__ */ p(\n      Dt,\n      {\n        text: \"Try another UMA\",\n        onClick: e,\n        typography: {\n          type: \"Title\"\n        },\n        kind: \"secondary\",\n        fullWidth: !0\n      }\n    ) })\n  ] });\n}, kU = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px 32px 0px 32px;\n  gap: 24px;\n`, _U = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 300px;\n  text-align: center;\n`, EU = G.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`, TU = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n  padding: 32px;\n`, BU = () => /* @__PURE__ */ p(xt, {}), IU = () => {\n  const { setStep: e } = Kn();\n  return /* @__PURE__ */ p(xt, { children: /* @__PURE__ */ p(DU, { children: /* @__PURE__ */ q(RU, { children: [\n    /* @__PURE__ */ q(PU, { children: [\n      /* @__PURE__ */ p(to, { size: \"Large\", content: \"Nostr Wallet Connect\" }),\n      /* @__PURE__ */ q(OU, { children: [\n        \"Connect a Bitcoin Lightning wallet compatible with Nostr Wallet Connect (NWC).\",\n        \" \",\n        /* @__PURE__ */ p(HU, { target: \"_blank\", href: \"https://nwc.dev/\", children: \"Learn more\" })\n      ] })\n    ] }),\n    /* @__PURE__ */ p(\n      Dt,\n      {\n        text: \"Connect wallet via NWC\",\n        onClick: () => {\n          e(kt.NostrWalletConnect);\n        },\n        typography: {\n          type: \"Label Strong\"\n        },\n        size: \"Large\",\n        paddingY: \"short\",\n        fullWidth: !0,\n        kind: \"tertiary\"\n      }\n    )\n  ] }) }) });\n}, DU = G.div`\n  display: flex;\n  padding: 16px 32px 32px 32px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  align-self: stretch;\n`, RU = G.div`\n  display: flex;\n  padding: 24px;\n  flex-direction: column;\n  gap: 16px;\n  border-radius: 16px;\n  background: #f2f2f2;\n`, PU = G.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 2px;\n  text-align: center;\n`, OU = G.div`\n  color: #686a72;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px; /* 142.857% */\n`, HU = G.a`\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 20px; /* 142.857% */\n  color: #0068c9;\n  text-decoration: none;\n`, UU = () => {\n  const [e, t] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), [n, r] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0), [i, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), { nwcRequester: a } = Jc(), { token: s } = vn();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    a && (async (l) => {\n      r(!0);\n      try {\n        const d = await l.getInfo();\n        t(d);\n      } catch (d) {\n        console.error(\"Error fetching getInfo:\", d), o(d.message);\n      }\n      r(!1);\n    })(a);\n  }, [a, s]), { getInfoResponse: e, isLoading: n, error: i };\n}, NU = () => {\n  const { setStep: e } = Kn(), [t, n] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\"), [r, i] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), {\n    getInfoResponse: o,\n    isLoading: a,\n    error: s\n  } = UU(), { setNwcConnectionUri: c, setAddress: l } = vn(), d = (g) => {\n    n(g);\n  }, f = () => {\n    i(!0), c(t);\n  };\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    !a && (o != null && o.lud16) ? (l(o.lud16), e(kt.DoneConnecting)) : s && (i(!1), c(void 0));\n  }, [\n    o,\n    a,\n    s,\n    l,\n    e,\n    c\n  ]), /* @__PURE__ */ p(xt, { children: /* @__PURE__ */ q(VU, { children: [\n    /* @__PURE__ */ p(\n      B6,\n      {\n        value: t,\n        onChange: d,\n        placeholder: \"Enter your Nostr Wallet Connect URL\",\n        borderRadius: \"round\",\n        typography: {\n          type: \"Body\",\n          size: \"Large\"\n        },\n        paddingX: 6,\n        paddingY: 14,\n        activeOutline: !0\n      }\n    ),\n    /* @__PURE__ */ p(\n      Dt,\n      {\n        text: \"Connect wallet\",\n        onClick: f,\n        typography: {\n          type: \"Title\"\n        },\n        paddingY: \"short\",\n        fullWidth: !0,\n        kind: \"tertiary\",\n        loading: r,\n        disabled: !t\n      }\n    )\n  ] }) });\n}, VU = G.div`\n  display: flex;\n  padding: 16px 32px 32px 32px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  align-self: stretch;\n`, zU = () => /* @__PURE__ */ p(xt, {}), WU = () => {\n  const { initialOAuthRequest: e, clearUserAuth: t, address: n } = vn(), { setStep: r } = Kn(), [i, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1), a = async () => {\n    o(!0);\n    const { success: l } = await e(n);\n    l || (t(), r(kt.ErrorConnecting));\n  }, s = (n == null ? void 0 : n.split(\"@\")[1]) || \"\", c = s.charAt(0).toUpperCase() + s.slice(1);\n  return /* @__PURE__ */ q(FU, { children: [\n    /* @__PURE__ */ p(au, { uma: n, isLoading: !0 }),\n    /* @__PURE__ */ q(jU, { children: [\n      /* @__PURE__ */ p(Ni, { size: \"Large\", content: \"Waiting for approval\" }),\n      /* @__PURE__ */ p(\n        Go,\n        {\n          size: \"Large\",\n          content: `Sign in to ${c} and follow the instructions to connect your UMA.`,\n          color: [\"content\", \"secondary\"]\n        }\n      )\n    ] }),\n    /* @__PURE__ */ p(\n      Dt,\n      {\n        text: \"Retry\",\n        kind: \"secondary\",\n        fullWidth: !0,\n        onClick: a,\n        loading: i\n      }\n    )\n  ] });\n}, FU = G.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 24px 32px 48px 32px;\n  gap: 24px;\n`, jU = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  text-align: center;\n`, qU = () => /* @__PURE__ */ q(xt, { children: [\n  /* @__PURE__ */ p(au, { uma: \"$you@domain.com\" }),\n  /* @__PURE__ */ q(ZU, { children: [\n    /* @__PURE__ */ q(K2, { children: [\n      /* @__PURE__ */ p(vt, { name: \"Globus\", width: 16, color: [\"content\", \"secondary\"] }),\n      /* @__PURE__ */ q(q2, { children: [\n        /* @__PURE__ */ p(Ni, { size: \"Medium\", content: \"It's like email, but for money\" }),\n        /* @__PURE__ */ p(Z2, { children: \"A Universal Money Address (UMA) lets you send and receive instant and low-fee payments to anyone, anywhere.\" })\n      ] })\n    ] }),\n    /* @__PURE__ */ q(K2, { children: [\n      /* @__PURE__ */ p(\n        vt,\n        {\n          name: \"SparklesSoft\",\n          width: 16,\n          color: [\"content\", \"secondary\"]\n        }\n      ),\n      /* @__PURE__ */ q(q2, { children: [\n        /* @__PURE__ */ p(Ni, { size: \"Medium\", content: \"Connect in seconds\" }),\n        /* @__PURE__ */ p(Z2, { children: \"Pay or receive with your UMA in your favorite apps — Just enter your UMA and approve the connection with your UMA provider.\" }),\n        /* @__PURE__ */ q(GU, { children: [\n          /* @__PURE__ */ p(\n            Go,\n            {\n              size: \"Small\",\n              content: \"Powered by\",\n              color: [\"content\", \"secondary\"]\n            }\n          ),\n          /* @__PURE__ */ p(KU, { target: \"_blank\", href: \"https://nwc.dev/\", children: \"Nostr Wallet Connect\" })\n        ] })\n      ] })\n    ] })\n  ] }),\n  /* @__PURE__ */ q(YU, { children: [\n    /* @__PURE__ */ p(\n      Dt,\n      {\n        text: \"Get an UMA\",\n        externalLink: \"https://www.uma.me/#getuma\",\n        typography: {\n          type: \"Label Strong\"\n        },\n        size: \"Large\",\n        kind: \"primary\",\n        fullWidth: !0\n      }\n    ),\n    /* @__PURE__ */ p(\n      Dt,\n      {\n        text: \"Learn more\",\n        externalLink: \"https://www.uma.me/faq\",\n        typography: {\n          type: \"Label Strong\"\n        },\n        size: \"Large\",\n        kind: \"linkLight\",\n        fullWidth: !0\n      }\n    )\n  ] })\n] }), ZU = G.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px 40px 0 32px;\n  gap: 24px;\n`, q2 = G.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n`, Z2 = G.span`\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px; /* 157.143% */\n  color: #686a72;\n`, KU = G.a`\n  font-family: Manrope;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 18px; /* 150% */\n  color: #0068c9;\n  text-decoration: none;\n`, K2 = G.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n`, GU = G.div`\n  display: flex;\n  flex-direction: row;\n  gap: 3px;\n  align-items: center;\n`, YU = G.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 100%;\n  padding: 32px;\n`;\nvar kt = /* @__PURE__ */ ((e) => (e.Empty = \"Empty\", e.Connect = \"Connect\", e.MoreOptions = \"MoreOptions\", e.NostrWalletConnect = \"NostrWalletConnect\", e.ConnectedWallet = \"ConnectedWallet\", e.ConnectedUma = \"ConnectedUma\", e.WaitingForApproval = \"WaitingForApproval\", e.Unavailable = \"Unavailable\", e.WhatIsUma = \"WhatIsUma\", e.ForgotYourUma = \"ForgotYourUma\", e.DoneConnecting = \"DoneConnecting\", e.ErrorConnecting = \"ErrorConnecting\", e.DisconnectConfirmation = \"DisconnectConfirmation\", e.DisconnectSuccess = \"DisconnectSuccess\", e))(kt || {});\nconst yd = {\n  Empty: {\n    component: () => null\n  },\n  Connect: {\n    component: __\n  },\n  MoreOptions: {\n    component: IU,\n    title: \"More options\",\n    prev: \"Connect\"\n    /* Connect */\n  },\n  NostrWalletConnect: {\n    component: NU,\n    title: \"Nostr Wallet Connect\",\n    prev: \"MoreOptions\"\n    /* MoreOptions */\n  },\n  ConnectedWallet: {\n    component: Mh,\n    title: \"Connected wallet\"\n  },\n  ConnectedUma: {\n    component: Mh,\n    title: \"Connected UMA\"\n  },\n  WaitingForApproval: {\n    component: WU,\n    title: \"Waiting for approval\",\n    prev: \"Connect\",\n    onBack: () => {\n      vn.getState().clearUserAuth();\n    },\n    onClose: () => {\n      vn.getState().clearUserAuth();\n    }\n  },\n  Unavailable: {\n    component: zU,\n    title: \"Unavailable\",\n    prev: \"Connect\"\n    /* Connect */\n  },\n  WhatIsUma: {\n    component: qU,\n    title: \"What is UMA?\",\n    prev: \"Connect\"\n    /* Connect */\n  },\n  ForgotYourUma: {\n    component: BU,\n    title: \"Forgot your UMA?\",\n    prev: \"MoreOptions\"\n    /* MoreOptions */\n  },\n  DoneConnecting: {\n    component: DD,\n    title: \"Connect your UMA\",\n    prev: \"Connect\"\n    /* Connect */\n  },\n  ErrorConnecting: {\n    component: AU,\n    title: \"Connect your UMA\",\n    prev: \"Connect\"\n    /* Connect */\n  },\n  DisconnectConfirmation: {\n    component: MD,\n    title: \"Confirm\",\n    prev: \"ConnectedWallet\"\n    /* ConnectedWallet */\n  },\n  DisconnectSuccess: {\n    component: _D,\n    title: \"Success\"\n  }\n}, Kn = Pc((e) => ({\n  step: kt.Empty,\n  setStep: (t) => e({ step: t }),\n  onBack: () => e(({ step: t }) => {\n    const n = yd[t];\n    return n.onBack && n.onBack(), n.prev ? { step: n.prev } : { step: t };\n  }),\n  isModalOpen: !1,\n  setIsModalOpen: (t) => e((n) => {\n    const r = yd[n.step];\n    return n.isModalOpen === !0 && t === !1 && r.onClose && r.onClose(), { isModalOpen: t };\n  })\n}));\nvar ga = {}, XU = {}, fa = react_dom__WEBPACK_IMPORTED_MODULE_1__;\nif (XU.NODE_ENV === \"production\")\n  ga.createRoot = fa.createRoot, ga.hydrateRoot = fa.hydrateRoot;\nelse {\n  var ys = fa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  ga.createRoot = function(e, t) {\n    ys.usingClientEntryPoint = !0;\n    try {\n      return fa.createRoot(e, t);\n    } finally {\n      ys.usingClientEntryPoint = !1;\n    }\n  }, ga.hydrateRoot = function(e, t, n) {\n    ys.usingClientEntryPoint = !0;\n    try {\n      return fa.hydrateRoot(e, t, n);\n    } finally {\n      ys.usingClientEntryPoint = !1;\n    }\n  };\n}\nfunction JU() {\n  return /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ p(IA, {}),\n    /* @__PURE__ */ p(hp, { styles: QU })\n  ] });\n}\nconst QU = gt`\n  html {\n    font-size: 1rem;\n  }\n`;\nfunction eN(e, t) {\n  customElements.define(\n    e,\n    class extends HTMLElement {\n      constructor() {\n        super();\n        we(this, \"root\");\n        this.attachShadow({ mode: \"open\" }), this.root = ga.createRoot(this.shadowRoot);\n      }\n      connectedCallback() {\n        var m, C, S;\n        const r = document.createElement(\"meta\");\n        r.setAttribute(\"name\", \"emotion-insertion-point\"), (m = this.shadowRoot) == null || m.appendChild(r);\n        const i = document.createElement(\"style\");\n        (document.head || document.getElementsByTagName(\"head\")[0]).appendChild(i), i.type = \"text/css\", i.innerHTML = `\n          @import url('https://fonts.googleapis.com/css2?family=Manrope:wght@200..800');\n        `;\n        const a = Sd({\n          key: \"uma-auth-client\",\n          container: r\n        }), s = this.getAttribute(\"app-identity-pubkey\");\n        if (s === null)\n          throw new Error(\n            `${e}: app-identity-pubkey attribute is required.`\n          );\n        const c = this.getAttribute(\"nostr-relay\");\n        if (c === null)\n          throw new Error(`${e}: nostr-relay attribute is required.`);\n        const l = this.getAttribute(\"redirect-uri\");\n        if (l === null)\n          throw new Error(`${e}: redirect-uri attribute is required.`);\n        const d = this.getAttribute(\"budget-amount\"), f = this.getAttribute(\"budget-currency\"), g = this.getAttribute(\"budget-period\");\n        let b;\n        d && f && g && (b = {\n          amountInLowestDenom: d,\n          currency: f,\n          period: g\n        });\n        const x = /* @__PURE__ */ p(react__WEBPACK_IMPORTED_MODULE_0__.StrictMode, { children: /* @__PURE__ */ p(s8, { value: a, children: /* @__PURE__ */ q(d8, { theme: mb.umaAuthSdkLight, children: [\n          /* @__PURE__ */ p(JU, {}),\n          /* @__PURE__ */ p(\n            t,\n            {\n              authConfig: {\n                identityNpub: s,\n                identityRelayUrl: c,\n                redirectUri: l,\n                requiredCommands: (C = this.getAttribute(\"required-commands\")) == null ? void 0 : C.split(\",\"),\n                optionalCommands: (S = this.getAttribute(\"optional-commands\")) == null ? void 0 : S.split(\",\"),\n                budget: b\n              }\n            }\n          )\n        ] }) }) });\n        this.root.render(x);\n      }\n      disconnectedCallback() {\n        this.root.unmount();\n      }\n    }\n  );\n}\nconst tN = (e) => {\n  const { step: t, setStep: n, onBack: r, isModalOpen: i, setIsModalOpen: o } = Kn(), a = yd[t], s = () => {\n    o(!1);\n  };\n  let c = /* @__PURE__ */ p(oN, {});\n  return a.prev ? c = /* @__PURE__ */ p(c1, { onClick: r, children: /* @__PURE__ */ p(\n    vt,\n    {\n      name: \"ChevronLeft\",\n      width: 18,\n      color: \"grayBlue43\",\n      iconProps: {\n        strokeWidth: \"2\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      }\n    }\n  ) }) : t === kt.Connect && (c = /* @__PURE__ */ p(\n    c1,\n    {\n      onClick: () => {\n        n(kt.WhatIsUma);\n      },\n      type: \"button\",\n      children: /* @__PURE__ */ p(\n        vt,\n        {\n          name: \"QuestionCircle\",\n          width: 16,\n          color: \"grayBlue43\",\n          iconProps: {\n            strokeWidth: \"1.8\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }\n        }\n      )\n    }\n  )), /* @__PURE__ */ p(\n    JA,\n    {\n      ghost: !0,\n      width: 432,\n      smKind: \"drawer\",\n      visible: i,\n      cancelHidden: !0,\n      onClose: s,\n      onCancel: s,\n      appendToElement: e.appendToElement,\n      children: /* @__PURE__ */ q(rN, { children: [\n        /* @__PURE__ */ q(nN, { children: [\n          c,\n          a.title ? /* @__PURE__ */ p(iN, { children: a.title }) : /* @__PURE__ */ p(vt, { name: \"Uma\", width: 34 }),\n          /* @__PURE__ */ p(c1, { onClick: s, type: \"button\", children: /* @__PURE__ */ p(\n            vt,\n            {\n              name: \"Close\",\n              width: 10,\n              color: \"grayBlue43\",\n              iconProps: {\n                strokeWidth: \"1.2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }\n            }\n          ) })\n        ] }),\n        /* @__PURE__ */ p(a.component, {})\n      ] })\n    }\n  );\n}, nN = G.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 16px;\n  padding: 24px 24px 12px 24px;\n`, rN = G.div`\n  display: flex;\n  flex-direction: column;\n  background: ${({ theme: e }) => e.bg};\n  border-radius: 24px;\n  box-shadow:\n    0px 0px 0px 1px rgba(0, 0, 0, 0.06),\n    0px 1px 1px -0.5px rgba(0, 0, 0, 0.06),\n    0px 3px 3px -1.5px rgba(0, 0, 0, 0.06),\n    0px 6px 6px -3px rgba(0, 0, 0, 0.06),\n    0px 12px 12px -6px rgba(0, 0, 0, 0.06),\n    0px 24px 24px -12px rgba(0, 0, 0, 0.06);\n`, c1 = G(wr)`\n  width: 32px;\n  height: 32px;\n  padding: 0px;\n  justify-self: flex-end;\n  border-radius: 50%;\n\n  &:hover {\n    background: #00000005;\n  }\n\n  &:active {\n    background: #00000008;\n  }\n`, iN = G.span`\n  color: ${({ theme: e }) => e.text};\n  font-family: Manrope;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 28px;\n`, oN = G.div`\n  width: 32px;\n`, aN = \"uma-connect-button\", sN = (e) => {\n  var C;\n  const t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null), { step: n, setStep: r, isModalOpen: i, setIsModalOpen: o } = Kn(), {\n    authConfig: a,\n    codeVerifier: s,\n    isConnectionValid: c,\n    oAuthTokenExchange: l,\n    setAuthConfig: d,\n    clearUserAuth: f,\n    address: g\n  } = vn(), b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1), x = c();\n  return a || d(e.authConfig), (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!g)\n      return;\n    let S = !1;\n    if (s && !x && n !== kt.WaitingForApproval && n !== kt.ErrorConnecting) {\n      r(kt.WaitingForApproval);\n      const T = new URLSearchParams(window.location.search), N = T.get(\"code\"), W = T.get(\"state\");\n      N && W && !b.current && (b.current = !0, l().catch((U) => {\n        console.error(U), f(), r(kt.ErrorConnecting);\n      }).finally(() => {\n        b.current = !1;\n      })), S = !0;\n    } else x && n === kt.WaitingForApproval && (r(kt.DoneConnecting), S = !0);\n    !i && S && setTimeout(() => {\n      o(!0);\n    }, 200);\n  }, [\n    s,\n    g,\n    x,\n    n,\n    i,\n    f,\n    l,\n    r,\n    o\n  ]), /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ p(\n      o9,\n      {\n        buttonRef: t,\n        onClick: () => {\n          x ? jo(g) ? r(kt.ConnectedUma) : r(kt.ConnectedWallet) : r(s && !x ? kt.WaitingForApproval : kt.Connect), o(!0);\n        },\n        address: g\n      }\n    ),\n    /* @__PURE__ */ p(\n      tN,\n      {\n        appendToElement: (C = t.current) == null ? void 0 : C.parentNode\n      }\n    )\n  ] });\n}, o9 = ({\n  onClick: e,\n  buttonRef: t,\n  address: n\n}) => {\n  let r = /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ p(vt, { name: \"Uma\", width: 24 }),\n    /* @__PURE__ */ p(l1, { children: \"Connect\" })\n  ] });\n  return jo(n) ? r = /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ p(l1, { children: n }),\n    /* @__PURE__ */ p(vt, { name: \"Uma\", width: 24 })\n  ] }) : n && (r = /* @__PURE__ */ q(xt, { children: [\n    /* @__PURE__ */ p(vt, { name: \"Zap\", width: 12 }),\n    /* @__PURE__ */ p(l1, { children: eg(n) })\n  ] })), /* @__PURE__ */ p(\n    cN,\n    {\n      onClick: e || (() => {\n      }),\n      ref: t,\n      clickable: !!e,\n      children: /* @__PURE__ */ p(lN, { children: r })\n    }\n  );\n}, cN = G(wr)`\n  background-color: var(--uma-connect-background, #0068c9);\n  border-radius: var(--uma-connect-radius, 999px);\n  padding-left: var(--uma-connect-padding-x, 32px);\n  padding-right: var(--uma-connect-padding-x, 32px);\n  padding-top: var(--uma-connect-padding-y, 16px);\n  padding-bottom: var(--uma-connect-padding-y, 16px);\n  color: var(--uma-connect-text-color, #ffffff);\n\n  ${({ clickable: e }) => !e && \"cursor: default;\"}\n`, lN = G.div`\n  display: flex;\n  flex-direction: row;\n  gap: 6px;\n  align-items: center;\n\n  span {\n    display: inline-flex;\n  }\n`, l1 = G.span`\n  font-size: 16px;\n  font-style: normal;\n  font-family: var(--uma-connect-font-family, \"Arial\");\n  font-size: var(--uma-connect-font-size, 16px);\n  font-weight: var(--uma-connect-font-weight, 600);\n  line-height: 24px; /* 150% */\n\n  display: block !important;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 180px;\n  overflow: hidden;\n`;\neN(aN, sN);\nconst wN = (e) => /* @__PURE__ */ p(\"div\", { style: { all: \"initial\" }, children: /* @__PURE__ */ p(\"uma-connect-button\", { ...e }) });\n\n//# sourceMappingURL=main-BAWg-Pqh.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/main-BAWg-Pqh.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/uma-auth-client.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@uma-sdk/uma-auth-client/dist/uma-auth-client.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Nip47Error: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   Nip47PublishError: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.h),\n/* harmony export */   Nip47PublishTimeoutError: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.e),\n/* harmony export */   Nip47ReplyTimeoutError: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.f),\n/* harmony export */   Nip47ResponseDecodingError: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   Nip47ResponseValidationError: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.j),\n/* harmony export */   Nip47TimeoutError: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   Nip47UnexpectedResponseError: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.k),\n/* harmony export */   Nip47WalletError: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   NwcRequester: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.N),\n/* harmony export */   UmaConnectButton: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.U),\n/* harmony export */   useNwcRequester: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.u),\n/* harmony export */   useOAuth: () => (/* reexport safe */ _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__.a)\n/* harmony export */ });\n/* harmony import */ var _main_BAWg_Pqh_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main-BAWg-Pqh.js */ \"(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/main-BAWg-Pqh.js\");\n\n\n//# sourceMappingURL=uma-auth-client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVtYS1zZGsvdW1hLWF1dGgtY2xpZW50L2Rpc3QvdW1hLWF1dGgtY2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRJO0FBZTFJO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wdy8uL25vZGVfbW9kdWxlcy9AdW1hLXNkay91bWEtYXV0aC1jbGllbnQvZGlzdC91bWEtYXV0aC1jbGllbnQuanM/ZGU1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiIGFzIHMsIGggYXMgbywgZSBhcyBhLCBmIGFzIGksIGkgYXMgcCwgaiBhcyB0LCBkIGFzIHUsIGsgYXMgTiwgYyBhcyBuLCBOIGFzIEUsIFUgYXMgYywgdSBhcyBsLCBhIGFzIFIgfSBmcm9tIFwiLi9tYWluLUJBV2ctUHFoLmpzXCI7XG5leHBvcnQge1xuICBzIGFzIE5pcDQ3RXJyb3IsXG4gIG8gYXMgTmlwNDdQdWJsaXNoRXJyb3IsXG4gIGEgYXMgTmlwNDdQdWJsaXNoVGltZW91dEVycm9yLFxuICBpIGFzIE5pcDQ3UmVwbHlUaW1lb3V0RXJyb3IsXG4gIHAgYXMgTmlwNDdSZXNwb25zZURlY29kaW5nRXJyb3IsXG4gIHQgYXMgTmlwNDdSZXNwb25zZVZhbGlkYXRpb25FcnJvcixcbiAgdSBhcyBOaXA0N1RpbWVvdXRFcnJvcixcbiAgTiBhcyBOaXA0N1VuZXhwZWN0ZWRSZXNwb25zZUVycm9yLFxuICBuIGFzIE5pcDQ3V2FsbGV0RXJyb3IsXG4gIEUgYXMgTndjUmVxdWVzdGVyLFxuICBjIGFzIFVtYUNvbm5lY3RCdXR0b24sXG4gIGwgYXMgdXNlTndjUmVxdWVzdGVyLFxuICBSIGFzIHVzZU9BdXRoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW1hLWF1dGgtY2xpZW50LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@uma-sdk/uma-auth-client/dist/uma-auth-client.js\n");

/***/ })

};
;